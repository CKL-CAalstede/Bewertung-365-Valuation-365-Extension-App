OBJECT Table 10400 Value Entry - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Wertposten;
               ENU=Value Entry];
    LookupPageID=Page5802;
    DrillDownPageID=Page5802;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 4   ;   ;Item Ledger Entry Type;Option      ;CaptionML=[DEU=Artikelpostenart;
                                                              ENU=Item Ledger Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung, ,Verbrauch fÅr Montage,Montage-Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 5   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[DEU=Herkunftsnr.;
                                                              ENU=Source No.] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 9   ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 10  ;   ;Source Posting Group;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF (Source Type=CONST(Vendor)) "Vendor Posting Group"
                                                                 ELSE IF (Source Type=CONST(Item)) "Inventory Posting Group";
                                                   CaptionML=[DEU=Herkunftsbuchungsgruppe;
                                                              ENU=Source Posting Group] }
    { 11  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 12  ;   ;Valued Quantity     ;Decimal       ;CaptionML=[DEU=Bewertete Menge;
                                                              ENU=Valued Quantity];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Item Ledger Entry Quantity;Decimal ;CaptionML=[DEU=Artikelpostenmenge;
                                                              ENU=Item Ledger Entry Quantity];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[DEU=Fakturierte Menge;
                                                              ENU=Invoiced Quantity];
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Cost per Unit       ;Decimal       ;CaptionML=[DEU=Lagerwert pro Einheit;
                                                              ENU=Cost per Unit];
                                                   AutoFormatType=2 }
    { 17  ;   ;Sales Amount (Actual);Decimal      ;CaptionML=[DEU=Verkaufsbetrag (tatsÑchl.);
                                                              ENU=Sales Amount (Actual)];
                                                   AutoFormatType=1 }
    { 22  ;   ;Salespers./Purch. Code;Code20      ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[DEU=Verk.-/EinkÑufercode;
                                                              ENU=Salespers./Purch. Code] }
    { 23  ;   ;Discount Amount     ;Decimal       ;CaptionML=[DEU=Rabattbetrag;
                                                              ENU=Discount Amount];
                                                   AutoFormatType=1 }
    { 24  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID] }
    { 25  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 28  ;   ;Applies-to Entry    ;Integer       ;CaptionML=[DEU=Ausgleich mit Lfd. Nr.;
                                                              ENU=Applies-to Entry] }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 41  ;   ;Source Type         ;Option        ;CaptionML=[DEU=Herkunftsart;
                                                              ENU=Source Type];
                                                   OptionCaptionML=[DEU=" ,Debitor,Kreditor,Artikel";
                                                                    ENU=" ,Customer,Vendor,Item"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 43  ;   ;Cost Amount (Actual);Decimal       ;CaptionML=[DEU=Einstandsbetrag (tatsÑchl.);
                                                              ENU=Cost Amount (Actual)];
                                                   AutoFormatType=1 }
    { 45  ;   ;Cost Posted to G/L  ;Decimal       ;CaptionML=[DEU=Gebuchte Lagerregulierung;
                                                              ENU=Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 46  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   AccessByPermission=TableData 223=R;
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 47  ;   ;Drop Shipment       ;Boolean       ;CaptionML=[DEU=Direktlieferung;
                                                              ENU=Drop Shipment] }
    { 48  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=No;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 58  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date] }
    { 61  ;   ;External Document No.;Code35       ;CaptionML=[DEU=Externe Belegnummer;
                                                              ENU=External Document No.] }
    { 68  ;   ;Cost Amount (Actual) (ACY);Decimal ;CaptionML=[DEU=Einst.-Betrag (tatsÑchl.) (BW);
                                                              ENU=Cost Amount (Actual) (ACY)];
                                                   AutoFormatType=1 }
    { 70  ;   ;Cost Posted to G/L (ACY);Decimal   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Gebuchte Lagerregulierung (BW);
                                                              ENU=Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 72  ;   ;Cost per Unit (ACY) ;Decimal       ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Lagerwert pro Einheit (BW);
                                                              ENU=Cost per Unit (ACY)];
                                                   AutoFormatType=2 }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Verkaufslieferung,Verkaufsrechnung,VerkaufsrÅcksendung,Verkaufsgutschrift,Einkaufslieferung,Einkaufsrechnung,RÅcklieferung,Einkaufsgutschrift,Umlagerungsausgang,Umlagerungseingang,Servicelieferung,Servicerechnung,Servicegutschrift,Gebuchte Montage";
                                                                    ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly] }
    { 80  ;   ;Document Line No.   ;Integer       ;CaptionML=[DEU=Belegzeilennr.;
                                                              ENU=Document Line No.] }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=[DEU=Auftragsart;
                                                              ENU=Order Type];
                                                   OptionCaptionML=[DEU=" ,Fertigung,Umlagerung,Service,Montage";
                                                                    ENU=" ,Production,Transfer,Service,Assembly"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly];
                                                   Editable=No }
    { 91  ;   ;Order No.           ;Code20        ;CaptionML=[DEU=Auftragsnr.;
                                                              ENU=Order No.];
                                                   Editable=No }
    { 92  ;   ;Order Line No.      ;Integer       ;CaptionML=[DEU=Auftragszeilennr.;
                                                              ENU=Order Line No.];
                                                   Editable=No }
    { 98  ;   ;Expected Cost       ;Boolean       ;CaptionML=[DEU=Soll-Kosten;
                                                              ENU=Expected Cost] }
    { 99  ;   ;Item Charge No.     ;Code20        ;TableRelation="Item Charge";
                                                   CaptionML=[DEU=Artikel Zu-/Abschlagsnr.;
                                                              ENU=Item Charge No.] }
    { 100 ;   ;Valued By Average Cost;Boolean     ;CaptionML=[DEU=Bew. z. Einst.-Pr. (durchschn.);
                                                              ENU=Valued By Average Cost] }
    { 102 ;   ;Partial Revaluation ;Boolean       ;CaptionML=[DEU=Teilneubewertung;
                                                              ENU=Partial Revaluation] }
    { 103 ;   ;Inventoriable       ;Boolean       ;CaptionML=[DEU=Einfluss auf Lagerwert;
                                                              ENU=Inventoriable] }
    { 104 ;   ;Valuation Date      ;Date          ;CaptionML=[DEU=Bewertungsdatum;
                                                              ENU=Valuation Date] }
    { 105 ;   ;Entry Type          ;Option        ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Direkte Kosten,Neubewertung,Rundung,Indirekte Kosten,Abweichung;
                                                                    ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance;
                                                   Editable=No }
    { 106 ;   ;Variance Type       ;Option        ;CaptionML=[DEU=Abweichungsart;
                                                              ENU=Variance Type];
                                                   OptionCaptionML=[DEU=" ,Einkauf,Material,KapazitÑt,KapazitÑtsgemeinkosten,Produktionsgemeinkosten,Fremdarbeitskosten";
                                                                    ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted"];
                                                   OptionString=[ ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted];
                                                   Editable=No }
    { 148 ;   ;Purchase Amount (Actual);Decimal   ;CaptionML=[DEU=Einkaufsbetrag (tatsÑchl.);
                                                              ENU=Purchase Amount (Actual)];
                                                   AutoFormatType=1 }
    { 149 ;   ;Purchase Amount (Expected);Decimal ;AccessByPermission=TableData 120=R;
                                                   CaptionML=[DEU=Einkaufsbetrag (erwartet);
                                                              ENU=Purchase Amount (Expected)];
                                                   AutoFormatType=1 }
    { 150 ;   ;Sales Amount (Expected);Decimal    ;AccessByPermission=TableData 110=R;
                                                   CaptionML=[DEU=Verkaufsbetrag (erwartet);
                                                              ENU=Sales Amount (Expected)];
                                                   AutoFormatType=1 }
    { 151 ;   ;Cost Amount (Expected);Decimal     ;CaptionML=[DEU=Einstandsbetrag (erwartet);
                                                              ENU=Cost Amount (Expected)];
                                                   AutoFormatType=1 }
    { 152 ;   ;Cost Amount (Non-Invtbl.);Decimal  ;AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-Betr. (lagerwertunabh.);
                                                              ENU=Cost Amount (Non-Invtbl.)];
                                                   AutoFormatType=1 }
    { 156 ;   ;Cost Amount (Expected) (ACY);Decimal;
                                                   CaptionML=[DEU=Einstandsbetrag (erw.) (BW);
                                                              ENU=Cost Amount (Expected) (ACY)];
                                                   AutoFormatType=1 }
    { 157 ;   ;Cost Amount (Non-Invtbl.)(ACY);Decimal;
                                                   AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-B. (lagerw.-unabh.)(BW);
                                                              ENU=Cost Amount (Non-Invtbl.)(ACY)];
                                                   AutoFormatType=1 }
    { 158 ;   ;Expected Cost Posted to G/L;Decimal;CaptionML=[DEU=Auf Sachkonto geb. Soll-Kosten;
                                                              ENU=Expected Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 159 ;   ;Exp. Cost Posted to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Auf Sachkto. geb. Soll-K. (BW);
                                                              ENU=Exp. Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 1000;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[DEU=Projektnr.;
                                                              ENU=Job No.] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[DEU=Projektaufgabennr.;
                                                              ENU=Job Task No.] }
    { 1002;   ;Job Ledger Entry No.;Integer       ;TableRelation="Job Ledger Entry"."Entry No.";
                                                   CaptionML=[DEU=Projektpostennr.;
                                                              ENU=Job Ledger Entry No.];
                                                   BlankZero=Yes }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5818;   ;Adjustment          ;Boolean       ;CaptionML=[DEU=Regulierung;
                                                              ENU=Adjustment];
                                                   Editable=No }
    { 5819;   ;Average Cost Exception;Boolean     ;CaptionML=[DEU=Durchschnittskostenausnahme;
                                                              ENU=Average Cost Exception] }
    { 5831;   ;Capacity Ledger Entry No.;Integer  ;TableRelation="Capacity Ledger Entry";
                                                   CaptionML=[DEU=KapazitÑtsposten Lfd. Nr.;
                                                              ENU=Capacity Ledger Entry No.] }
    { 5832;   ;Type                ;Option        ;CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=Arbeitsplatzgruppe,Arbeitsplatz, ,Ressource;
                                                                    ENU=Work Center,Machine Center, ,Resource];
                                                   OptionString=Work Center,Machine Center, ,Resource }
    { 5834;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Machine Center)) "Machine Center"
                                                                 ELSE IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 6602;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[DEU=Reklamationsgrundcode;
                                                              ENU=Return Reason Code] }
    { 5447700;;Production Cost     ;Boolean       ;AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionskosten;
                                                              ENU=Production Cost] }
    { 5448000;;Cost Policy Type    ;Option        ;AccessByPermission=TableData 5448000=R;
                                                   CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
    { 5452007;;Assets Type         ;Option        ;AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Vermîgensart;
                                                              ENU=Assets Type];
                                                   OptionCaptionML=[DEU=Umlaufvermîgen,,,,Archiviertes Vermîgen;
                                                                    ENU=Current Assets,,,,Archieved Assets];
                                                   OptionString=Current Assets,,,,Archived Assets }
    { 5452008;;Opening Evaluation  ;Boolean       ;AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Erîffnungs-Bewertung;
                                                              ENU=Opening Evaluation] }
    { 5452103;;Posting Date Archived;Date         ;AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Buchungsdatum Archiviert;
                                                              ENU=Posting Date Archived] }
    { 5452113;;Item Ledger Entry Quantity Ar.;Decimal;
                                                   AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Artikelpostenmenge Archiviert;
                                                              ENU=Item Ledger Entry Quantity Archived];
                                                   DecimalPlaces=0:5 }
    { 5452114;;Invoiced Quantity Archived;Decimal ;AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Fakturierte Menge Archiviert;
                                                              ENU=Invoiced Quantity Archived];
                                                   DecimalPlaces=0:5 }
    { 5452151;;Cost Amount (Expected) Arch.;Decimal;
                                                   AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Einstandsbetrag (erwartet) Archiviert;
                                                              ENU=Cost Amount (Expected) Archived];
                                                   AutoFormatType=1 }
    { 5452156;;Cost Amount (Exp.) (ACY) Arch.;Decimal;
                                                   AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Einstandsbetrag (erw.) (BW) Archiviert;
                                                              ENU=Cost Amount (Expected) (ACY) Archived];
                                                   AutoFormatType=1 }
    { 5452543;;Cost Amount (Actual) Archived;Decimal;
                                                   AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Einstandsbetrag (tatsÑchl.) Archiviert;
                                                              ENU=Cost Amount (Actual) Archived];
                                                   AutoFormatType=1 }
    { 5452568;;Cost Amount (Actual) (ACY) Ar.;Decimal;
                                                   AccessByPermission=TableData 5452007=R;
                                                   CaptionML=[DEU=Einst.-Betrag (tatsÑchlich) Archiviert (BW);
                                                              ENU=Cost Amount (Actual) (ACY) Archived];
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item Ledger Entry No.,Entry Type        ;SumIndexFields=Invoiced Quantity,Sales Amount (Expected),Sales Amount (Actual),Cost Amount (Expected),Cost Amount (Actual),Cost Amount (Non-Invtbl.),Cost Amount (Expected) (ACY),Cost Amount (Actual) (ACY),Cost Amount (Non-Invtbl.)(ACY),Purchase Amount (Actual),Purchase Amount (Expected),Discount Amount }
    { No ;Item Ledger Entry No.,Document No.,Document Line No.;
                                                   MaintainSQLIndex=No }
    {    ;Item No.,Posting Date,Item Ledger Entry Type,Entry Type,Variance Type,Item Charge No.,Location Code,Variant Code;
                                                   SumIndexFields=Invoiced Quantity,Sales Amount (Expected),Sales Amount (Actual),Cost Amount (Expected),Cost Amount (Actual),Cost Amount (Non-Invtbl.),Purchase Amount (Actual),Expected Cost Posted to G/L,Cost Posted to G/L,Item Ledger Entry Quantity,Cost Amount (Expected) (ACY),Cost Amount (Actual) (ACY) }
    { No ;Item No.,Posting Date,Item Ledger Entry Type,Entry Type,Variance Type,Item Charge No.,Location Code,Variant Code,Global Dimension 1 Code,Global Dimension 2 Code,Source Type,Source No.;
                                                   SumIndexFields=Invoiced Quantity,Sales Amount (Expected),Sales Amount (Actual),Cost Amount (Expected),Cost Amount (Actual),Cost Amount (Non-Invtbl.),Purchase Amount (Actual),Expected Cost Posted to G/L,Cost Posted to G/L,Item Ledger Entry Quantity }
    {    ;Document No.                             }
    {    ;Item No.,Valuation Date,Location Code,Variant Code;
                                                   SumIndexFields=Cost Amount (Expected),Cost Amount (Actual),Cost Amount (Expected) (ACY),Cost Amount (Actual) (ACY),Item Ledger Entry Quantity }
    {    ;Source Type,Source No.,Item No.,Posting Date,Entry Type,Adjustment,Item Ledger Entry Type;
                                                   SumIndexFields=Discount Amount,Cost Amount (Non-Invtbl.),Cost Amount (Actual),Cost Amount (Expected),Sales Amount (Actual),Sales Amount (Expected),Invoiced Quantity }
    {    ;Item Charge No.,Inventory Posting Group,Item No. }
    {    ;Capacity Ledger Entry No.,Entry Type    ;SumIndexFields=Cost Amount (Actual),Cost Amount (Actual) (ACY) }
    {    ;Order Type,Order No.,Order Line No.      }
    { No ;Source Type,Source No.,Global Dimension 1 Code,Global Dimension 2 Code,Item No.,Posting Date,Entry Type,Adjustment;
                                                   SumIndexFields=Discount Amount,Cost Amount (Non-Invtbl.),Cost Amount (Actual),Cost Amount (Expected),Sales Amount (Actual),Sales Amount (Expected),Invoiced Quantity }
    {    ;Job No.,Job Task No.,Document No.        }
    {    ;Item Ledger Entry Type,Posting Date,Item No.,Inventory Posting Group,Dimension Set ID;
                                                   SumIndexFields=Invoiced Quantity,Sales Amount (Actual),Purchase Amount (Actual) }
    { No ;Item Ledger Entry No.,Valuation Date     }
    {    ;Location Code,Inventory Posting Group    }
    {    ;Item Ledger Entry Type,Order No.,Valuation Date }
    {    ;Item Ledger Entry No.,Entry Type,Posting Date;
                                                   SumIndexFields=Invoiced Quantity,Cost Amount (Actual);
                                                   KeyGroups=CPL }
    {    ;Item No.,Valuation Date,Location Code,Variant Code,Item Ledger Entry Type;
                                                   SumIndexFields=Cost Amount (Expected),Cost Amount (Actual),Cost Amount (Expected) (ACY),Cost Amount (Actual) (ACY),Item Ledger Entry Quantity,Item Ledger Entry Quantity Ar.;
                                                   KeyGroups=CPL }
    {    ;Item No.,Entry Type,Cost per Unit,Item Ledger Entry Type,Posting Date;
                                                   KeyGroups=CPL;
                                                   MaintainSQLIndex=No }
    {    ;Item No.,Entry Type,Location Code,Variant Code,Cost per Unit,Item Ledger Entry Type,Posting Date;
                                                   KeyGroups=CPL }
    {    ;Inventory Posting Group,Posting Date,Item Ledger Entry Type }
    {    ;Gen. Prod. Posting Group,Posting Date,Item Ledger Entry Type }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Item Ledger Entry Type,Item Ledger Entry No.,Item No.,Posting Date,Source No.,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      UOMMgt@1003 : Codeunit 5402;
      GLSetupRead@1002 : Boolean;

    BEGIN
    END.
  }
}

OBJECT Table 10401 Source Code Setup - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=PrimÑrschlÅssel;
                                                              ENU=Primary Key] }
    { 2   ;   ;Sales               ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Verkauf;
                                                              ENU=Sales] }
    { 3   ;   ;Purchases           ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einkauf;
                                                              ENU=Purchases] }
    { 4   ;   ;Inventory Post Cost ;Code10        ;TableRelation="Source Code";
                                                   AccessByPermission=TableData 27=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lagerregulierung;
                                                              ENU=Inventory Post Cost] }
    { 5   ;   ;Exchange Rate Adjmt.;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Kursregulierung;
                                                              ENU=Exchange Rate Adjmt.] }
    { 6   ;   ;Post Recognition    ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Deaktivierung buchen;
                                                              ENU=Post Recognition] }
    { 7   ;   ;Post Value          ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Aktivierung buchen;
                                                              ENU=Post Value] }
    { 8   ;   ;Close Income Statement;Code10      ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=GuV-Konten Nullstellung;
                                                              ENU=Close Income Statement] }
    { 9   ;   ;Consolidation       ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Konsolidierung;
                                                              ENU=Consolidation] }
    { 10  ;   ;General Journal     ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Fibu Buch.-Blatt;
                                                              ENU=General Journal] }
    { 11  ;   ;Sales Journal       ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Verkaufs Buch.-Blatt;
                                                              ENU=Sales Journal] }
    { 12  ;   ;Purchase Journal    ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einkaufs Buch.-Blatt;
                                                              ENU=Purchase Journal] }
    { 13  ;   ;Cash Receipt Journal;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Zahlungseingangs Buch.-Blatt;
                                                              ENU=Cash Receipt Journal] }
    { 14  ;   ;Payment Journal     ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Zahlungsausgangs Buch.-Blatt;
                                                              ENU=Payment Journal] }
    { 16  ;   ;Item Journal        ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Artikel Buch.-Blatt;
                                                              ENU=Item Journal] }
    { 19  ;   ;Resource Journal    ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Ressourcen Buch.-Blatt;
                                                              ENU=Resource Journal] }
    { 20  ;   ;Job Journal         ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Projekt Buch.-Blatt;
                                                              ENU=Job Journal] }
    { 21  ;   ;Sales Entry Application;Code10     ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Verk.-Posten ausgleichen;
                                                              ENU=Sales Entry Application] }
    { 22  ;   ;Purchase Entry Application;Code10  ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Eink.-Posten ausgleichen;
                                                              ENU=Purchase Entry Application] }
    { 23  ;   ;VAT Settlement      ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=MwSt.-Abrechnung;
                                                              ENU=VAT Settlement] }
    { 24  ;   ;Compress G/L        ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Sachposten kompr.;
                                                              ENU=Compress G/L] }
    { 25  ;   ;Compress VAT Entries;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=MwSt.-Posten kompr.;
                                                              ENU=Compress VAT Entries] }
    { 26  ;   ;Compress Cust. Ledger;Code10       ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Debitorenposten kompr.;
                                                              ENU=Compress Cust. Ledger] }
    { 27  ;   ;Compress Vend. Ledger;Code10       ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Kreditorenposten kompr.;
                                                              ENU=Compress Vend. Ledger] }
    { 28  ;   ;Compress Item Ledger;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Artikelposten kompr.;
                                                              ENU=Compress Item Ledger] }
    { 31  ;   ;Compress Res. Ledger;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Ressourcenposten kompr.;
                                                              ENU=Compress Res. Ledger] }
    { 32  ;   ;Compress Job Ledger ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Projektposten kompr.;
                                                              ENU=Compress Job Ledger] }
    { 33  ;   ;Item Reclass. Journal;Code10       ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Umlagerungs Buch.-Blatt;
                                                              ENU=Item Reclass. Journal] }
    { 34  ;   ;Phys. Inventory Journal;Code10     ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Inventur Buch.-Blatt;
                                                              ENU=Phys. Inventory Journal] }
    { 35  ;   ;Compress Bank Acc. Ledger;Code10   ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Bankposten kompr.;
                                                              ENU=Compress Bank Acc. Ledger] }
    { 36  ;   ;Compress Check Ledger;Code10       ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Komprimierung von Scheckposten;
                                                              ENU=Compress Check Ledger] }
    { 37  ;   ;Financially Voided Check;Code10    ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Stornierter Scheck;
                                                              ENU=Financially Voided Check] }
    { 38  ;   ;Finance Charge Memo ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Zinsrechnung;
                                                              ENU=Finance Charge Memo] }
    { 39  ;   ;Reminder            ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Mahnung;
                                                              ENU=Reminder] }
    { 40  ;   ;Deleted Document    ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Gelîschter Beleg;
                                                              ENU=Deleted Document] }
    { 41  ;   ;Adjust Add. Reporting Currency;Code10;
                                                   TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=BerichtswÑhrung regulieren;
                                                              ENU=Adjust Add. Reporting Currency] }
    { 42  ;   ;Trans. Bank Rec. to Gen. Jnl.;Code10;
                                                   TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Bankkto. Ausgl. Fibu Buch.-Bl.;
                                                              ENU=Trans. Bank Rec. to Gen. Jnl.] }
    { 43  ;   ;IC General Journal  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=IC-Fibu Buch.-Blatt;
                                                              ENU=IC General Journal] }
    { 44  ;   ;Unapplied Empl. Entry Appln.;Code10;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Ni. gebucht. Mitarbeiterposten-Ausgl.;
                                                              ENU=Unapplied Empl. Entry Appln.] }
    { 45  ;   ;Unapplied Sales Entry Appln.;Code10;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Ni. gebucht. VK-Posten-Ausgl.;
                                                              ENU=Unapplied Sales Entry Appln.] }
    { 46  ;   ;Unapplied Purch. Entry Appln.;Code10;
                                                   TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Ni. gebucht. EK-Posten-Ausgl.;
                                                              ENU=Unapplied Purch. Entry Appln.] }
    { 47  ;   ;Reversal            ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Storno;
                                                              ENU=Reversal] }
    { 48  ;   ;Employee Entry Application;Code10  ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Mitarbeiterpostenausgleich;
                                                              ENU=Employee Entry Application] }
    { 49  ;   ;Payment Reconciliation Journal;Code10;
                                                   TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Zahlungsabstimmungsbuch.-Blatt;
                                                              ENU=Payment Reconciliation Journal] }
    { 840 ;   ;Cash Flow Worksheet ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Cashflowarbeitsblatt;
                                                              ENU=Cash Flow Worksheet] }
    { 900 ;   ;Assembly            ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Montage;
                                                              ENU=Assembly] }
    { 1000;   ;Job G/L Journal     ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Fibu Buch.-Blatt Projekt;
                                                              ENU=Job G/L Journal] }
    { 1001;   ;Job G/L WIP         ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=WIP-Projektsachposten;
                                                              ENU=Job G/L WIP] }
    { 1100;   ;G/L Entry to CA     ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Sachposten in Kostenrechnung;
                                                              ENU=G/L Entry to CA] }
    { 1102;   ;Cost Journal        ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Kosten-Buch.-Blatt;
                                                              ENU=Cost Journal] }
    { 1104;   ;Cost Allocation     ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Kostenzuteilung;
                                                              ENU=Cost Allocation] }
    { 1105;   ;Transfer Budget to Actual;Code10   ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Budget in Ist-Werte Åbertragen;
                                                              ENU=Transfer Budget to Actual] }
    { 5400;   ;Consumption Journal ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=FA-Verbrauchs Buch.-Blatt;
                                                              ENU=Consumption Journal] }
    { 5402;   ;Output Journal      ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=FA-Istmeldungs Buch.-Blatt;
                                                              ENU=Output Journal] }
    { 5403;   ;Flushing            ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Buchung;
                                                              ENU=Flushing] }
    { 5404;   ;Capacity Journal    ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=KapazitÑts Buch.-Blatt;
                                                              ENU=Capacity Journal] }
    { 5500;   ;Production Journal  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Produktions Buch.-Blatt;
                                                              ENU=Production Journal] }
    { 5600;   ;Fixed Asset Journal ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Anlagen Buch.-Blatt;
                                                              ENU=Fixed Asset Journal] }
    { 5601;   ;Fixed Asset G/L Journal;Code10     ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Anlagen-Fibu Buch.-Blatt;
                                                              ENU=Fixed Asset G/L Journal] }
    { 5602;   ;Insurance Journal   ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Versicherungs Buch.-Blatt;
                                                              ENU=Insurance Journal] }
    { 5603;   ;Compress FA Ledger  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Anlagenposten komprimieren;
                                                              ENU=Compress FA Ledger] }
    { 5604;   ;Compress Maintenance Ledger;Code10 ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Wartungsposten komprimieren;
                                                              ENU=Compress Maintenance Ledger] }
    { 5605;   ;Compress Insurance Ledger;Code10   ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Versicherungsposten kompr.;
                                                              ENU=Compress Insurance Ledger] }
    { 5700;   ;Transfer            ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Umlagerung;
                                                              ENU=Transfer] }
    { 5800;   ;Revaluation Journal ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Neubewertungs Buch.-Blatt;
                                                              ENU=Revaluation Journal] }
    { 5801;   ;Adjust Cost         ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstandspreisregulierung;
                                                              ENU=Adjust Cost] }
    { 5875;   ;Phys. Invt. Orders  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=InventurauftrÑge;
                                                              ENU=Phys. Invt. Orders] }
    { 5900;   ;Service Management  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Service;
                                                              ENU=Service Management] }
    { 7139;   ;Compress Item Budget;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Artikelbudget komprimieren;
                                                              ENU=Compress Item Budget] }
    { 7300;   ;Whse. Item Journal  ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Logistik Artikel Buch.-Blatt;
                                                              ENU=Whse. Item Journal] }
    { 7302;   ;Whse. Phys. Invt. Journal;Code10   ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Logistik Inventur Buch.-Blatt;
                                                              ENU=Whse. Phys. Invt. Journal] }
    { 7303;   ;Whse. Reclassification Journal;Code10;
                                                   TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Logistik Umlag. Buch.-Blatt;
                                                              ENU=Whse. Reclassification Journal] }
    { 7304;   ;Whse. Put-away      ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einlagerung;
                                                              ENU=Whse. Put-away] }
    { 7305;   ;Whse. Pick          ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Kommissionierung;
                                                              ENU=Whse. Pick] }
    { 7306;   ;Whse. Movement      ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lagerpl.-Umlagerung;
                                                              ENU=Whse. Movement] }
    { 7307;   ;Compress Whse. Entries;Code10      ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lagerplatzposten kompr.;
                                                              ENU=Compress Whse. Entries] }
    { 5005270;;Delivery Reminder   ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lieferanmahnung;
                                                              ENU=Delivery Reminder] }
    { 5005350;;Phys. Invt. Order   ;Code10        ;TableRelation="Source Code";
                                                   ObsoleteState=Pending;
                                                   ObsoleteReason=Merged to W1;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Inventurauftrag;
                                                              ENU=Phys. Invt. Order] }
    { 5447560;;Item Valuation Journal;Code10      ;TableRelation="Source Code";
                                                   AccessByPermission=TableData 5447603=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Artikel Bewertung Buch.-Blatt;
                                                              ENU=Item Valuation Journal] }
    { 5447561;;Valuation Post Cost ;Code10        ;TableRelation="Source Code";
                                                   AccessByPermission=Report 5447615=X;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Bewertungregulierung;
                                                              ENU=Valuation Post Cost] }
    { 5448000;;Costing Policy Worksheet;Code10    ;TableRelation="Source Code";
                                                   AccessByPermission=TableData 5448000=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Werteflusstrategie Vorschlag;
                                                              ENU=Costing Policy Worksheet] }
    { 5452013;;Opening Evaluation Journal;Code10  ;TableRelation="Source Code";
                                                   AccessByPermission=TableData 5452007=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Erîffnungs-Bewertung Buch.-Blatt;
                                                              ENU=Opening Evaluation Journal] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 10402 Avg. Cost Calc. Ov. - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Einst.-Pr. (durchschn.)-Ber., öbersicht;
               ENU=Average Cost Calc. Overview];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 2   ;   ;Type                ;Option        ;CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=Abschlussposten,Zugang,Ausgeglichener Zugang,Ausgeglichener Abgang,Abgang,Neubewertung;
                                                                    ENU=Closing Entry,Increase,Applied Increase,Applied Decrease,Decrease,Revaluation];
                                                   OptionString=Closing Entry,Increase,Applied Increase,Applied Decrease,Decrease,Revaluation }
    { 3   ;   ;Valuation Date      ;Date          ;CaptionML=[DEU=Bewertungsdatum;
                                                              ENU=Valuation Date] }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 5   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 6   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 7   ;   ;Cost is Adjusted    ;Boolean       ;CaptionML=[DEU=Einstandspreis ist reguliert;
                                                              ENU=Cost is Adjusted] }
    { 11  ;   ;Attached to Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Gehîrt zu Postennr.;
                                                              ENU=Attached to Entry No.] }
    { 12  ;   ;Attached to Valuation Date;Date    ;CaptionML=[DEU=Gehîrt zu Bewertungsdatum;
                                                              ENU=Attached to Valuation Date] }
    { 13  ;   ;Level               ;Integer       ;CaptionML=[DEU=Ebene;
                                                              ENU=Level] }
    { 21  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 22  ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 23  ;   ;Entry Type          ;Option        ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung, ,Verbrauch fÅr Montage,Montage-Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 24  ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Verkaufslieferung,Verkaufsrechnung,VerkaufsrÅcksendung,Verkaufsgutschrift,Einkaufslieferung,Einkaufsrechnung,RÅcklieferung,Einkaufsgutschrift,Umlagerungsausgang,Umlagerungseingang,Servicelieferung,Servicerechnung,Servicegutschrift";
                                                                    ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo] }
    { 25  ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 26  ;   ;Document Line No.   ;Integer       ;CaptionML=[DEU=Belegzeilennr.;
                                                              ENU=Document Line No.] }
    { 27  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 31  ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 32  ;   ;Applied Quantity    ;Integer       ;CaptionML=[DEU=Ausgeglichene Menge;
                                                              ENU=Applied Quantity] }
    { 33  ;   ;Cost Amount (Expected);Decimal     ;CaptionML=[DEU=Einstandsbetrag (erwartet);
                                                              ENU=Cost Amount (Expected)] }
    { 34  ;   ;Cost Amount (Actual);Decimal       ;CaptionML=[DEU=Einstandsbetrag (tatsÑchl.);
                                                              ENU=Cost Amount (Actual)] }
    { 5448000;;Cost Policy Type    ;Option        ;AccessByPermission=TableData 5448000=R;
                                                   CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
    { 5448001;;Costing Method      ;Option        ;InitValue=[ ];
                                                   AccessByPermission=TableData 5448000=R;
                                                   CaptionML=[DEU=Lagerabgangsmethode;
                                                              ENU=Costing Method];
                                                   OptionCaptionML=[DEU="FIFO,LIFO,AusgewÑhlt,Durchschnitt,Standard, ";
                                                                    ENU="FIFO,LIFO,Specific,Average,Standard, "];
                                                   OptionString=[FIFO,LIFO,Specific,Average,Standard, ] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Attached to Valuation Date,Attached to Entry No.,Type }
    {    ;Item Ledger Entry No.                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ValueEntry@1003 : Record 5802;

    BEGIN
    END.
  }
}

OBJECT Table 10403 Gen. Post. Setup - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Buchungsmatrix Einrichtung;
               ENU=General Posting Setup];
    LookupPageID=Page314;
    DrillDownPageID=Page314;
  }
  FIELDS
  {
    { 1   ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 2   ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group];
                                                   NotBlank=Yes }
    { 10  ;   ;Sales Account       ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Warenverkaufskonto;
                                                              ENU=Sales Account] }
    { 11  ;   ;Sales Line Disc. Account;Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Zeilenrabattkonto;
                                                              ENU=Sales Line Disc. Account] }
    { 12  ;   ;Sales Inv. Disc. Account;Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Rechnungsrabattkonto;
                                                              ENU=Sales Inv. Disc. Account] }
    { 13  ;   ;Sales Pmt. Disc. Debit Acc.;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Skonto Sollkonto;
                                                              ENU=Sales Pmt. Disc. Debit Acc.] }
    { 14  ;   ;Purch. Account      ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Wareneinkaufskonto;
                                                              ENU=Purch. Account] }
    { 15  ;   ;Purch. Line Disc. Account;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Zeilenrabattkonto;
                                                              ENU=Purch. Line Disc. Account] }
    { 16  ;   ;Purch. Inv. Disc. Account;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Rechnungsrabattkonto;
                                                              ENU=Purch. Inv. Disc. Account] }
    { 17  ;   ;Purch. Pmt. Disc. Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Skonto Habenkonto;
                                                              ENU=Purch. Pmt. Disc. Credit Acc.] }
    { 18  ;   ;COGS Account        ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerverbrauchskonto;
                                                              ENU=COGS Account] }
    { 19  ;   ;Inventory Adjmt. Account;Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerkorrekturkonto;
                                                              ENU=Inventory Adjmt. Account] }
    { 27  ;   ;Sales Credit Memo Account;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Gutschriftskonto;
                                                              ENU=Sales Credit Memo Account] }
    { 28  ;   ;Purch. Credit Memo Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Gutschriftskonto;
                                                              ENU=Purch. Credit Memo Account] }
    { 30  ;   ;Sales Pmt. Disc. Credit Acc.;Code20;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Skonto Habenkonto;
                                                              ENU=Sales Pmt. Disc. Credit Acc.] }
    { 31  ;   ;Purch. Pmt. Disc. Debit Acc.;Code20;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Skonto Sollkonto;
                                                              ENU=Purch. Pmt. Disc. Debit Acc.] }
    { 32  ;   ;Sales Pmt. Tol. Debit Acc.;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Zahlungstol. Sollkonto;
                                                              ENU=Sales Pmt. Tol. Debit Acc.] }
    { 33  ;   ;Sales Pmt. Tol. Credit Acc.;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verk.-Zahlungstol. Habenkonto;
                                                              ENU=Sales Pmt. Tol. Credit Acc.] }
    { 34  ;   ;Purch. Pmt. Tol. Debit Acc.;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Zahlungstol. Sollkonto;
                                                              ENU=Purch. Pmt. Tol. Debit Acc.] }
    { 35  ;   ;Purch. Pmt. Tol. Credit Acc.;Code20;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Zahlungstol. Habenkonto;
                                                              ENU=Purch. Pmt. Tol. Credit Acc.] }
    { 36  ;   ;Sales Prepayments Account;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Verkaufsvorauszahlungs-Konto;
                                                              ENU=Sales Prepayments Account] }
    { 37  ;   ;Purch. Prepayments Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Einkaufsvorauszahlungs-Konto;
                                                              ENU=Purch. Prepayments Account] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 51  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[DEU=Alle Konten in Lookup anzeigen;
                                                              ENU=View All Accounts on Lookup] }
    { 5600;   ;Purch. FA Disc. Account;Code20     ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Eink.-Anlagenrabattkonto;
                                                              ENU=Purch. FA Disc. Account] }
    { 5801;   ;Invt. Accrual Acc. (Interim);Code20;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerzugangskonto (Interim);
                                                              ENU=Invt. Accrual Acc. (Interim)] }
    { 5803;   ;COGS Account (Interim);Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerverbrauchskonto (Interim);
                                                              ENU=COGS Account (Interim)] }
    { 5447700;;Direct Prod. Cost Account;Code20   ;TableRelation="G/L Account";
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Direkte Produktionskostenkonto;
                                                              ENU=Direct Prod. Cost Account] }
    { 5447701;;Overhead Prod. Cost Account;Code20 ;TableRelation="G/L Account";
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Indirekte Produktionskostenkonto;
                                                              ENU=Overhead Prod. Cost Account] }
    { 99000752;;Direct Cost Applied Account;Code20;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Direkte Kosten Verrech.-Konto;
                                                              ENU=Direct Cost Applied Account] }
    { 99000753;;Overhead Applied Account;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Gemeinkostenverrechnungskonto;
                                                              ENU=Overhead Applied Account] }
    { 99000754;;Purchase Variance Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Einkaufsabweichungskonto;
                                                              ENU=Purchase Variance Account] }
  }
  KEYS
  {
    {    ;Gen. Bus. Posting Group,Gen. Prod. Posting Group;
                                                   Clustered=Yes }
    {    ;Gen. Prod. Posting Group,Gen. Bus. Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      PostingSetupMgt@1004 : Codeunit 48;

    BEGIN
    END.
  }
}

OBJECT Table 10404 Inventory Setup - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    Permissions=TableData 5896=m;
    CaptionML=[DEU=Lager Einrichtung;
               ENU=Inventory Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[DEU=PrimÑrschlÅssel;
                                                              ENU=Primary Key] }
    { 2   ;   ;Automatic Cost Posting;Boolean     ;OnValidate=VAR
                                                                GLSetup@1000 : Record 98;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Automatische Lagerbuchung;
                                                              ENU=Automatic Cost Posting] }
    { 3   ;   ;Location Mandatory  ;Boolean       ;AccessByPermission=TableData 14=R;
                                                   CaptionML=[DEU=Lagerort notwendig;
                                                              ENU=Location Mandatory] }
    { 4   ;   ;Item Nos.           ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[DEU=Artikelnummern;
                                                              ENU=Item Nos.] }
    { 30  ;   ;Automatic Cost Adjustment;Option   ;CaptionML=[DEU=Automatische Lagerregulierung;
                                                              ENU=Automatic Cost Adjustment];
                                                   OptionCaptionML=[DEU=Nie,Tag,Woche,Monat,Quartal,Jahr,Immer;
                                                                    ENU=Never,Day,Week,Month,Quarter,Year,Always];
                                                   OptionString=Never,Day,Week,Month,Quarter,Year,Always }
    { 40  ;   ;Prevent Negative Inventory;Boolean ;CaptionML=[DEU=Negativen Lagerbestand verhindern;
                                                              ENU=Prevent Negative Inventory] }
    { 50  ;   ;Skip Prompt to Create Item;Boolean ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Aufforderung zur Artikelerstellung Åberspringen;
                                                              ENU=Skip Prompt to Create Item] }
    { 51  ;   ;Copy Item Descr. to Entries;Boolean;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Artikelbeschreibung in Posten kopieren;
                                                              ENU=Copy Item Descr. to Entries] }
    { 5700;   ;Transfer Order Nos. ;Code20        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[DEU=Umlag.-Auftragsnummern;
                                                              ENU=Transfer Order Nos.] }
    { 5701;   ;Posted Transfer Shpt. Nos.;Code20  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[DEU=Geb. Umlag.-Ausgangsnummern;
                                                              ENU=Posted Transfer Shpt. Nos.] }
    { 5702;   ;Posted Transfer Rcpt. Nos.;Code20  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[DEU=Geb. Umlag.-Eingangsnummern;
                                                              ENU=Posted Transfer Rcpt. Nos.] }
    { 5703;   ;Copy Comments Order to Shpt.;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[DEU=Bem. Uml.-Auftr. in Ausg. kop.;
                                                              ENU=Copy Comments Order to Shpt.] }
    { 5704;   ;Copy Comments Order to Rcpt.;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[DEU=Bem. Uml.-Auftr. in Eing. kop.;
                                                              ENU=Copy Comments Order to Rcpt.] }
    { 5718;   ;Nonstock Item Nos.  ;Code20        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5718=R;
                                                   CaptionML=[DEU=Katalogartikelnr.;
                                                              ENU=Catalog Item Nos.] }
    { 5790;   ;Outbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[DEU=Ausgeh. Lagerdurchlaufzeit;
                                                              ENU=Outbound Whse. Handling Time] }
    { 5791;   ;Inbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[DEU=Eingeh. Lagerdurchlaufzeit;
                                                              ENU=Inbound Whse. Handling Time] }
    { 5800;   ;Expected Cost Posting to G/L;Boolean;
                                                   OnValidate=VAR
                                                                ChangeExpCostPostToGL@1000 : Codeunit 5811;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Soll-Kosten buchen;
                                                              ENU=Expected Cost Posting to G/L] }
    { 5801;   ;Default Costing Method;Option      ;CaptionML=[DEU=StandardmÑ·ige Lagerabgangsmethode;
                                                              ENU=Default Costing Method];
                                                   OptionCaptionML=[DEU=FIFO,LIFO,Spezifisch,Durchschnitt,Standard;
                                                                    ENU=FIFO,LIFO,Specific,Average,Standard];
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 5804;   ;Average Cost Calc. Type;Option     ;InitValue=Item & Location & Variant;
                                                   CaptionML=[DEU=Einst.-Pr. (durchschn.) Ber.-Art;
                                                              ENU=Average Cost Calc. Type];
                                                   OptionCaptionML=[DEU=" ,Artikel,Artikel & Lagerort & Variante";
                                                                    ENU=" ,Item,Item & Location & Variant"];
                                                   OptionString=[ ,Item,Item & Location & Variant];
                                                   NotBlank=Yes }
    { 5805;   ;Average Cost Period ;Option        ;InitValue=Day;
                                                   CaptionML=[DEU=Durchschnittskostenperiode;
                                                              ENU=Average Cost Period];
                                                   OptionCaptionML=[DEU=" ,Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode";
                                                                    ENU=" ,Day,Week,Month,Quarter,Year,Accounting Period"];
                                                   OptionString=[ ,Day,Week,Month,Quarter,Year,Accounting Period];
                                                   NotBlank=Yes }
    { 5875;   ;Phys. Invt. Order Nos.;Code20      ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5875=R;
                                                   CaptionML=[DEU=Nummern fÅr physischen Lagerauftrag;
                                                              ENU=Phys. Invt. Order Nos.] }
    { 5876;   ;Posted Phys. Invt. Order Nos.;Code20;
                                                   TableRelation="No. Series";
                                                   AccessByPermission=TableData 5875=R;
                                                   CaptionML=[DEU=Nummern fÅr gebuchten physischen Lagerauftrag;
                                                              ENU=Posted Phys. Invt. Order Nos.] }
    { 7101;   ;Item Group Dimension Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[DEU=Artikelgruppen-Dimensionscode;
                                                              ENU=Item Group Dimension Code] }
    { 7300;   ;Inventory Put-away Nos.;Code20     ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7340=R;
                                                   CaptionML=[DEU=Einlagerungsnummern;
                                                              ENU=Inventory Put-away Nos.] }
    { 7301;   ;Inventory Pick Nos. ;Code20        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7342=R;
                                                   CaptionML=[DEU=Kommissionierungsnummern;
                                                              ENU=Inventory Pick Nos.] }
    { 7302;   ;Posted Invt. Put-away Nos.;Code20  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7340=R;
                                                   CaptionML=[DEU=Geb. Einlagerungsnummern;
                                                              ENU=Posted Invt. Put-away Nos.] }
    { 7303;   ;Posted Invt. Pick Nos.;Code20      ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7342=R;
                                                   CaptionML=[DEU=Geb. Kommissionierungsnummern;
                                                              ENU=Posted Invt. Pick Nos.] }
    { 7304;   ;Inventory Movement Nos.;Code20     ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[DEU=Nummern fÅr Lagerbestandsumlagerung;
                                                              ENU=Inventory Movement Nos.] }
    { 7305;   ;Registered Invt. Movement Nos.;Code20;
                                                   TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[DEU=Reg. Nummern fÅr Lagerbestandsumlagerung;
                                                              ENU=Registered Invt. Movement Nos.] }
    { 7306;   ;Internal Movement Nos.;Code20      ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[DEU=Interne Umlagerungsnummern;
                                                              ENU=Internal Movement Nos.] }
    { 5005350;;Phys. Inv. Order Nos.;Code20       ;TableRelation="No. Series";
                                                   ObsoleteState=Pending;
                                                   ObsoleteReason=Merged to W1;
                                                   CaptionML=[DEU=Nummern physischer InventurauftrÑge;
                                                              ENU=Phys. Inv. Order Nos.] }
    { 5005352;;Posted Phys. Inv. Order Nos.;Code20;TableRelation="No. Series";
                                                   ObsoleteState=Pending;
                                                   ObsoleteReason=Merged to W1;
                                                   CaptionML=[DEU=Nummern der gebuchten physischen InventurauftrÑge;
                                                              ENU=Posted Phys. Inv. Order Nos.] }
    { 5447700;;Production Cost Posting to G/L;Boolean;
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionskosten buchen;
                                                              ENU=Production Cost Posting to G/L] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemLedgEntry@1000 : Record 32;
      Item@1002 : Record 27;
      InvtAdjmtEntryOrder@1003 : Record 5896;
      ObjTransl@1011 : Record 377;

    BEGIN
    END.
  }
}

OBJECT Table 10405 Production Order - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    Permissions=TableData 5410=r;
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               InvtAdjmtEntryOrder@1000 : Record 5896;
             BEGIN
             END;

    OnDelete=VAR
               ItemLedgEntry@1000 : Record 32;
               CapLedgEntry@1001 : Record 5832;
               PurchLine@1002 : Record 39;
               RefreshRecord@1003 : Boolean;
             BEGIN
             END;

    CaptionML=[DEU=Fertigungsauftrag;
               ENU=Production Order];
    LookupPageID=Page99000815;
    DrillDownPageID=Page99000815;
  }
  FIELDS
  {
    { 1   ;   ;Status              ;Option        ;CaptionML=[DEU=Status;
                                                              ENU=Status];
                                                   OptionCaptionML=[DEU=Simuliert,Geplant,Fest geplant,Freigegeben,Beendet;
                                                                    ENU=Simulated,Planned,Firm Planned,Released,Finished];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished }
    { 2   ;   ;No.                 ;Code20        ;TableRelation="Production Order".No. WHERE (Status=FIELD(Status));
                                                   ValidateTableRelation=No;
                                                   AltSearchField=Search Description;
                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 3   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 4   ;   ;Search Description  ;Code100       ;CaptionML=[DEU=Suchbegriff;
                                                              ENU=Search Description] }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=[DEU=Beschreibung 2;
                                                              ENU=Description 2] }
    { 6   ;   ;Creation Date       ;Date          ;CaptionML=[DEU=Errichtungsdatum;
                                                              ENU=Creation Date];
                                                   Editable=No }
    { 7   ;   ;Last Date Modified  ;Date          ;CaptionML=[DEU=Korrigiert am;
                                                              ENU=Last Date Modified];
                                                   Editable=No }
    { 9   ;   ;Source Type         ;Option        ;CaptionML=[DEU=Herkunftsart;
                                                              ENU=Source Type];
                                                   OptionCaptionML=[DEU=Artikel,Fertigungsfamilie,Verkaufskopf;
                                                                    ENU=Item,Family,Sales Header];
                                                   OptionString=Item,Family,Sales Header }
    { 10  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Item)) Item WHERE (Type=CONST(Inventory))
                                                                 ELSE IF (Source Type=CONST(Family)) Family
                                                                 ELSE IF (Status=CONST(Simulated),
                                                                          Source Type=CONST(Sales Header)) "Sales Header".No. WHERE (Document Type=CONST(Quote))
                                                                          ELSE IF (Status=FILTER(Planned..),
                                                                                   Source Type=CONST(Sales Header)) "Sales Header".No. WHERE (Document Type=CONST(Order));
                                                   OnValidate=VAR
                                                                Item@1000 : Record 27;
                                                                Family@1001 : Record 99000773;
                                                                SalesHeader@1002 : Record 36;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Herkunftsnr.;
                                                              ENU=Source No.] }
    { 11  ;   ;Routing No.         ;Code20        ;TableRelation="Routing Header";
                                                   CaptionML=[DEU=Arbeitsplannr.;
                                                              ENU=Routing No.] }
    { 15  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 16  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 17  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 19  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Prod. Order Comment Line" WHERE (Status=FIELD(Status),
                                                                                                       Prod. Order No.=FIELD(No.)));
                                                   CaptionML=[DEU=Bemerkung;
                                                              ENU=Comment];
                                                   Editable=No }
    { 20  ;   ;Starting Time       ;Time          ;CaptionML=[DEU=Startzeit;
                                                              ENU=Starting Time] }
    { 21  ;   ;Starting Date       ;Date          ;CaptionML=[DEU=Startdatum;
                                                              ENU=Starting Date] }
    { 22  ;   ;Ending Time         ;Time          ;CaptionML=[DEU=Endzeit;
                                                              ENU=Ending Time] }
    { 23  ;   ;Ending Date         ;Date          ;CaptionML=[DEU=Enddatum;
                                                              ENU=Ending Date] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[DEU=FÑlligkeitsdatum;
                                                              ENU=Due Date] }
    { 25  ;   ;Finished Date       ;Date          ;CaptionML=[DEU=Fertigstellungsdatum;
                                                              ENU=Finished Date];
                                                   Editable=No }
    { 28  ;   ;Blocked             ;Boolean       ;CaptionML=[DEU=Gesperrt;
                                                              ENU=Blocked] }
    { 30  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Shortcutdimensionscode 1;
                                                              ENU=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 31  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Shortcutdimensionscode 2;
                                                              ENU=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 32  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 33  ;   ;Bin Code            ;Code20        ;TableRelation=IF (Source Type=CONST(Item)) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                              Item Filter=FIELD(Source No.))
                                                                                                              ELSE IF (Source Type=FILTER(<>Item)) Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Lagerplatzcode;
                                                              ENU=Bin Code] }
    { 34  ;   ;Replan Ref. No.     ;Code20        ;CaptionML=[DEU=Neuplanungsref.-Nr.;
                                                              ENU=Replan Ref. No.];
                                                   Editable=No }
    { 35  ;   ;Replan Ref. Status  ;Option        ;CaptionML=[DEU=Neuplanungsref.-Status;
                                                              ENU=Replan Ref. Status];
                                                   OptionCaptionML=[DEU=Simuliert,Geplant,Fest geplant,Freigegeben,Beendet;
                                                                    ENU=Simulated,Planned,Firm Planned,Released,Finished];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished;
                                                   Editable=No }
    { 38  ;   ;Low-Level Code      ;Integer       ;CaptionML=[DEU=StÅcklistenebene;
                                                              ENU=Low-Level Code];
                                                   Editable=No }
    { 40  ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 41  ;   ;Unit Cost           ;Decimal       ;CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost];
                                                   DecimalPlaces=2:5 }
    { 42  ;   ;Cost Amount         ;Decimal       ;CaptionML=[DEU=Einstandsbetrag;
                                                              ENU=Cost Amount];
                                                   DecimalPlaces=2:2 }
    { 47  ;   ;Work Center Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Work Center";
                                                   CaptionML=[DEU=Arbeitsplatzgruppenfilter;
                                                              ENU=Work Center Filter] }
    { 48  ;   ;Capacity Type Filter;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=KapazitÑtsartenfilter;
                                                              ENU=Capacity Type Filter];
                                                   OptionCaptionML=[DEU=Arbeitsplatzgruppe,Arbeitsplatz;
                                                                    ENU=Work Center,Machine Center];
                                                   OptionString=Work Center,Machine Center }
    { 49  ;   ;Capacity No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=IF (Capacity Type Filter=CONST(Work Center)) "Machine Center"
                                                                 ELSE IF (Capacity Type Filter=CONST(Machine Center)) "Work Center";
                                                   CaptionML=[DEU=KapazitÑtsnr.-Filter;
                                                              ENU=Capacity No. Filter] }
    { 50  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Datumsfilter;
                                                              ENU=Date Filter] }
    { 51  ;   ;Expected Operation Cost Amt.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Routing Line"."Expected Operation Cost Amt." WHERE (Status=FIELD(Status),
                                                                                                                                    Prod. Order No.=FIELD(No.)));
                                                   CaptionML=[DEU=Soll-Arbeitsgangkosten;
                                                              ENU=Expected Operation Cost Amt.];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 52  ;   ;Expected Component Cost Amt.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Cost Amount" WHERE (Status=FIELD(Status),
                                                                                                                Prod. Order No.=FIELD(No.),
                                                                                                                Due Date=FIELD(Date Filter)));
                                                   CaptionML=[DEU=Soll-Komponentenkosten;
                                                              ENU=Expected Component Cost Amt.];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 55  ;   ;Actual Time Used    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Capacity Ledger Entry".Quantity WHERE (Order Type=CONST(Production),
                                                                                                           Order No.=FIELD(No.),
                                                                                                           Type=FIELD(Capacity Type Filter),
                                                                                                           No.=FIELD(Capacity No. Filter),
                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[DEU=Ist-Zeit;
                                                              ENU=Actual Time Used];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 56  ;   ;Allocated Capacity Need;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Capacity Need"."Needed Time" WHERE (Status=FIELD(Status),
                                                                                                                    Prod. Order No.=FIELD(No.),
                                                                                                                    Type=FIELD(Capacity Type Filter),
                                                                                                                    No.=FIELD(Capacity No. Filter),
                                                                                                                    Work Center No.=FIELD(Work Center Filter),
                                                                                                                    Date=FIELD(Date Filter),
                                                                                                                    Requested Only=CONST(No)));
                                                   CaptionML=[DEU=Zugewiesener KapazitÑtsbedarf;
                                                              ENU=Allocated Capacity Need];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 57  ;   ;Expected Capacity Need;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Capacity Need"."Needed Time" WHERE (Status=FIELD(Status),
                                                                                                                    Prod. Order No.=FIELD(No.),
                                                                                                                    Type=FIELD(Capacity Type Filter),
                                                                                                                    No.=FIELD(Capacity No. Filter),
                                                                                                                    Work Center No.=FIELD(Work Center Filter),
                                                                                                                    Date=FIELD(Date Filter),
                                                                                                                    Requested Only=CONST(No)));
                                                   CaptionML=[DEU=Erw. KapazitÑtsbedarf;
                                                              ENU=Expected Capacity Need];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 80  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[DEU=Nummernserie;
                                                              ENU=No. Series];
                                                   Editable=No }
    { 82  ;   ;Planned Order No.   ;Code20        ;CaptionML=[DEU=Geplante Auftragsnr.;
                                                              ENU=Planned Order No.] }
    { 83  ;   ;Firm Planned Order No.;Code20      ;CaptionML=[DEU=Fest geplante Auftragsnr.;
                                                              ENU=Firm Planned Order No.] }
    { 85  ;   ;Simulated Order No. ;Code20        ;CaptionML=[DEU=Simulierte Auftragsnr.;
                                                              ENU=Simulated Order No.] }
    { 92  ;   ;Expected Material Ovhd. Cost;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Overhead Amount" WHERE (Status=FIELD(Status),
                                                                                                                    Prod. Order No.=FIELD(No.)));
                                                   CaptionML=[DEU=Soll-Materialgemeinkosten;
                                                              ENU=Expected Material Ovhd. Cost];
                                                   DecimalPlaces=2:2;
                                                   Editable=No }
    { 94  ;   ;Expected Capacity Ovhd. Cost;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Routing Line"."Expected Capacity Ovhd. Cost" WHERE (Status=FIELD(Status),
                                                                                                                                    Prod. Order No.=FIELD(No.)));
                                                   CaptionML=[DEU=Soll-KapazitÑtsgemeinkosten;
                                                              ENU=Expected Capacity Ovhd. Cost];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 98  ;   ;Starting Date-Time  ;DateTime      ;CaptionML=[DEU=Startdatum/-zeit;
                                                              ENU=Starting Date-Time] }
    { 99  ;   ;Ending Date-Time    ;DateTime      ;CaptionML=[DEU=Enddatum/-zeit;
                                                              ENU=Ending Date-Time] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 7300;   ;Completely Picked   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Prod. Order Component"."Completely Picked" WHERE (Status=FIELD(Status),
                                                                                                                      Prod. Order No.=FIELD(No.),
                                                                                                                      Supplied-by Line No.=FILTER(0)));
                                                   CaptionML=[DEU=Komplett kommissioniert;
                                                              ENU=Completely Picked] }
    { 9000;   ;Assigned User ID    ;Code50        ;TableRelation="User Setup";
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Zugewiesene Benutzer-ID;
                                                              ENU=Assigned User ID] }
    { 5447700;;Production Cost Posting to G/L;Boolean;
                                                   CaptionML=[DEU=Produktionskosten buchen;
                                                              ENU=Production Cost Posting to G/L] }
  }
  KEYS
  {
    {    ;Status,No.                              ;Clustered=Yes }
    {    ;No.,Status                               }
    {    ;Search Description                       }
    {    ;Low-Level Code,Replan Ref. No.,Replan Ref. Status }
    { No ;Source Type,Source No.                   }
    {    ;Description                              }
    {    ;Source No.                               }
    {    ;Starting Date                            }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Source No.,Source Type   }
  }
  CODE
  {
    VAR
      MfgSetup@1006 : Record 99000765;
      ProdOrder@1007 : Record 5405;
      ProdOrderLine@1008 : Record 5406;
      Location@1004 : Record 14;
      NoSeriesMgt@1010 : Codeunit 396;
      CalcProdOrder@1011 : Codeunit 99000773;
      LeadTimeMgt@1013 : Codeunit 5404;
      DimMgt@1014 : Codeunit 408;
      ItemTrackingMgt@1020 : Codeunit 6500;
      HideValidationDialog@1018 : Boolean;
      UpdateEndDate@1012 : Boolean;

    BEGIN
    END.
  }
}

OBJECT Table 10406 InvAdjmt. Entry (Order) - Upg
{
  OBJECT-PROPERTIES
  {
    Date=10.09.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Order Type          ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragsart;
                                                              ENU=Order Type];
                                                   OptionCaptionML=[DEU=" ,Fertigung,Umlagerung,Service,Montage";
                                                                    ENU=" ,Production,Transfer,Service,Assembly"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly] }
    { 2   ;   ;Order No.           ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragsnr.;
                                                              ENU=Order No.] }
    { 3   ;   ;Order Line No.      ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragszeilennr.;
                                                              ENU=Order Line No.] }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 7   ;   ;Routing No.         ;Code20        ;TableRelation="Routing Header".No.;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Arbeitsplannr.;
                                                              ENU=Routing No.] }
    { 8   ;   ;Routing Reference No.;Integer      ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Arbeitsplanref.-Nr.;
                                                              ENU=Routing Reference No.] }
    { 21  ;   ;Indirect Cost %     ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Indirekte Kosten %;
                                                              ENU=Indirect Cost %];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Overhead Rate       ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Gemeinkostensatz;
                                                              ENU=Overhead Rate];
                                                   AutoFormatType=2 }
    { 29  ;   ;Cost is Adjusted    ;Boolean       ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstandspreis ist reguliert;
                                                              ENU=Cost is Adjusted] }
    { 30  ;   ;Allow Online Adjustment;Boolean    ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Onlineregulierung zulassen;
                                                              ENU=Allow Online Adjustment] }
    { 41  ;   ;Unit Cost           ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost];
                                                   AutoFormatType=2 }
    { 42  ;   ;Direct Cost         ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Direkte Kosten;
                                                              ENU=Direct Cost];
                                                   AutoFormatType=2 }
    { 43  ;   ;Indirect Cost       ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Indirekte Kosten;
                                                              ENU=Indirect Cost];
                                                   AutoFormatType=2 }
    { 44  ;   ;Single-Level Material Cost;Decimal ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Materialkosten;
                                                              ENU=Single-Level Material Cost];
                                                   AutoFormatType=2 }
    { 45  ;   ;Single-Level Capacity Cost;Decimal ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige KapazitÑtskosten;
                                                              ENU=Single-Level Capacity Cost];
                                                   AutoFormatType=2 }
    { 46  ;   ;Single-Level Subcontrd. Cost;Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Fremdarbeitskosten;
                                                              ENU=Single-Level Subcontrd. Cost];
                                                   AutoFormatType=2 }
    { 47  ;   ;Single-Level Cap. Ovhd Cost;Decimal;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Kap.-Gemeinkosten;
                                                              ENU=Single-Level Cap. Ovhd Cost];
                                                   AutoFormatType=2 }
    { 48  ;   ;Single-Level Mfg. Ovhd Cost;Decimal;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Prod.-Gemeinkosten;
                                                              ENU=Single-Level Mfg. Ovhd Cost];
                                                   AutoFormatType=2 }
    { 52  ;   ;Direct Cost (ACY)   ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Direkte Kosten (BW);
                                                              ENU=Direct Cost (ACY)] }
    { 53  ;   ;Indirect Cost (ACY) ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Indirekte Kosten (BW);
                                                              ENU=Indirect Cost (ACY)] }
    { 54  ;   ;Single-Lvl Material Cost (ACY);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Materialkosten (BW);
                                                              ENU=Single-Lvl Material Cost (ACY)];
                                                   AutoFormatType=2 }
    { 55  ;   ;Single-Lvl Capacity Cost (ACY);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige KapazitÑtskosten (BW);
                                                              ENU=Single-Lvl Capacity Cost (ACY)];
                                                   AutoFormatType=2 }
    { 56  ;   ;Single-Lvl Subcontrd Cost(ACY);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Fremdarbeitskosten (BW);
                                                              ENU=Single-Lvl Subcontrd Cost(ACY)];
                                                   AutoFormatType=2 }
    { 57  ;   ;Single-Lvl Cap. Ovhd Cost(ACY);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Kap.-Gemeinkosten (BW);
                                                              ENU=Single-Lvl Cap. Ovhd Cost(ACY)];
                                                   AutoFormatType=2 }
    { 58  ;   ;Single-Lvl Mfg. Ovhd Cost(ACY);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Einstufige Prod.-Gemeinkosten (BW);
                                                              ENU=Single-Lvl Mfg. Ovhd Cost(ACY)];
                                                   AutoFormatType=2 }
    { 61  ;   ;Completely Invoiced ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Komplett fakturiert;
                                                              ENU=Completely Invoiced] }
    { 62  ;   ;Is Finished         ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Abgeschlossen;
                                                              ENU=Is Finished] }
    { 5447700;;Production Cost Posting to G/L;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Produktionskosten buchen;
                                                              ENU=Production Cost Posting to G/L] }
  }
  KEYS
  {
    {    ;Order Type,Order No.,Order Line No.     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 10407 Inv. Posting Setup - Upg
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lagerbuchung Einrichtung;
               ENU=Inventory Posting Setup];
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 2   ;   ;Invt. Posting Group Code;Code20    ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppencode;
                                                              ENU=Invt. Posting Group Code];
                                                   NotBlank=Yes }
    { 6   ;   ;Inventory Account   ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerkonto;
                                                              ENU=Inventory Account] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 21  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[DEU=Alle Konten in Lookup anzeigen;
                                                              ENU=View All Accounts on Lookup] }
    { 5800;   ;Inventory Account (Interim);Code20 ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Lagerkonto (Interim);
                                                              ENU=Inventory Account (Interim)] }
    { 5447700;;WIP Change Account  ;Code20        ;TableRelation="G/L Account";
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskonto;
                                                              ENU=WIP Change Account] }
    { 5447701;;Prod. Accrual Acc. (Interim);Code20;TableRelation="G/L Account";
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionszugangskonto (Interim);
                                                              ENU=Prod. Accrual Account (Interim)] }
    { 5447702;;Prod. Accrual Account;Code20       ;TableRelation="G/L Account";
                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionszugangskonto;
                                                              ENU=Prod. Accrual Account] }
    { 99000750;;WIP Account        ;Code20        ;TableRelation="G/L Account";
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Unf.-Arbeit-Konto;
                                                              ENU=WIP Account] }
    { 99000753;;Material Variance Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Materialabweichungskonto;
                                                              ENU=Material Variance Account] }
    { 99000754;;Capacity Variance Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=KapazitÑtsabweichungskonto;
                                                              ENU=Capacity Variance Account] }
    { 99000755;;Mfg. Overhead Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[DEU=Prod.-Gemeinkostenabw.-Konto;
                                                              ENU=Mfg. Overhead Variance Account] }
    { 99000756;;Cap. Overhead Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[DEU=Kap.-Gemeinkostenabw.-Konto;
                                                              ENU=Cap. Overhead Variance Account] }
    { 99000757;;Subcontracted Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Fremdarbeitskostenabw.-Konto;
                                                              ENU=Subcontracted Variance Account] }
  }
  KEYS
  {
    {    ;Location Code,Invt. Posting Group Code  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      PostingSetupMgt@1003 : Codeunit 48;

    BEGIN
    END.
  }
}

OBJECT Table 5447559 IVA Item Hist. Data-Outbnd Ent
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikel Historische Daten - Ausgehende Posten;
               ENU=Item Historical Data - Outbound Entries];
    LookupPageID=Page5447559;
    DrillDownPageID=Page5447559;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 4   ;   ;Entry Type          ;Option        ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 12  ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Verkaufslieferung,Verkaufsrechnung,VerkaufsrÅcksendung,Verkaufsgutschrift,Einkaufslieferung,Einkaufsrechnung,RÅcklieferung,Einkaufsgutschrift,Umlagerungsausgang,Umlagerungseingang,Servicelieferung,Servicerechnung,Servicegutschrift";
                                                                    ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.,Posting Date                    }
    {    ;Item No.,Location Code,Variant Code,Posting Date }
    {    ;Item No.,Entry Type,Variant Code,Location Code,Posting Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemLedgEntry@5447560 : Record 32;

    BEGIN
    END.
  }
}

OBJECT Table 5447560 IVA Item Hist. Data-Inbnd Ent
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikel Historische Daten - Eingehende Posten;
               ENU=Item Historical Data - Eingehende Posten];
    LookupPageID=Page5447560;
    DrillDownPageID=Page5447560;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;TableRelation="Item Ledger Entry";
                                                   OnValidate=BEGIN
                                                                IF "Entry No." <> xRec."Entry No." THEN
                                                                  IF "Entry No." = 0 THEN
                                                                    "Item No." := ''
                                                                  ELSE BEGIN
                                                                    ItemLedgEntry.GET("Entry No.");
                                                                    "Item No." := ItemLedgEntry."Item No.";
                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> xRec."Item No." THEN
                                                                  IF "Item No." <> '' THEN BEGIN
                                                                    TESTFIELD("Entry No.");
                                                                    ItemLedgEntry.GET("Entry No.");
                                                                    TESTFIELD("Item No.",ItemLedgEntry."Item No.");
                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 7030;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[DEU=WÑhrungscode;
                                                              ENU=Currency Code] }
    { 7031;   ;Currency Factor     ;Decimal       ;CaptionML=[DEU=WÑhrungsfaktor;
                                                              ENU=Currency Factor];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7032;   ;Purchase Amount     ;Decimal       ;CaptionML=[DEU=Einkaufsbetrag;
                                                              ENU=Purchase Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemLedgEntry@5447560 : Record 32;

    BEGIN
    END.
  }
}

OBJECT Table 5447561 IVA Item Val. Condition
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Type = Type::"All Items" THEN
                 Code := ''
               ELSE
                 TESTFIELD(Code);

               IF "Location Type" = "Location Type"::"All Locations" THEN
                 "Location Code" := ''
               ELSE
                 TESTFIELD("Location Code");
             END;

    OnRename=BEGIN
               IF Type = Type::"All Items" THEN
                 Code := ''
               ELSE
                 TESTFIELD(Code);

               IF "Location Type" = "Location Type"::"All Locations" THEN
                 "Location Code" := ''
               ELSE
                 TESTFIELD("Location Code");
             END;

    CaptionML=[DEU=Artikel Bewertungsregel;
               ENU=Item Valuation Condition];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Item Category)) "Item Category"
                                                                 ELSE IF (Type=CONST(Gen. Product Posting Group)) "Gen. Product Posting Group"
                                                                 ELSE IF (Type=CONST(Inventory Posting Group)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Item Tracking)) "Item Tracking Code";
                                                   CaptionML=[DEU=Code;
                                                              ENU=Code] }
    { 2   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF xRec.Type <> Type THEN
                                                                  VALIDATE(Code,'');
                                                              END;

                                                   CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Alle Artikel;
                                                                    ENU=Item,Item Tracking,Item Category,,,,Gen. Product Posting Group,,Inventory Posting Group,,All Items];
                                                   OptionString=Item,Item Tracking,Item Category,,,,Gen. Product Posting Group,,Inventory Posting Group,,All Items }
    { 3   ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" <> '' THEN
                                                                  TESTFIELD(Type,Type::Item);
                                                              END;

                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[DEU=Startdatum;
                                                              ENU=Starting Date] }
    { 6   ;   ;Location Type       ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Location Type" <> "Location Type" THEN
                                                                  VALIDATE("Location Code",'');
                                                              END;

                                                   CaptionML=[DEU=Lagerortart;
                                                              ENU=Location Type];
                                                   OptionCaptionML=[DEU=Lagerort,Lagerortfilter,,,,,,,,Alle Lagerorte;
                                                                    ENU=Location,Location Filter,,,,,,,,All Locations];
                                                   OptionString=Location,Location Filter,,,,,,,,All Locations }
    { 7   ;   ;Location Code       ;Code100       ;TableRelation=IF (Location Type=CONST(Location)) Location
                                                                 ELSE IF (Location Type=CONST(Location Filter)) Location;
                                                   OnValidate=BEGIN
                                                                IF "Location Code" <> '' THEN BEGIN
                                                                  CASE "Location Type" OF
                                                                    "Location Type"::Location:
                                                                      Location.GET("Location Code");
                                                                  END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 10  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Starting Date");
                                                              END;

                                                   CaptionML=[DEU=Enddatum;
                                                              ENU=Ending Date] }
    { 20  ;   ;Valuation Condition Code;Code20    ;TableRelation="IVA Valuation Condition".Code;
                                                   CaptionML=[DEU=Bewertungsregel Code;
                                                              ENU=Valuation Condition Code];
                                                   NotBlank=Yes }
    { 21  ;   ;Ignore Low-Levels   ;Boolean       ;CaptionML=[DEU=Niedere Ebenen ignorieren;
                                                              ENU=Ignore Low-Levels] }
    { 22  ;   ;Minimum Age Item    ;DateFormula   ;CaptionML=[DEU=Mindestalter Artikel;
                                                              ENU=Minimum Age Item] }
  }
  KEYS
  {
    {    ;Code,Type,Variant Code,Valuation Condition Code,Location Type,Location Code,Starting Date;
                                                   Clustered=Yes }
    {    ;Type,Code                                }
    {    ;Location Type,Location Code              }
    {    ;Valuation Condition Code                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@5447560 : TextConst 'DEU=Das %1 kann nicht nach dem %2 sein.;ENU=%1 cannot be after %2';
      Location@5447561 : Record 14;

    PROCEDURE LookupLocationCode@5447560(VAR Text@5447560 : Text[1024]) : Boolean;
    VAR
      Location@5447562 : Record 14;
      Locations@5447561 : Page 15;
    BEGIN
      Location.FILTERGROUP(2);
      Location.SETRANGE("Use As In-Transit",FALSE);
      Location.FILTERGROUP(0);
      Locations.SETTABLEVIEW(Location);
      CASE "Location Type" OF
        "Location Type"::Location:
          BEGIN
            Location.Code := Text;
            Locations.SETRECORD(Location);
            Locations.LOOKUPMODE(TRUE);
            IF Locations.RUNMODAL = ACTION::LookupOK THEN BEGIN
              Locations.GETRECORD(Location);
              Text := Location.Code;
            END;
          END;
        "Location Type"::"Location Filter":
          BEGIN
            Locations.LOOKUPMODE(TRUE);
            IF Locations.RUNMODAL = ACTION::LookupOK THEN BEGIN
              Text := Text + Locations.GetSelectionFilter;
              Location.SETFILTER(Code,Text);
              Text := Location.GETFILTER(Code);
            END;
          END;
      END;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447562 IVA Valuation Condition
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckUniqueCode;

               CASE "Valuation Type" OF
                 "Valuation Type"::Range:
                   EVALUATE(Period,'<-1Y>');
                 "Valuation Type"::Leaving:
                   BEGIN
                     "Item Led. Document Type Filter" := '1|9';    // Sales Shipment|Transfer Shipment
                     "Inbnd. ILE Type Filter" := '0|2|6'  // Purchase|Pos. Adjustment|Output
                   END;
                 "Valuation Type"::"Range-Periods":
                   BEGIN
                     EVALUATE(Period,'<+1D-1M-1D>');
                     "Number of Periods" := 12;
                   END;
                 "Valuation Type"::"Leaving-Periods":
                   BEGIN
                     EVALUATE(Period,'<+1D-1M-1D>');
                     "Number of Periods" := 12;
                     "Item Led. Document Type Filter" := '1|9';    // Sales Shipment|Transfer Shipment
                     "Inbnd. ILE Type Filter" := '0|2|6'  // Purchase|Pos. Adjustment|Output
                   END;
               END;
             END;

    OnDelete=VAR
               ItemvalCond@5447560 : Record 5447561;
             BEGIN
               ValCondLevel.SETRANGE("Valuation Type","Valuation Type");
               ValCondLevel.SETRANGE("Valuation Code",Code);
               ValCondLevel.DELETEALL;

               ItemvalCond.SETRANGE("Valuation Condition Code",Code);
               ItemvalCond.DELETEALL;
             END;

    OnRename=BEGIN
               IF Code <> xRec.Code THEN
                 CheckUniqueCode;

               ValCondLevel.SETRANGE("Valuation Code",Code);
               IF NOT ValCondLevel.ISEMPTY THEN BEGIN
                 IF CONFIRM(
                     STRSUBSTNO(Text001,ValCondLevel.TABLECAPTION,FIELDCAPTION("Valuation Type")),
                    FALSE)
                 THEN
                   ValCondLevel.DELETEALL
                 ELSE
                   ERROR('');
               END;

               IF "Valuation Type" <> xRec."Valuation Type" THEN BEGIN
                 EVALUATE(Period,'');
                 "Number of Periods" := 0;
                 "Item Led. Document Type Filter" :='';
                 "Inbnd. ILE Type Filter" := '';
                 "Appreciation allowed" := "Appreciation allowed"::Never;

                 CASE "Valuation Type" OF
                   "Valuation Type"::Range:
                     EVALUATE(Period,'<-1Y>');
                   "Valuation Type"::Leaving:
                     BEGIN
                       "Item Led. Document Type Filter" := '1|9';    // Sales Shipment|Transfer Shipment
                       "Inbnd. ILE Type Filter" := '0|2|6'  // Purchase|Pos. Adjustment|Output
                     END;
                   "Valuation Type"::"Range-Periods":
                     BEGIN
                       EVALUATE(Period,'<+1D-1M-1D>');
                       "Number of Periods" := 12;
                     END;
                   "Valuation Type"::"Leaving-Periods":
                     BEGIN
                       EVALUATE(Period,'<+1D-1M-1D>');
                       "Number of Periods" := 12;
                       "Item Led. Document Type Filter" := '1|9';    // Sales Shipment|Transfer Shipment
                       "Inbnd. ILE Type Filter" := '0|2|6'  // Purchase|Pos. Adjustment|Output
                     END;
                 END;
               END;
             END;

    CaptionML=[DEU=Bewertungsregel;
               ENU=Valuation Condition];
    LookupPageID=Page5447563;
    DrillDownPageID=Page5447563;
  }
  FIELDS
  {
    { 1   ;   ;Valuation Type      ;Option        ;InitValue=Range;
                                                   CaptionML=[DEU=Bewertungsart;
                                                              ENU=Valuation Type];
                                                   OptionCaptionML=[DEU=" ,Reichweite,Abgang,Ablaufdatum,Alterstruktur,Lagerart,WÑhrung,Niederstwert,Reichweite-Perioden,Abgang-Perioden";
                                                                    ENU=" ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods"];
                                                   OptionString=[ ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods] }
    { 2   ;   ;Code                ;Code20        ;CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 100 ;   ;Period              ;DateFormula   ;OnValidate=BEGIN
                                                                CASE "Valuation Type" OF
                                                                  "Valuation Type"::Range,
                                                                  "Valuation Type"::"Range-Periods",
                                                                  "Valuation Type"::"Leaving-Periods":
                                                                    ;
                                                                  ELSE
                                                                    IF FORMAT(Period) <> '' THEN
                                                                      TESTFIELD(Period);
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Periode;
                                                              ENU=Period] }
    { 101 ;   ;Number of Periods   ;Integer       ;CaptionML=[DEU=Anzahl Perioden;
                                                              ENU=Number of Periods];
                                                   BlankZero=Yes }
    { 200 ;   ;Item Led. Document Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Item Led. Document Type Filter",
                                                                  FIELDNO("Item Led. Document Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelposten Belegart Filter;
                                                              ENU=Item Ledger Document Type Filter];
                                                   NotBlank=Yes }
    { 2001;   ;Outbnd. ILE Type Filter;Text250    ;OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Outbnd. ILE Type Filter",
                                                                  FIELDNO("Outbnd. ILE Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter (ausgehend);
                                                              ENU=Item Ledger Entry Type Filter (Outbound)] }
    { 2002;   ;Inbnd. ILE Type Filter;Text250     ;OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Inbnd. ILE Type Filter",
                                                                  FIELDNO("Inbnd. ILE Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter (eingehend);
                                                              ENU=Item Ledger Entry Type Filter (Inbound)] }
    { 3000;   ;Appreciation allowed;Option        ;InitValue=Never;
                                                   OnValidate=BEGIN
                                                                IF "Appreciation allowed" = "Appreciation allowed"::Never THEN
                                                                  TESTFIELD("Level Calculation","Level Calculation"::All);
                                                              END;

                                                   CaptionML=[DEU=Aufwertung erlaubt;
                                                              ENU=Appreciation allowed];
                                                   OptionCaptionML=[DEU=Nie,0-Wert,Immer;
                                                                    ENU=No,0-Value,Always];
                                                   OptionString=Never,0-Value,Always }
    { 3001;   ;Level Calculation   ;Option        ;OnValidate=BEGIN
                                                                IF "Level Calculation" = "Level Calculation"::"Step-by-Step" THEN
                                                                  "Appreciation allowed" := "Appreciation allowed"::Always
                                                              END;

                                                   CaptionML=[DEU=Stufen Berechnung;
                                                              ENU=Level Calculation];
                                                   OptionCaptionML=[DEU=Alle,Schrittweise;
                                                                    ENU=All,Step-by-Step];
                                                   OptionString=All,Step-by-Step }
  }
  KEYS
  {
    {    ;Code,Valuation Type                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ValCondLevel@5447562 : Record 5447566;
      ValCondTypeFilterMgt@5447560 : Codeunit 5447563;
      Text000@5447561 : TextConst 'DEU=FÅr %1 %2 sind keine Stufen erlaubt.;ENU=There are no Levels allowed for %1 %2.';
      Text001@5447563 : TextConst 'DEU=Die Zeilen der %1 mÅssen vor dem éndern der %2 gelîscht werden. Wollen Sie diese lîschen?;ENU=Lines of %1 have to be deleted before you can change %2. Would you delete them, now?';
      Text002@5447564 : TextConst 'DEU=%1 muss eindeutig sein und darf nur einmal vergeben werden.;ENU=%1 has to be unique and may bey assigned only once.';

    PROCEDURE ShowLevels@5447560();
    BEGIN
      CASE "Valuation Type" OF
        "Valuation Type"::Range:
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Range)",Rec);
        "Valuation Type"::Leaving:
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Leaving)",Rec);
        "Valuation Type"::"Expiration Date":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Ex.Date)",Rec);
        "Valuation Type"::"Age Structure":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Age)",Rec);
        "Valuation Type"::"Location Type":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Loc. T.)",Rec);
        "Valuation Type"::"Lowest Value":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Low. Val)",Rec);
        "Valuation Type"::"Range-Periods":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Range2)",Rec);
        "Valuation Type"::"Leaving-Periods":
          PAGE.RUNMODAL(PAGE::"Valuation Condition (Leaving2)",Rec);
        ELSE
          ERROR(Text000,FIELDCAPTION("Valuation Type"),"Valuation Type");
      END;
    END;

    LOCAL PROCEDURE CheckUniqueCode@5447561();
    VAR
      ValCondUnique@5447560 : Record 5447562;
    BEGIN
      ValCondUnique.SETRANGE(Code,Code);
      IF NOT ValCondUnique.ISEMPTY THEN
        ERROR(Text002,Code);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447563 IVA Source Code Setup
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;DataClassification=ToBeClassified;
                                                   CaptionML=DEU=Primary Key }
    { 2   ;   ;IVA Item Valuation Journal;Code10  ;DataClassification=ToBeClassified }
    { 3   ;   ;IVA Valuation Post Cost;Code10     ;DataClassification=ToBeClassified }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447564 IVA Val. Condition Correction
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=Valuation Type,Code;
    CaptionML=[DEU=Bewertungsregelkorrektur;
               ENU=Valuation Condition Correction];
  }
  FIELDS
  {
    { 1   ;   ;Valuation Type      ;Option        ;InitValue=Range;
                                                   CaptionML=[DEU=Bewertungsart;
                                                              ENU=Valuation Type];
                                                   OptionCaptionML=[DEU=" ,Reichweite,Abgang,Ablaufdatum,Alterstruktur,Lagerart,WÑhrung,Niederstwert,Reichweite-Perioden,Abgang-Perioden";
                                                                    ENU=" ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods"];
                                                   OptionString=[ ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods] }
    { 2   ;   ;Code                ;Code20        ;CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Sequence No.        ;Integer       ;CaptionML=[DEU=Reihenfolge;
                                                              ENU=Sequence No.] }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 11  ;   ;Correction Factor   ;Decimal       ;CaptionML=[DEU=Korrekturfaktor;
                                                              ENU=Correction Factor];
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Valuation Type,Code,Sequence No.        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447566 IVA Valuation Condition Level
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ValCondLevelLocation@5447560 : Record 5447566;
             BEGIN
               IF "Valuation Type" = "Valuation Type"::"Location Type" THEN BEGIN
                 ValCondLevelLocation.SETRANGE("Valuation Type","Valuation Type");
                 ValCondLevelLocation.SETRANGE("Valuation Code","Valuation Code");
                 IF ValCondLevelLocation.FINDFIRST THEN
                   ERROR(Text000,"Valuation Type",TABLECAPTION);
               END;
             END;

    CaptionML=[DEU=Bewertungsregelstufe;
               ENU=Valuation Condition Level];
  }
  FIELDS
  {
    { 1   ;   ;Valuation Type      ;Option        ;InitValue=Range;
                                                   CaptionML=[DEU=Bewertungsart;
                                                              ENU=Valuation Type];
                                                   OptionCaptionML=[DEU=" ,Reichweite,Abgang,Ablaufdatum,Alterstruktur,Lagerart,WÑhrung,Niederstwert,Reichweite-Perioden,Abgang-Perioden";
                                                                    ENU=" ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods"];
                                                   OptionString=[ ,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods] }
    { 2   ;   ;Valuation Code      ;Code20        ;TableRelation="IVA Valuation Condition".Code WHERE (Valuation Type=FIELD(Valuation Type));
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 3   ;   ;Code                ;Code10        ;CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 20  ;   ;Valuation Factor    ;Decimal       ;CaptionML=[DEU=Bewertungsfaktor;
                                                              ENU=Valuation Factor];
                                                   DecimalPlaces=0:2 }
    { 99  ;   ;Operator            ;Option        ;CaptionML=[DEU=Operator;
                                                              ENU=Operator];
                                                   OptionCaptionML=[DEU=" ,<,>,<=,>=";
                                                                    ENU=" ,<,>,<=,>="];
                                                   OptionString=[ ,<,>,<=,>=] }
    { 100 ;   ;Period              ;DateFormula   ;CaptionML=[DEU=Periode;
                                                              ENU=Period] }
    { 105 ;   ;Starting Value      ;Decimal       ;CaptionML=[DEU=Startwert;
                                                              ENU=Starting Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 106 ;   ;Ending Value        ;Decimal       ;CaptionML=[DEU=Endwert;
                                                              ENU=Ending Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 110 ;   ;Period Incoming Entry;DateFormula  ;CaptionML=[DEU=Periode Eingehende Posten;
                                                              ENU=Period Incoming Entry] }
    { 115 ;   ;Scrap Value         ;Decimal       ;CaptionML=[DEU=Schrottwert;
                                                              ENU=Scrap Value];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 120 ;   ;Lowest Value Type   ;Option        ;OnValidate=BEGIN
                                                                CASE "Lowest Value Type" OF
                                                                  "Lowest Value Type"::"Last Direct Cost":
                                                                    "Item Ledger Entry Type Filter" := '0|6';  // Purchase|Output
                                                                  "Lowest Value Type"::"Average Cost":
                                                                    "Item Ledger Entry Type Filter" := '0|2|6'  // Purchase|Pos. Adjustment|Output
                                                                  ELSE
                                                                    "Item Ledger Entry Type Filter" := ''
                                                                END;

                                                                IF (Description = '') OR (UPPERCASE(Description) = UPPERCASE(FORMAT(xRec."Lowest Value Type"))) THEN
                                                                  Description := FORMAT("Lowest Value Type");

                                                                IF "Lowest Value Type" <> "Lowest Value Type"::"Field Item Table" THEN
                                                                  "Item Field ID" := 0;
                                                              END;

                                                   CaptionML=[DEU=Niederstwert-Art;
                                                              ENU=Lowest Value Type];
                                                   OptionCaptionML=[DEU=" ,EK-Preis (Neuester),EK-Preis (Neuester) Artikel,Durchschnittliche Einstandspreis,Letzter Verkaufspreis,EK-Preis (Niedrigster),Einstandspreis (Neuester),Einstandspreis (Niedrigster),Einkaufspreis,Einkaufsanfrage,,,,,,,Feld Artikeltabelle,Einst.-Preis - StÅckliste,Einst.-Preis - Produktion";
                                                                    ENU=" ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,PurchaseQuote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing"];
                                                   OptionString=[ ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,Purchase Quote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing] }
    { 130 ;   ;Item Field ID       ;Integer       ;OnValidate=BEGIN
                                                                TESTFIELD("Lowest Value Type","Lowest Value Type"::"Field Item Table");
                                                              END;

                                                   CaptionML=[DEU=Artikel Feld ID;
                                                              ENU=item Field ID];
                                                   BlankZero=Yes }
    { 131 ;   ;Item Field Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=CONST(27),
                                                                                             No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldname;
                                                              ENU=Item Field Name];
                                                   Editable=No }
    { 132 ;   ;Item Field Caption  ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=CONST(27),
                                                                                                   No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldbezeichnung;
                                                              ENU=Item Field Caption];
                                                   Editable=No }
    { 2001;   ;Item Ledger Entry Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Item Ledger Entry Type Filter",
                                                                  FIELDNO("Item Ledger Entry Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter;
                                                              ENU=Item Ledger Entry Type Filter] }
    { 2002;   ;Use Corrections     ;Boolean       ;CaptionML=[DEU=Korrekturen verwenden;
                                                              ENU=Use Corrections] }
  }
  KEYS
  {
    {    ;Valuation Code,Valuation Type,Code      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@5447560 : TextConst 'DEU=FÅr %1 ist nur 1 %2 erlaubt.;ENU=There is only one %2 allowed by %1.';
      ValCondTypeFilterMgt@5447561 : Codeunit 5447563;

    BEGIN
    END.
  }
}

OBJECT Table 5447598 IVA Item Val. Comment Line
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bemerkungszeile;
               ENU=Comment Line];
    LookupPageID=Page5447598;
    DrillDownPageID=Page5447598;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[DEU=Tabellen ID;
                                                              ENU=Table ID] }
    { 2   ;   ;Item Ledger Entry No.;Integer      ;CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 3   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[DEU=Zeilennr.;
                                                              ENU=Line No.] }
    { 10  ;   ;Date                ;Date          ;CaptionML=[DEU=Datum;
                                                              ENU=Date] }
    { 11  ;   ;Code                ;Code10        ;CaptionML=[DEU=Code;
                                                              ENU=Code] }
    { 12  ;   ;Comment             ;Text80        ;CaptionML=[DEU=Bemerkung;
                                                              ENU=Comment] }
  }
  KEYS
  {
    {    ;Table ID,Item Ledger Entry No.,Entry No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE SetUpNewLine@1();
    VAR
      ItemValCommentLine@1000 : Record 5447598;
    BEGIN
      ItemValCommentLine.SETRANGE("Table ID","Table ID");
      ItemValCommentLine.SETRANGE("Item Ledger Entry No.","Item Ledger Entry No.");
      ItemValCommentLine.SETRANGE("Entry No.","Entry No.");
      ItemValCommentLine.SETRANGE(Date,WORKDATE);
      IF NOT ItemValCommentLine.FINDFIRST THEN
        Date := WORKDATE;

      OnAfterSetUpNewLine(Rec,ItemValCommentLine);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSetUpNewLine@5(VAR CommentLineRec@1000 : Record 5447598;VAR ItemValCommentLineFilter@1001 : Record 5447598);
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447599 IVA Item Valuation Setup
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikel Bewertung Einrichtung;
               ENU=Item Valuation Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[DEU=PrimÑrschlÅssel;
                                                              ENU=Primary Key] }
    { 2   ;   ;Automatic Cost Posting;Boolean     ;CaptionML=[DEU=Automatische Lagerbuchung;
                                                              ENU=Automatic Cost Posting] }
    { 3   ;   ;Posting Type        ;Option        ;InitValue=Choice;
                                                   CaptionML=[DEU=Buchungsart;
                                                              ENU=Gen. Posting Type];
                                                   OptionCaptionML=[DEU=Auswahl,nur Buchen (ohne Einfluss auf Einstandspreis),als Neubewertung Buchen (mit Einfluss auf Einstandspreis!);
                                                                    ENU=Choice,only Post (without impact to unit cost),Post as Revaluation (with impact to unit cost!)];
                                                   OptionString=Choice,only Post,Post as Revaluation }
    { 10  ;   ;Calc. of Dimension by;Option       ;CaptionML=[DEU=Dimensionsberechnung per;
                                                              ENU=Calculation of Dimension by];
                                                   OptionCaptionML=[DEU=Standard,Artikelposten;
                                                                    ENU=Standard,Item Ledger Entry];
                                                   OptionString=Standard,Item Ledger Entry }
    { 11  ;   ;Set Balance Posting Date;Option    ;CaptionML=[DEU=Gegenbuchungsdatum setzen;
                                                              ENU=Set Balance Posting Date];
                                                   OptionCaptionML=[DEU=Alle Posten,Artikel,Artikel & Lagerort & Variante;
                                                                    ENU=All Entries,Item,Item & Location & Variant];
                                                   OptionString=All Entries,Item,Item & Location & Variant }
    { 100 ;   ;Allow Posting of blocked Items;Boolean;
                                                   CaptionML=[DEU=Buchen von gesperrten Artikel erlauben;
                                                              ENU=Allow Posting of blocked Items] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ObjectFilter@5447652 : TextConst 'DEU=*CPL*;ENU=*CPL*';
      UpgradeObjectFilter@5447653 : TextConst 'DEU=UPG;ENU=UPG';
      ObjectVersion@5447651 : TextConst 'DEU=CPL;ENU=CPL';
      CodeGermany@5447654 : TextConst 'DEU=DE;ENU=DE';
      CodeWorldWide@5447655 : TextConst 'DEU=W1;ENU=W1';
      VersionDate@5447656 : TextConst 'DEU=<YEAR4>;ENU=<YEAR4>';
      AppName@5447650 : TextConst 'DEU=CKL Bewertung PLUS Business Central;ENU=CKL Valuation PLUS Business Central';
      Version@5447560 : TextConst 'DEU=Version DACH CKL Bewertung PLUS %1%2 (%3);ENU=Version DACH CKL Valuation PLUS %1%2 (%3)';
      Copyright@5447561 : TextConst 'DEU=(c) %1 CKL Software GmbH. All rights reserved.;ENU=(c) %1 CKL Software GmbH. All rights reserved.';
      HighestVersionDate@5447562 : Date;

    PROCEDURE GetAppVersion@5447560() : Text[1024];
    VAR
      HighestMajorAppVersion@5447656 : Integer;
      MajorRelease@5447655 : Integer;
      pos@5447654 : Integer;
      Object@5447653 : Record 2000000001;
      AppVersion@5447652 : Text[1024];
      HighestAppVersion@5447651 : Text[1024];
      MajorAppVersion@5447650 : Text;
    BEGIN
      IF HighestVersionDate = 0D THEN BEGIN
        Object.SETFILTER("Version List",ObjectFilter);
        IF Object.FINDSET THEN BEGIN
          REPEAT
            IF STRPOS(Object."Version List",UpgradeObjectFilter) = 0 THEN BEGIN
              pos := STRPOS(Object."Version List",ObjectVersion);
              AppVersion := COPYSTR(Object."Version List",pos + 3,1024);
              pos := STRPOS(AppVersion,',');

              IF pos > 0 THEN BEGIN
                AppVersion := COPYSTR(AppVersion,1,pos-1);
              END;
              IF STRPOS(AppVersion,CodeGermany) <> 0 THEN BEGIN
                pos := STRPOS(AppVersion,CodeGermany);
                AppVersion := COPYSTR(AppVersion,pos + 2,1024);
              END;
              IF STRPOS(AppVersion,CodeWorldWide) <> 0 THEN BEGIN
                pos := STRPOS(AppVersion,CodeWorldWide);
                AppVersion := COPYSTR(AppVersion,pos + 2,1024);
              END;

              // to evaluate the Major Version
              MajorAppVersion := AppVersion;
              pos := STRPOS(MajorAppVersion,'.');
              IF pos > 1 THEN BEGIN
                MajorAppVersion := COPYSTR(MajorAppVersion,1,pos-1);
                EVALUATE(MajorRelease,MajorAppVersion);
              END;

              IF pos > 0 THEN
                AppVersion := COPYSTR(AppVersion,pos,1024)
              ELSE
                AppVersion := '';

              IF HighestMajorAppVersion < MajorRelease THEN BEGIN
                HighestAppVersion := '.';
              END;
              IF HighestMajorAppVersion <= MajorRelease THEN BEGIN
                IF HighestAppVersion < AppVersion THEN BEGIN
                  HighestMajorAppVersion := MajorRelease;
                  HighestAppVersion := AppVersion;
                  HighestVersionDate := Object.Date;
                END;
              END;
            END;
          UNTIL Object.NEXT = 0;
        END;
      END;

      EXIT(
        COPYSTR(
          STRSUBSTNO(
            Version,
            HighestMajorAppVersion,
            HighestAppVersion,
            HighestVersionDate),
          1,1024
        ));
    END;

    PROCEDURE GetAppName@5448001() : Text[50];
    BEGIN
      EXIT(AppName);
    END;

    PROCEDURE GetCopyright@5447562() : Text[1024];
    BEGIN
      EXIT(
        COPYSTR(
          STRSUBSTNO(
            Copyright,
            FORMAT(HighestVersionDate,0,VersionDate)),
          1,1024
        ));
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447600 IVA Item Val. Journal Template
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Page ID");
             END;

    OnDelete=BEGIN
               ItemValJnlLine.SETRANGE("Journal Template Name",Name);
               ItemValJnlLine.DELETEALL(TRUE);
               ItemValJnlBatch.SETRANGE("Journal Template Name",Name);
               ItemValJnlBatch.DELETEALL;
             END;

    ReplicateData=No;
    CaptionML=[DEU=Artikel Bewertungs Buch.-Blattvorlage;
               ENU=Item Valuation Journal Template];
    LookupPageID=Page5447600;
  }
  FIELDS
  {
    { 1   ;   ;Name                ;Code10        ;CaptionML=[DEU=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text80        ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 5   ;   ;Test Report ID      ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=[DEU=Testberichts-ID;
                                                              ENU=Test Report ID] }
    { 6   ;   ;Page ID             ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                IF "Page ID" = 0 THEN
                                                                  "Page ID" := PAGE::"Item Valuation Journal";
                                                                "Test Report ID" := REPORT::"Item Valuation Posting - Test";
                                                                "Posting Report ID" := REPORT::"Item Valuation Register";
                                                                SourceCodeSetup.GET;
                                                                "Source Code" := SourceCodeSetup."Item Valuation Journal";
                                                              END;

                                                   CaptionML=[DEU=Seiten-ID;
                                                              ENU=Page ID] }
    { 7   ;   ;Posting Report ID   ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=[DEU=Buchungsberichts-ID;
                                                              ENU=Posting Report ID] }
    { 8   ;   ;Force Posting Report;Boolean       ;CaptionML=[DEU=Buchungsbericht immer drucken;
                                                              ENU=Force Posting Report] }
    { 10  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   OnValidate=BEGIN
                                                                ItemValJnlLine.SETRANGE("Journal Template Name",Name);
                                                                ItemValJnlLine.MODIFYALL("Source Code","Source Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 11  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 15  ;   ;Test Report Caption ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Test Report ID)));
                                                   CaptionML=[DEU=Berichtsbezeichnung testen;
                                                              ENU=Test Report Caption];
                                                   Editable=No }
    { 16  ;   ;Page Caption        ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Page),
                                                                                                                Object ID=FIELD(Page ID)));
                                                   CaptionML=[DEU=Seitenbeschriftung;
                                                              ENU=Page Caption];
                                                   Editable=No }
    { 17  ;   ;Posting Report Caption;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Posting Report ID)));
                                                   CaptionML=[DEU=Berichtsbezeichnung buchen;
                                                              ENU=Posting Report Caption];
                                                   Editable=No }
    { 19  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "No. Series" <> '' THEN BEGIN
                                                                  IF "No. Series" = "Posting No. Series" THEN
                                                                    "Posting No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Nummernserie;
                                                              ENU=No. Series] }
    { 20  ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF ("Posting No. Series" = "No. Series") AND ("Posting No. Series" <> '') THEN
                                                                  FIELDERROR("Posting No. Series",STRSUBSTNO(Text001,"Posting No. Series"));
                                                              END;

                                                   CaptionML=[DEU=Buchungsnr.-Serie;
                                                              ENU=Posting No. Series] }
    { 30  ;   ;Increment Batch Name;Boolean       ;CaptionML=[DEU=Stapelname erhîhen;
                                                              ENU=Increment Batch Name] }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Name,Description                         }
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'DEU=darf nicht %1 sein;ENU=must not be %1';
      ItemValJnlBatch@1002 : Record 5447602;
      ItemValJnlLine@1003 : Record 5447603;
      SourceCodeSetup@1004 : Record 242;

    BEGIN
    END.
  }
}

OBJECT Table 5447602 IVA Item Val. Journal Batch
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=Name,Description;
    OnInsert=BEGIN
               LOCKTABLE;
               ItemValJnlTemplate.GET("Journal Template Name");
             END;

    OnDelete=BEGIN
               ItemValJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
               ItemValJnlLine.SETRANGE("Journal Batch Name",Name);
               ItemValJnlLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ItemValJnlLine.SETRANGE("Journal Template Name",xRec."Journal Template Name");
               ItemValJnlLine.SETRANGE("Journal Batch Name",xRec.Name);
               WHILE ItemValJnlLine.FINDFIRST DO
                 ItemValJnlLine.RENAME("Journal Template Name",Name,ItemValJnlLine."Line No.");
             END;

    CaptionML=[DEU=Artikel Bewertungs Buch.-Blattname;
               ENU=Item Valuation Journal Batch];
    LookupPageID=Page5447602;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="IVA Item Val. Journal Template";
                                                   CaptionML=[DEU=Buch.-Blattvorlagenname;
                                                              ENU=Journal Template Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Code10        ;CaptionML=[DEU=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 4   ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   OnValidate=BEGIN
                                                                IF "Reason Code" <> xRec."Reason Code" THEN BEGIN
                                                                  ItemValJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                                                  ItemValJnlLine.SETRANGE("Journal Batch Name",Name);
                                                                  ItemValJnlLine.MODIFYALL("Reason Code","Reason Code");
                                                                  MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 5   ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "No. Series" <> '' THEN BEGIN
                                                                  ItemValJnlTemplate.GET("Journal Template Name");
                                                                  IF "No. Series" = "Posting No. Series" THEN
                                                                    VALIDATE("Posting No. Series",'');
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Nummernserie;
                                                              ENU=No. Series] }
    { 6   ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF ("Posting No. Series" = "No. Series") AND ("Posting No. Series" <> '') THEN
                                                                  FIELDERROR("Posting No. Series",STRSUBSTNO(Text001,"Posting No. Series"));
                                                                ItemValJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                                                ItemValJnlLine.SETRANGE("Journal Batch Name",Name);
                                                                ItemValJnlLine.MODIFYALL("Posting No. Series","Posting No. Series");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[DEU=Buchungsnr.-Serie;
                                                              ENU=Posting No. Series] }
  }
  KEYS
  {
    {    ;Journal Template Name,Name              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'DEU=darf nicht %1 sein;ENU=must not be %1';
      ItemValJnlTemplate@1002 : Record 5447600;
      ItemValJnlLine@1003 : Record 5447603;

    [External]
    PROCEDURE SetupNewBatch@3();
    BEGIN
      ItemValJnlTemplate.GET("Journal Template Name");
      "No. Series" := ItemValJnlTemplate."No. Series";
      "Posting No. Series" := ItemValJnlTemplate."Posting No. Series";
      "Reason Code" := ItemValJnlTemplate."Reason Code";
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447603 IVA Item Val. Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               ItemValJnlTemplate.GET("Journal Template Name");
               ItemValJnlBatch.GET("Journal Template Name","Journal Batch Name");

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    OnDelete=BEGIN
               DeleteItemValPlanEntry("Applies-to Entry");
             END;

    CaptionML=[DEU=Artikel Bewertungs Buch.-Blattzeile;
               ENU=Item Valuation Journal Line];
    LookupPageID=Page5447604;
    DrillDownPageID=Page5447604;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code20       ;TableRelation="IVA Item Val. Journal Template";
                                                   CaptionML=[DEU=Buch.-Blattvorlagenname;
                                                              ENU=Journal Template Name] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[DEU=Zeilennr.;
                                                              ENU=Line No.] }
    { 3   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> xRec."Item No." THEN BEGIN
                                                                  "Variant Code" := '';
                                                                END;

                                                                IF "Item No." = '' THEN BEGIN
                                                                  CreateDim(
                                                                    DATABASE::Item,"Item No.",
                                                                    DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code");
                                                                  EXIT;
                                                                END;

                                                                GetItem;
                                                                OnValidateItemNoOnAfterGetItem(Rec,Item);
                                                                GetItemValSetup;
                                                                IF NOT ItemValSetup."Allow Posting of blocked Items" THEN
                                                                  Item.TESTFIELD(Blocked,FALSE);
                                                                  Item.TESTFIELD(Type,Item.Type::Inventory);
                                                                IF "Value Entry Type" = "Value Entry Type"::Revaluation THEN
                                                                  Item.TESTFIELD("Inventory Value Zero",FALSE);
                                                                Description := Item.Description;
                                                                "Inventory Posting Group" := Item."Inventory Posting Group";
                                                                "Item Category Code" := Item."Item Category Code";
                                                                "Item Tracking Code" := Item."Item Tracking Code";

                                                                IF "Item No." <> xRec."Item No." THEN BEGIN
                                                                  TESTFIELD("Partial Revaluation",FALSE);
                                                                  "Inventory Value Per" := "Inventory Value Per"::" ";
                                                                  VALIDATE("Applies-to Entry",0);
                                                                END;

                                                                "Gen. Prod. Posting Group" := Item."Gen. Prod. Posting Group";
                                                                "Inventory Posting Group" := Item."Inventory Posting Group";
                                                                "Unit of Measure Code" := Item."Base Unit of Measure";
                                                                VALIDATE("Unit of Measure Code");

                                                                CreateDim(
                                                                  DATABASE::Item,"Item No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code");
                                                              END;

                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 4   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Document Date","Posting Date");
                                                              END;

                                                   CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 5   ;   ;Entry Type          ;Option        ;OnValidate=BEGIN
                                                                CASE "Entry Type" OF
                                                                  "Entry Type"::Purchase:
                                                                    IF UserMgt.GetRespCenter(1,'') <> '' THEN
                                                                      "Location Code" := UserMgt.GetLocation(1,'',UserMgt.GetPurchasesFilter);
                                                                  "Entry Type"::Sale:
                                                                    BEGIN
                                                                      IF UserMgt.GetRespCenter(0,'') <> '' THEN
                                                                        "Location Code" := UserMgt.GetLocation(0,'',UserMgt.GetSalesFilter);
                                                                    END;
                                                                END;

                                                                IF xRec."Location Code" = '' THEN
                                                                  IF Location.GET("Location Code") THEN
                                                                    IF  Location."Directed Put-away and Pick" THEN
                                                                      "Location Code" := '';

                                                                IF "Item No." <> '' THEN
                                                                  VALIDATE("Location Code");

                                                                VALIDATE("Item No.");
                                                              END;

                                                   CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer }
    { 7   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 8   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 9   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF "Entry Type" <= "Entry Type"::Transfer THEN
                                                                  TESTFIELD("Item No.");

                                                                // Location code in allowed only for inventoriable items
                                                                IF "Location Code" <> '' THEN
                                                                  Item.TESTFIELD(Type,Item.Type::Inventory);
                                                                VALIDATE("Unit of Measure Code");
                                                              END;

                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 10  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group];
                                                   Editable=No }
    { 13  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Entry Type" <= "Entry Type"::Transfer) AND (Quantity <> 0) THEN
                                                                  TESTFIELD("Item No.");

                                                                "Quantity (Base)" := UOMMgt.CalcBaseQty(Quantity,"Qty. per Unit of Measure");
                                                                "Invoiced Quantity" := Quantity;
                                                                "Invoiced Qty. (Base)" := UOMMgt.CalcBaseQty("Invoiced Quantity","Qty. per Unit of Measure");

                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[DEU=Fakturierte Menge;
                                                              ENU=Invoiced Quantity];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Unit Amount         ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount;
                                                                IF "Item No." <> '' THEN
                                                                  IF "Value Entry Type" = "Value Entry Type"::Revaluation THEN
                                                                    "Unit Cost" := "Unit Amount"
                                                              END;

                                                   CaptionML=[DEU=StÅckpreis;
                                                              ENU=Unit Amount];
                                                   AutoFormatType=2 }
    { 17  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Item No.");
                                                                IF "Entry Type" IN ["Entry Type"::Purchase,"Entry Type"::"Positive Adjmt."] THEN
                                                                  IF Item."Costing Method" = Item."Costing Method"::Standard THEN BEGIN
                                                                    IF CurrFieldNo = FIELDNO("Unit Cost") THEN
                                                                      ERROR(
                                                                        Text002,
                                                                        FIELDCAPTION("Unit Cost"),Item.FIELDCAPTION("Costing Method"),Item."Costing Method");
                                                                    "Unit Cost" := ROUND(UnitCost * "Qty. per Unit of Measure",GLSetup."Unit-Amount Rounding Precision");
                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost];
                                                   AutoFormatType=2 }
    { 18  ;   ;Valuation Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Valuation Amount" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                             Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                             Item No.=FIELD(Item No.),
                                                                                                                             Posting Date=FIELD(Posting Date),
                                                                                                                             Calculation Type=FIELD(Calculation Type),
                                                                                                                             Valid Value=CONST(Yes)));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Quantity);
                                                                "Unit Amount" := "Valuation Amount" / Quantity;
                                                                VALIDATE("Unit Amount");
                                                                ReadGLSetup;
                                                                "Unit Amount" := ROUND("Unit Amount",GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[DEU=Bewertungsbetrag;
                                                              ENU=Valuation Amount];
                                                   AutoFormatType=1 }
    { 23  ;   ;Salespers./Purch. Code;Code20      ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                  DATABASE::Item,"Item No.");
                                                              END;

                                                   CaptionML=[DEU=Verk.-/EinkÑufercode;
                                                              ENU=Salespers./Purch. Code] }
    { 26  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code];
                                                   Editable=No }
    { 29  ;   ;Applies-to Entry    ;Integer       ;OnValidate=VAR
                                                                ItemApplnEntry@5447564 : Record 339;
                                                                ItemLedgEntryAppln@5447563 : Record 32;
                                                                ItemLedgEntry@1000 : Record 32;
                                                                ItemHistoricalData@5447561 : Record 5447560;
                                                                ItemValPlanEntry@5452007 : Record 5447605;
                                                                TempApplAnalysisBuf@5447562 : TEMPORARY Record 5447650;
                                                                CostAmtActual@5447560 : Decimal;
                                                                DummyNextEntryNo@5452008 : Integer;
                                                              BEGIN
                                                                IF "Applies-to Entry" <> 0 THEN BEGIN
                                                                  ItemLedgEntry.GET("Applies-to Entry");
                                                                  IF NOT CalledByCalculation THEN BEGIN
                                                                    IF "Inventory Value Per" <> "Inventory Value Per"::" " THEN
                                                                      ERROR(Text006,FIELDCAPTION("Applies-to Entry"));
                                                                    InitRevalJnlLine(ItemLedgEntry,CostAmtActual);
                                                                    ItemLedgEntry.TESTFIELD(Positive,TRUE);
                                                                  END;

                                                                  TransferFromItemLedgEntry(ItemLedgEntry);

                                                                  // Calculate first positive Ledger Entry
                                                                  IF "Entry Type" = "Entry Type"::Transfer THEN BEGIN
                                                                    ItemApplnEntry.RESET;
                                                                    ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
                                                                    ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Applies-to Entry");
                                                                    ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1',0);
                                                                    IF ItemApplnEntry.FINDFIRST THEN BEGIN
                                                                      ItemLedgEntryAppln.GET(ItemApplnEntry."Outbound Item Entry No.");

                                                                      CLEAR(ApplAnalysisMgt);
                                                                      ApplAnalysisMgt.CalculateApplAnalysisBuffer(
                                                                        ItemLedgEntryAppln,
                                                                        TRUE,                      // TRUE: create also a first entry in the Buffer for the ItemLedgEntry0
                                                                        TRUE,                      // FALSE: dont ignore the Filter of ItemApplEntry."Cost Application" = Yes
                                                                                                   // Start / Stop kfw01.MS: new parameter has been added in this function of CU5049000
                                                                        TempApplAnalysisBuf);
                                                                      TempApplAnalysisBuf.SETRANGE(Positive,TRUE);
                                                                      IF TempApplAnalysisBuf.FINDLAST THEN BEGIN
                                                                        "Posting Date First LE" := TempApplAnalysisBuf."Posting Date";
                                                                        "Item Ledger Entry No. First LE" := TempApplAnalysisBuf."Item Ledger Entry No.";
                                                                      END;
                                                                    END;
                                                                  END;
                                                                  IF "Posting Date First LE" = 0D THEN BEGIN
                                                                    "Posting Date First LE" := ItemLedgEntry."Posting Date";
                                                                    "Item Ledger Entry No. First LE" := ItemLedgEntry."Entry No.";
                                                                  END;

                                                                  // Check if First Posting Date on Item Historical Date is earlier
                                                                  IF ItemHistoricalData.GET("Item Ledger Entry No. First LE") AND
                                                                     (ItemHistoricalData."Posting Date" <> 0D) AND
                                                                     (ItemHistoricalData."Posting Date" < "Posting Date First LE")
                                                                  THEN
                                                                    "Posting Date First LE" := ItemHistoricalData."Posting Date";

                                                                  IF NOT CalledByCalculation THEN
                                                                    InsertItemValPlanEntry(ItemValPlanEntry,CostAmtActual,'',DummyNextEntryNo);
                                                                END ELSE BEGIN
                                                                  VALIDATE("Unit Amount",0);
                                                                  VALIDATE(Quantity,0);
                                                                  "Inventory Value (Calculated)" := 0;
                                                                  "Inventory Value (Revalued)" := 0;
                                                                  "Location Code" := '';
                                                                  "Variant Code" := '';
                                                                  "Serial No." := '';
                                                                  "Lot No." := '';
                                                                  "Item Expiration Date" := 0D;
                                                                  "Posting Date First LE" := 0D;
                                                                  "Item Ledger Entry No. First LE" := 0;

                                                                  DeleteItemValPlanEntry(xRec."Applies-to Entry");
                                                                END;

                                                                IF "Applies-to Entry" <> 0 THEN BEGIN
                                                                  ItemValJnlLine.SETCURRENTKEY("Applies-to Entry","Posting Date");
                                                                  ItemValJnlLine.SETRANGE("Applies-to Entry","Applies-to Entry");
                                                                  ItemValJnlLine.SETRANGE("Posting Date","Posting Date");
                                                                  ItemValJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                                                  IF "Calculation Type" = "Calculation Type"::"Unit Cost Basis" THEN
                                                                    ItemValJnlLine.SETRANGE("Calculation Type","Calculation Type")
                                                                  ELSE
                                                                    ItemValJnlLine.SETFILTER("Calculation Type",'<>%1',"Calculation Type"::"Unit Cost Basis");
                                                                  ItemValJnlLine.SETRANGE("Item No.","Item No.");
                                                                  ItemValJnlLine.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  IF ItemValJnlLine.FINDFIRST THEN
                                                                    ERROR(Text034,
                                                                      FIELDCAPTION("Applies-to Entry"),"Applies-to Entry",
                                                                      TABLECAPTION,ItemValJnlLine."Line No.","Journal Batch Name");
                                                                END;

                                                                CreateDim(
                                                                  DATABASE::Item,"Item No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectItemEntry();
                                                            END;

                                                   CaptionML=[DEU=Ausgleich mit Lfd. Nr.;
                                                              ENU=Applies-to Entry] }
    { 34  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[DEU=Shortcutdimensionscode 1;
                                                              ENU=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 35  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[DEU=Shortcutdimensionscode 2;
                                                              ENU=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 41  ;   ;Journal Batch Name  ;Code10        ;TableRelation="IVA Item Val. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 42  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 49  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[DEU=LÑnder-/Regionscode;
                                                              ENU=Country/Region Code] }
    { 50  ;   ;Valuation Cond. Code;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("IVA Item Valuation Plan Entry"."Valuation Cond. Code" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                    Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                    Item No.=FIELD(Item No.),
                                                                                                                                    Posting Date=FIELD(Posting Date),
                                                                                                                                    Calculation Type=FIELD(Calculation Type),
                                                                                                                                    Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Bewertungsregel Code;
                                                              ENU=Valuation Condition Code];
                                                   Editable=No }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group];
                                                   Editable=No }
    { 58  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group];
                                                   Editable=No }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date] }
    { 65  ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[DEU=Buchungsnr.-Serie;
                                                              ENU=Posting No. Series] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 2020;   ;Valuation Factor    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("IVA Item Valuation Plan Entry"."Valuation Factor" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                Item No.=FIELD(Item No.),
                                                                                                                                Posting Date=FIELD(Posting Date),
                                                                                                                                Calculation Type=FIELD(Calculation Type),
                                                                                                                                Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Bewertungsfaktor;
                                                              ENU=Valuation Factor];
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" = '' THEN
                                                                  EXIT;

                                                                ItemVariant.GET("Item No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[DEU=Menge pro Einheit;
                                                              ENU=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                GetItem;
                                                                "Qty. per Unit of Measure" := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code");

                                                                TESTFIELD("Qty. per Unit of Measure",1);

                                                                ReadGLSetup;
                                                                "Unit Cost" := ROUND(UnitCost * "Qty. per Unit of Measure",GLSetup."Unit-Amount Rounding Precision");

                                                                VALIDATE("Unit Amount");
                                                                VALIDATE(Quantity);
                                                              END;

                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code] }
    { 5413;   ;Quantity (Base)     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Qty. per Unit of Measure",1);
                                                                VALIDATE(Quantity,"Quantity (Base)");
                                                              END;

                                                   CaptionML=[DEU=Menge (Basis);
                                                              ENU=Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 5415;   ;Invoiced Qty. (Base);Decimal       ;CaptionML=[DEU=Fakturierte Menge (Basis);
                                                              ENU=Invoiced Qty. (Base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5704;   ;Item Category Code  ;Code20        ;TableRelation="Item Category";
                                                   CaptionML=[DEU=Artikelkategoriencode;
                                                              ENU=Item Category Code];
                                                   Editable=No }
    { 5800;   ;Value Entry Type    ;Option        ;CaptionML=[DEU=Wertpostenart;
                                                              ENU=Value Entry Type];
                                                   OptionCaptionML=[DEU=Direkte Kosten,Neubewertung,Rundung,Indirekte Kosten,Abweichung;
                                                                    ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance }
    { 5802;   ;Inventory Value (Calculated);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (Calculated)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                         Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                         Item No.=FIELD(Item No.),
                                                                                                                                         Posting Date=FIELD(Posting Date),
                                                                                                                                         Calculation Type=FIELD(Calculation Type),
                                                                                                                                         Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Lagerwert (berechnet);
                                                              ENU=Inventory Value (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5803;   ;Inventory Value (Revalued);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (Revalued)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                       Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                       Item No.=FIELD(Item No.),
                                                                                                                                       Posting Date=FIELD(Posting Date),
                                                                                                                                       Calculation Type=FIELD(Calculation Type),
                                                                                                                                       Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Lagerwert (neu bewertet);
                                                              ENU=Inventory Value (Revalued)];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5804;   ;Inventory Value (Specific);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (Revalued)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                       Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                       Item No.=FIELD(Item No.),
                                                                                                                                       Posting Date=FIELD(Posting Date),
                                                                                                                                       Calculation Type=FIELD(Calculation Type),
                                                                                                                                       Valuation Type=CONST(Specific)));
                                                   CaptionML=[DEU=Lagerwert (Einzelwert);
                                                              ENU=Inventory Value (Specific)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 5805;   ;Inventory Value Per ;Option        ;CaptionML=[DEU=Lagerwert pro;
                                                              ENU=Inventory Value Per];
                                                   OptionCaptionML=[DEU=" ,Artikel,Lagerort,Variante,Lagerort und Variante";
                                                                    ENU=" ,Item,Location,Variant,Location and Variant"];
                                                   OptionString=[ ,Item,Location,Variant,Location and Variant];
                                                   Editable=No }
    { 5806;   ;Partial Revaluation ;Boolean       ;CaptionML=[DEU=Teilneubewertung;
                                                              ENU=Partial Revaluation];
                                                   Editable=No }
    { 5808;   ;Calculation Type    ;Option        ;CaptionML=[DEU=Berechnungsart;
                                                              ENU=Calculation Type];
                                                   OptionCaptionML=[DEU=" ,Einstandspreisgrundlage,Basierend auf Einstandspreisgrundlage";
                                                                    ENU=" ,Unit Cost Basis,Based on Unit Cost Basis"];
                                                   OptionString=[ ,Unit Cost Basis,Based on Unit Cost Basis];
                                                   Editable=No }
    { 5809;   ;Unit Cost (Calculated);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Unit Cost (Calculated)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                   Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                   Item No.=FIELD(Item No.),
                                                                                                                                   Posting Date=FIELD(Posting Date),
                                                                                                                                   Calculation Type=FIELD(Calculation Type),
                                                                                                                                   Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Einstandspreis (berechnet);
                                                              ENU=Unit Cost (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5810;   ;Unit Cost (Revalued);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Unit Cost (Revalued)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                 Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                 Item No.=FIELD(Item No.),
                                                                                                                                 Posting Date=FIELD(Posting Date),
                                                                                                                                 Calculation Type=FIELD(Calculation Type),
                                                                                                                                 Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Einstandspreis (neu bewertet);
                                                              ENU=Unit Cost (Revalued)];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5811;   ;Unit Cost (Specific);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Unit Cost (Revalued)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                 Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                 Item No.=FIELD(Item No.),
                                                                                                                                 Posting Date=FIELD(Posting Date),
                                                                                                                                 Calculation Type=FIELD(Calculation Type),
                                                                                                                                 Valuation Type=CONST(Specific)));
                                                   CaptionML=[DEU=Einstandspreis (Einzelwert);
                                                              ENU=Unit Cost (Specific)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 5812;   ;Unit Cost (Unit Cost Basis);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Unit Cost (Unit Cost Basis)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                        Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                        Item No.=FIELD(Item No.),
                                                                                                                                        Posting Date=FIELD(Posting Date),
                                                                                                                                        Calculation Type=FIELD(Calculation Type),
                                                                                                                                        Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Einstandspreis (Einstandspreisgrundlage);
                                                              ENU=Unit Cost (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5813;   ;Inventory Value (UnitCosBasis);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (UnitCosBasis)" WHERE (Item Ledger Entry No.=FIELD(Applies-to Entry),
                                                                                                                                           Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                                                           Item No.=FIELD(Item No.),
                                                                                                                                           Posting Date=FIELD(Posting Date),
                                                                                                                                           Calculation Type=FIELD(Calculation Type),
                                                                                                                                           Valid Value=CONST(Yes)));
                                                   CaptionML=[DEU=Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Inventory Value (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 6500;   ;Serial No.          ;Code50        ;CaptionML=[DEU=Seriennr.;
                                                              ENU=Serial No.];
                                                   Editable=No }
    { 6501;   ;Lot No.             ;Code50        ;CaptionML=[DEU=Chargennr.;
                                                              ENU=Lot No.];
                                                   Editable=No }
    { 6506;   ;Item Expiration Date;Date          ;CaptionML=[DEU=Artikelablaufdatum;
                                                              ENU=Item Expiration Date];
                                                   Editable=No }
    { 6507;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode;
                                                              ENU=Item Tracking Code];
                                                   Editable=No }
    { 7000;   ;Posting Date First LE;Date         ;CaptionML=[DEU=Buchungsdatum (1. Buchungsposten);
                                                              ENU=Posting Date (First Ledger Entry)] }
    { 7001;   ;Item Ledger Entry No. First LE;Integer;
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr. (1. Buchungsposten);
                                                              ENU=Item Ledger Entry No. (First Ledger Entry)] }
    { 10000;  ;Post As Revaluation ;Boolean       ;CaptionML=[DEU=Als Neubewertung buchen;
                                                              ENU=Post as Revaluation];
                                                   Description=Use only internal;
                                                   Editable=No }
    { 20000;  ;Comments            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("IVA Item Val. Comment Line" WHERE (Table ID=CONST(5447605),
                                                                                                         Item Ledger Entry No.=FIELD(Applies-to Entry)));
                                                   CaptionML=[DEU=Bemerkungen;
                                                              ENU=Comments];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Entry Type,Item No.,Variant Code,Location Code,Posting Date;
                                                   SumIndexFields=Quantity (Base);
                                                   MaintainSIFTIndex=No }
    { No ;Entry Type,Item No.,Variant Code,Posting Date;
                                                   SumIndexFields=Quantity (Base);
                                                   MaintainSIFTIndex=No }
    {    ;Item No.,Posting Date                    }
    {    ;Applies-to Entry,Posting Date            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text006@1005 : TextConst 'DEU=Sie dÅrfen keine %1 in eine Neubewertungssummenzeile eingeben.;ENU=You must not enter %1 in a revaluation sum line.';
      ItemValJnlTemplate@1007 : Record 5447600;
      ItemValJnlBatch@1008 : Record 5447602;
      ItemValJnlLine@1009 : Record 5447603;
      Item@1010 : Record 27;
      ItemVariant@1012 : Record 5401;
      GLSetup@1014 : Record 98;
      Location@1048 : Record 14;
      ItemValSetup@5447563 : Record 5447599;
      ItemAvailByDate@1017 : Page 157;
      ItemAvailByVar@1018 : Page 5414;
      ItemAvailByLoc@1019 : Page 492;
      NoSeriesMgt@1023 : Codeunit 396;
      UOMMgt@1024 : Codeunit 5402;
      DimMgt@1027 : Codeunit 408;
      UserMgt@1033 : Codeunit 5700;
      ApplAnalysisMgt@5447562 : Codeunit 5447650;
      ValCondCalcMgt@5452007 : Codeunit 5447562;
      CalledByCalculation@5447566 : Boolean;
      GLSetupRead@1029 : Boolean;
      ItemValSetupRead@5447564 : Boolean;
      UnitCost@1031 : Decimal;
      Text002@5447565 : TextConst 'DEU=Sie kînnen %1 nicht Ñndern, wenn %2 %3 ist.;ENU=You cannot change %1 when %2 is %3.';
      Text005@5447561 : TextConst 'DEU=Mîchten Sie %1 von %2 in %3 Ñndern?;ENU=Change %1 from %2 to %3?';
      Text034@5447560 : TextConst 'DEU=FÅr %1 %2 existiert bereits die %3 %4 in Buchblatt Namen %5.;ENU=There is still %3 %4 of journal batch name %5 for %1 %2.';

    [External]
    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(
        (Quantity = 0) AND
        (("Item No." = '') OR
         ("Value Entry Type" = "Value Entry Type"::Revaluation)));
    END;

    [External]
    PROCEDURE IsValueEntryForDeletedItem@22() : Boolean;
    BEGIN
      EXIT(
        (("Value Entry Type" = "Value Entry Type"::Rounding)) AND
        ("Item No." = '') AND ("Invoiced Qty. (Base)" <> 0));
    END;

    LOCAL PROCEDURE UpdateAmount@23();
    BEGIN
      "Valuation Amount" := ROUND(Quantity * "Unit Amount");

      OnAfterUpdateValuationAmount(Rec);
    END;

    LOCAL PROCEDURE SelectItemEntry@3();
    VAR
      ItemLedgEntry@1001 : Record 32;
      ItemValJnlLine2@1002 : Record 5447603;
    BEGIN
      ItemLedgEntry.SETCURRENTKEY("Item No.",Positive);
      ItemLedgEntry.SETRANGE("Item No.","Item No.");

      IF "Location Code" <> '' THEN
        ItemLedgEntry.SETRANGE("Location Code","Location Code");

      ItemLedgEntry.SETRANGE(Positive,TRUE);
      IF "Value Entry Type" <> "Value Entry Type"::Revaluation THEN BEGIN
        ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
        ItemLedgEntry.SETRANGE(Open,TRUE);
      END;

      OnSelectItemEntryOnBeforeOpenPage(ItemLedgEntry,Rec);

      IF PAGE.RUNMODAL(PAGE::"Item Ledger Entries",ItemLedgEntry) = ACTION::LookupOK THEN BEGIN
        ItemValJnlLine2 := Rec;
        ItemValJnlLine2.VALIDATE("Applies-to Entry",ItemLedgEntry."Entry No.");
        Rec := ItemValJnlLine2;
      END;
    END;

    LOCAL PROCEDURE GetItem@2();
    BEGIN
      IF Item."No." <> "Item No." THEN
        Item.GET("Item No.");

      OnAfterGetItemChange(Item,Rec);
    END;

    [External]
    PROCEDURE SetUpNewLine@8(LastItemValJnlLine@1000 : Record 5447603);
    BEGIN
      ItemValJnlTemplate.GET("Journal Template Name");
      ItemValJnlBatch.GET("Journal Template Name","Journal Batch Name");
      ItemValJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      ItemValJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF ItemValJnlLine.FIND('-') THEN BEGIN
        "Posting Date" := LastItemValJnlLine."Posting Date";
        "Document Date" := LastItemValJnlLine."Posting Date";
        "Document No." := LastItemValJnlLine."Document No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        "Document Date" := WORKDATE;
        IF ItemValJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(ItemValJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Entry Type" := LastItemValJnlLine."Entry Type";
      "Source Code" := ItemValJnlTemplate."Source Code";
      "Reason Code" := ItemValJnlBatch."Reason Code";
      "Posting No. Series" := ItemValJnlBatch."Posting No. Series";
      "Value Entry Type" := "Value Entry Type"::Revaluation;
      "Entry Type" := "Entry Type"::"Positive Adjmt.";

      CASE "Entry Type" OF
        "Entry Type"::Purchase:
          "Location Code" := UserMgt.GetLocation(1,'',UserMgt.GetPurchasesFilter);
        "Entry Type"::Sale:
          "Location Code" := UserMgt.GetLocation(0,'',UserMgt.GetSalesFilter);
      END;

      IF Location.GET("Location Code") THEN
        IF  Location."Directed Put-away and Pick" THEN
          "Location Code" := '';

      OnAfterSetupNewLine(Rec,LastItemValJnlLine,ItemValJnlTemplate);
    END;

    PROCEDURE ItemAvailability@10(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      TESTFIELD("Item No.");
      Item.RESET;
      Item.GET("Item No.");
      Item.SETRANGE("No.","Item No.");
      Item.SETRANGE("Date Filter",0D,"Posting Date");

      CASE AvailabilityType OF
        AvailabilityType::Date:
          BEGIN
            Item.SETRANGE("Variant Filter","Variant Code");
            Item.SETRANGE("Location Filter","Location Code");
            CLEAR(ItemAvailByDate);
            ItemAvailByDate.LOOKUPMODE(TRUE);
            ItemAvailByDate.SETRECORD(Item);
            ItemAvailByDate.SETTABLEVIEW(Item);
            IF ItemAvailByDate.RUNMODAL = ACTION::LookupOK THEN
              IF "Posting Date" <> ItemAvailByDate.GetLastDate THEN
                IF CONFIRM(
                     Text005,TRUE,FIELDCAPTION("Posting Date"),"Posting Date",
                     ItemAvailByDate.GetLastDate)
                THEN BEGIN
                  VALIDATE("Posting Date",ItemAvailByDate.GetLastDate);
                  MODIFY;
                END;
          END;
        AvailabilityType::Variant:
          BEGIN
            CLEAR(ItemAvailByVar);
            ItemAvailByVar.LOOKUPMODE(TRUE);
            ItemAvailByVar.SETRECORD(Item);
            ItemAvailByVar.SETTABLEVIEW(Item);
            IF ItemAvailByVar.RUNMODAL = ACTION::LookupOK THEN
              IF "Variant Code" <> ItemAvailByVar.GetLastVariant THEN
                IF CONFIRM(
                     Text005,TRUE,FIELDCAPTION("Variant Code"),"Variant Code",
                     ItemAvailByVar.GetLastVariant)
                THEN BEGIN
                  VALIDATE("Variant Code",ItemAvailByVar.GetLastVariant);
                  MODIFY;
                END;
          END;
        AvailabilityType::Location:
          BEGIN
            CLEAR(ItemAvailByLoc);
            ItemAvailByLoc.LOOKUPMODE(TRUE);
            ItemAvailByLoc.SETRECORD(Item);
            ItemAvailByLoc.SETTABLEVIEW(Item);
            IF ItemAvailByLoc.RUNMODAL = ACTION::LookupOK THEN
              IF "Location Code" <> ItemAvailByLoc.GetLastLocation THEN
                IF CONFIRM(
                     Text005,TRUE,FIELDCAPTION("Location Code"),"Location Code",
                     ItemAvailByLoc.GetLastLocation)
                THEN BEGIN
                  VALIDATE("Location Code",ItemAvailByLoc.GetLastLocation);
                  MODIFY;
                END;
          END;
      END;
      Item.RESET;
    END;

    [External]
    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20]);
    VAR
      ItemLedgEntry@5447560 : Record 32;
      TableID@1004 : ARRAY [10] OF Integer;
      No@1005 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;

      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      GetItemValSetup;
      IF (ItemValSetup."Calc. of Dimension by" = ItemValSetup."Calc. of Dimension by"::"Item Ledger Entry") AND
         ("Applies-to Entry" <> 0)
      THEN BEGIN
        ItemLedgEntry.GET("Applies-to Entry");
        CopyDim(ItemLedgEntry."Dimension Set ID");
      END ELSE
        "Dimension Set ID" :=
          DimMgt.GetDefaultDimID(
            TableID,No,"Source Code",
            "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    [External]
    PROCEDURE CopyDim@46(DimesionSetID@1000 : Integer);
    VAR
      DimSetEntry@1002 : Record 480;
    BEGIN
      ReadGLSetup;
      "Dimension Set ID" := DimesionSetID;
      DimSetEntry.SETRANGE("Dimension Set ID",DimesionSetID);
      DimSetEntry.SETRANGE("Dimension Code",GLSetup."Global Dimension 1 Code");
      IF DimSetEntry.FINDFIRST THEN
        "Shortcut Dimension 1 Code" := DimSetEntry."Dimension Value Code"
      ELSE
        "Shortcut Dimension 1 Code" := '';
      DimSetEntry.SETRANGE("Dimension Code",GLSetup."Global Dimension 2 Code");
      IF DimSetEntry.FINDFIRST THEN
        "Shortcut Dimension 2 Code" := DimSetEntry."Dimension Value Code"
      ELSE
        "Shortcut Dimension 2 Code" := '';
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@9(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    LOCAL PROCEDURE InitRevalJnlLine@5800(ItemLedgEntry2@1000 : Record 32;VAR CostAmtActual@5447560 : Decimal);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF "Value Entry Type" <> "Value Entry Type"::Revaluation THEN
        EXIT;

      ItemLedgEntry2.TESTFIELD("Item No.","Item No.");
      ItemLedgEntry2.TESTFIELD("Completely Invoiced",TRUE);
      ItemLedgEntry2.TESTFIELD(Positive,TRUE);
      ItemApplnEntry.CheckAppliedFromEntryToAdjust(ItemLedgEntry2."Entry No.");

      VALIDATE("Entry Type",ItemLedgEntry2."Entry Type");
      "Posting Date" := ItemLedgEntry2."Posting Date";
      VALIDATE("Unit Amount",0);
      VALIDATE(Quantity,ItemLedgEntry2."Invoiced Quantity");

      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Item Ledger Entry No.","Entry Type");
      ValueEntry.SETRANGE("Item Ledger Entry No.",ItemLedgEntry2."Entry No.");
      ValueEntry.SETFILTER("Entry Type",'<>%1',ValueEntry."Entry Type"::Rounding);
      ValueEntry.FIND('-');
      REPEAT
        IF NOT (ValueEntry."Expected Cost" OR ValueEntry."Partial Revaluation") THEN
          CostAmtActual := CostAmtActual + ValueEntry."Cost Amount (Actual)";
      UNTIL ValueEntry.NEXT = 0;

      "Location Code" := ItemLedgEntry2."Location Code";
      "Variant Code" := ItemLedgEntry2."Variant Code";
      "Applies-to Entry" := ItemLedgEntry2."Entry No.";
      CopyDim(ItemLedgEntry2."Dimension Set ID");
    END;

    LOCAL PROCEDURE ReadGLSetup@5801();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    [External]
    PROCEDURE ShowDimensions@41();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    LOCAL PROCEDURE GetItemValSetup@5447564();
    BEGIN
      IF NOT ItemValSetupRead THEN
        ItemValSetup.GET;
      ItemValSetupRead := TRUE;
    END;

    LOCAL PROCEDURE TransferFromItemLedgEntry@5447563(ItemLedgEntry@5447560 : Record 32);
    BEGIN
      "Location Code" := ItemLedgEntry."Location Code";
      "Variant Code" := ItemLedgEntry."Variant Code";

      "Serial No." := ItemLedgEntry."Serial No.";
      "Lot No." := ItemLedgEntry."Lot No.";
      "Item Expiration Date" := ItemLedgEntry."Expiration Date";
    END;

    PROCEDURE InsertItemValPlanEntry@5447560(VAR ItemValPlanEntry@5452009 : Record 5447605;CostAmtActual@5447561 : Decimal;ValuationConditionCode@5452007 : Code[20];VAR NextEntryNo@5452008 : Integer);
    BEGIN
      WITH ItemValPlanEntry DO BEGIN
        IF NextEntryNo = 0 THEN BEGIN
          LOCKTABLE;
          IF FIND( '+' ) THEN
            NextEntryNo := "Entry No.";
        END;

        NextEntryNo := NextEntryNo +1;
        INIT;
        "Entry No." := NextEntryNo;
        TransferFromItemValJnlLine(Rec,0,FALSE);
        "Valuation Type" := "Valuation Type"::Unevaluated;
        VALIDATE("Inventory Value (Calculated)",ROUND(CostAmtActual,GLSetup."Amount Rounding Precision"));
        VALIDATE("Inventory Value (Revalued)","Inventory Value (Calculated)");

        IF "Calculation Type" = "Calculation Type"::"Based on Unit Cost Basis" THEN
          ValCondCalcMgt.GetUnitCostBasis(ItemValPlanEntry);

        IF ValuationConditionCode <> '' THEN
          VALIDATE("Valuation Cond. Code",ValuationConditionCode);
        "Valid Value" := TRUE;
        "User ID" := USERID;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE DeleteItemValPlanEntry@5447561(AppliesToEntry@5447560 : Integer);
    VAR
      ItemValPlanEntry@5447561 : Record 5447605;
      ItemValCommentLine@5447650 : Record 5447598;
    BEGIN
      ItemValPlanEntry.RESET;
      ItemValPlanEntry.SETCURRENTKEY("Item Ledger Entry No.","Journal Batch Name","Item No.","Posting Date","Calculation Type");
      ItemValPlanEntry.SETRANGE("Item Ledger Entry No.",AppliesToEntry);
      ItemValPlanEntry.SETRANGE("Journal Batch Name","Journal Batch Name");
      ItemValPlanEntry.SETRANGE("Item No.","Item No.");
      ItemValPlanEntry.SETRANGE("Posting Date","Posting Date");
      ItemValPlanEntry.SETRANGE("Calculation Type","Calculation Type");
      IF NOT ItemValPlanEntry.ISEMPTY THEN
        ItemValPlanEntry.DELETEALL(FALSE);

      ItemValCommentLine.SETRANGE("Table ID", DATABASE::"IVA Item Valuation Plan Entry");
      ItemValCommentLine.SETRANGE("Item Ledger Entry No.", AppliesToEntry);
      IF NOT ItemValCommentLine.ISEMPTY THEN
        ItemValCommentLine.DELETEALL;
    END;

    PROCEDURE SetValidValue2Specific@5447562();
    VAR
      ItemValPlanEntry@5447560 : Record 5447605;
    BEGIN
      ItemValPlanEntry.RESET;
      ItemValPlanEntry.SETCURRENTKEY(
        "Item Ledger Entry No.","Journal Batch Name","Item No.","Posting Date","Calculation Type","Valuation Type");
      ItemValPlanEntry.SETRANGE("Item Ledger Entry No.","Applies-to Entry");
      ItemValPlanEntry.SETRANGE("Journal Batch Name","Journal Batch Name");
      ItemValPlanEntry.SETRANGE("Item No.","Item No.");
      ItemValPlanEntry.SETRANGE("Posting Date","Posting Date");
      ItemValPlanEntry.SETRANGE("Calculation Type","Calculation Type");
      ItemValPlanEntry.MODIFYALL("Valid Value",FALSE);

      ItemValPlanEntry.SETRANGE("Valuation Type",ItemValPlanEntry."Valuation Type"::Specific);
      ItemValPlanEntry.MODIFYALL("Valid Value",TRUE);
    END;

    PROCEDURE SetCalledByCalculation@5447565(CalledByCalculation2@5447560 : Boolean);
    BEGIN
      CalledByCalculation := CalledByCalculation2;
    END;

    [Integration]
    LOCAL PROCEDURE OnSelectItemEntryOnBeforeOpenPage@104(VAR ItemLedgerEntry@1000 : Record 32;ItemValJournalLine@1001 : Record 5447603);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSetupNewLine@71(VAR ItemValJournalLine@1000 : Record 5447603;VAR LastItemValJournalLine@1001 : Record 5447603;ItemValJournalTemplate@1002 : Record 5447600);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterUpdateValuationAmount@78(VAR ItemValuationJournalLine@1000 : Record 5447603);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterGetItemChange@99(VAR Item@1000 : Record 27;VAR ItemValJournalLine@1001 : Record 5447603);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnValidateItemNoOnAfterGetItem@88(VAR ItemValJournalLine@1000 : Record 5447603;Item@1001 : Record 27);
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447605 IVA Item Valuation Plan Entry
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Posting Date");
               TESTFIELD("Item Ledger Entry No.");
               TESTFIELD("Journal Batch Name");
               TESTFIELD("Item No.");

               LOCKTABLE;
               "User ID" := USERID;
               IF "Entry No." = 0 THEN
                 "Entry No." := GetNextEntryNo;
             END;

    OnModify=BEGIN
               "User ID" := USERID;
             END;

    OnDelete=VAR
               ItemValPlanEntrySpecific@5447560 : Record 5447605;
               ItemValCommentLine@5447650 : Record 5447598;
             BEGIN
               IF "Valid Value" THEN
                 IF "Valuation Type" = "Valuation Type"::Specific THEN BEGIN
                   ItemValPlanEntrySpecific.SETCURRENTKEY(
                     "Item Ledger Entry No.","Journal Batch Name","Item No.","Posting Date","Calculation Type","Valuation Type");
                   ItemValPlanEntrySpecific.SETRANGE("Item Ledger Entry No.","Item Ledger Entry No.");
                   ItemValPlanEntrySpecific.SETRANGE("Journal Batch Name","Journal Batch Name");
                   ItemValPlanEntrySpecific.SETRANGE("Item No.","Item No.");
                   ItemValPlanEntrySpecific.SETRANGE("Posting Date","Posting Date");
                   ItemValPlanEntrySpecific.SETRANGE("Calculation Type","Calculation Type");
                   ItemValPlanEntrySpecific.SETRANGE("Valuation Type","Valuation Type");
                   IF ItemValPlanEntrySpecific.COUNT = 1 THEN
                     ValCondCalcMgt.CalcValidAmount(Rec,"Entry No.");
                 END ELSE
                   ValCondCalcMgt.CalcValidAmount(Rec,"Entry No.");

               ItemValCommentLine.SETRANGE("Table ID", DATABASE::"IVA Item Valuation Plan Entry");
               ItemValCommentLine.SETRANGE("Item Ledger Entry No.", "Item Ledger Entry No.");
               ItemValCommentLine.SETRANGE("Entry No.", "Entry No.");
               IF NOT ItemValCommentLine.ISEMPTY THEN
                 ItemValCommentLine.DELETEALL;
             END;

    CaptionML=[DEU=Artikelbewertungsplanposten;
               ENU=Item Valuation Plan Entry];
    LookupPageID=Page5447605;
    DrillDownPageID=Page5447605;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   ClosingDates=Yes }
    { 5   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." = '' THEN
                                                                  EXIT;

                                                                GetItem;
                                                                GetItemValSetup;
                                                                IF NOT ItemValSetup."Allow Posting of blocked Items" THEN
                                                                  Item.TESTFIELD(Blocked,FALSE);

                                                                Description := Item.Description;
                                                                "Inventory Posting Group" := Item."Inventory Posting Group";
                                                                "Item Tracking Code" := Item."Item Tracking Code";
                                                                "Gen. Prod. Posting Group" := Item."Gen. Prod. Posting Group";
                                                              END;

                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 7   ;No ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.];
                                                   Description=Dummy for Item Valuation Entry }
    { 8   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 9   ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID];
                                                   Editable=No }
    { 14  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 15  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                IF "Global Dimension 1 Code" = '' THEN
                                                                  EXIT;
                                                                GetGLSetup;
                                                                ValidateDimValue(GLSetup."Global Dimension 1 Code","Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 16  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Global Dimension 2 Code" = '' THEN
                                                                  EXIT;
                                                                GetGLSetup;
                                                                ValidateDimValue(GLSetup."Global Dimension 2 Code","Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 50  ;   ;Valuation Cond. Code;Code20        ;TableRelation="IVA Valuation Condition";
                                                   OnValidate=VAR
                                                                ValCondition@5447560 : Record 5447562;
                                                              BEGIN
                                                                IF "Valuation Cond. Code" <> xRec."Valuation Cond. Code" THEN BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Valuation Cond. Code") THEN BEGIN
                                                                    IF "Valuation Type" = "Valuation Type"::Specific THEN
                                                                      TESTFIELD("Valuation Cond. Code",'')
                                                                    ELSE
                                                                      TESTFIELD("Valuation Cond. Code");
                                                                  END;

                                                                  "Valuation Type" := "Valuation Type"::Specific;
                                                                  IF "Valuation Cond. Code" <> ''THEN BEGIN
                                                                    ValCondition.SETRANGE(Code,"Valuation Cond. Code");
                                                                    IF ValCondition.FINDFIRST THEN
                                                                      "Valuation Type" := ValCondition."Valuation Type";
                                                                  END;
                                                                END;

                                                                ValCondCalcMgt.CalcInvtValueRevalued(Rec);
                                                              END;

                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group];
                                                   Editable=No }
    { 60  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 61  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 62  ;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode;
                                                              ENU=Item Tracking Code] }
    { 64  ;   ;Item Category Code  ;Code20        ;TableRelation="Item Category";
                                                   CaptionML=[DEU=Artikelkategoriencode;
                                                              ENU=Item Category Code] }
    { 73  ;No ;Reversed            ;Boolean       ;CaptionML=[DEU=Storniert;
                                                              ENU=Reversed];
                                                   Description=Dummy for Item Valuation Entry }
    { 74  ;No ;Reversed by Entry No.;Integer      ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Storniert durch Lfd. Nr.;
                                                              ENU=Reversed by Entry No.];
                                                   BlankZero=Yes;
                                                   Description=Dummy for Item Valuation Entry }
    { 75  ;No ;Reversed Entry No.  ;Integer       ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Stornierter Posten Lfd. Nr.;
                                                              ENU=Reversed Entry No.];
                                                   BlankZero=Yes;
                                                   Description=Dummy for Item Valuation Entry }
    { 100 ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   OnValidate=VAR
                                                                ItemValJnlLine@5447560 : Record 5447603;
                                                                ItemValPlanEntrySpecific@5447561 : Record 5447605;
                                                                FirstSpecific@5447562 : Boolean;
                                                              BEGIN
                                                                IF "Entry No." = 0 THEN BEGIN
                                                                  ItemValJnlLine.SETRANGE("Item No.","Item No.");
                                                                  ItemValJnlLine.SETRANGE("Posting Date","Posting Date");
                                                                  ItemValJnlLine.SETRANGE("Applies-to Entry","Item Ledger Entry No.");
                                                                  ItemValJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                                                  ItemValJnlLine.SETRANGE("Calculation Type","Calculation Type");
                                                                  ItemValJnlLine.FINDFIRST;

                                                                  IF "Valuation Type" = "Valuation Type"::Specific THEN BEGIN
                                                                    ItemValPlanEntrySpecific.SETCURRENTKEY(
                                                                      "Item Ledger Entry No.","Journal Batch Name","Item No.","Posting Date","Calculation Type","Valuation Type");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Item No.","Item No.");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Posting Date","Posting Date");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Item Ledger Entry No.","Item Ledger Entry No.");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Journal Batch Name","Journal Batch Name");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Calculation Type","Calculation Type");
                                                                    ItemValPlanEntrySpecific.SETRANGE("Valuation Type","Valuation Type");
                                                                    IF ItemValPlanEntrySpecific.ISEMPTY THEN BEGIN
                                                                      FirstSpecific := TRUE;
                                                                      ItemValJnlLine.CALCFIELDS("Inventory Value (Calculated)");
                                                                    END;
                                                                  END;
                                                                  TransferFromItemValJnlLine(ItemValJnlLine,ItemValJnlLine."Inventory Value (Calculated)",FirstSpecific);
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 101 ;   ;Journal Batch Name  ;Code10        ;TableRelation="IVA Item Val. Journal Batch".Name;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 2001;   ;Valuation Type      ;Option        ;CaptionML=[DEU=Bewertungsart;
                                                              ENU=Valuation Type];
                                                   OptionCaptionML=[DEU=Einzelwert,Reichweite,Abgang,Ablaufdatum,Alterstruktur,Lagerart,WÑhrung,Niederstwert,Reichweite-Perioden,Abgang-Perioden,Unbewertet;
                                                                    ENU=Specific,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods,Unevaluated];
                                                   OptionString=Specific,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods,Unevaluated;
                                                   Editable=No }
    { 2020;   ;Valuation Factor    ;Decimal       ;CaptionML=[DEU=Bewertungsfaktor;
                                                              ENU=Valuation Factor];
                                                   DecimalPlaces=0:2 }
    { 2099;   ;Operator            ;Option        ;CaptionML=[DEU=Operator;
                                                              ENU=Operator];
                                                   OptionCaptionML=[DEU=" ,<,>,<=,>=";
                                                                    ENU=" ,<,>,<=,>="];
                                                   OptionString=[ ,<,>,<=,>=] }
    { 2100;   ;Period              ;DateFormula   ;CaptionML=[DEU=Periode;
                                                              ENU=Period] }
    { 2101;   ;Number of Periods   ;Integer       ;CaptionML=[DEU=Anzahl Perioden;
                                                              ENU=Number of Periods];
                                                   BlankZero=Yes }
    { 2105;   ;Starting Value      ;Decimal       ;CaptionML=[DEU=Startwert;
                                                              ENU=Starting Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 2106;   ;Ending Value        ;Decimal       ;CaptionML=[DEU=Endwert;
                                                              ENU=Ending Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 2110;   ;Period Incoming Entry;DateFormula  ;CaptionML=[DEU=Periode Eingehende Posten;
                                                              ENU=Period Incoming Entry] }
    { 2115;   ;Scrap Value         ;Decimal       ;CaptionML=[DEU=Schrottwert;
                                                              ENU=Scrap Value];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 2120;   ;Lowest Value Type   ;Option        ;CaptionML=[DEU=Niederstwert - Art;
                                                              ENU=Lowest Value Type];
                                                   OptionCaptionML=[DEU=" ,EK-Preis (Neuester),EK-Preis (Neuester) Artikel,Durchschnittliche Einstandspreis,Letzter Verkaufspreis,EK-Preis (Niedrigste),Einstandspreis (Neuester),Einstandspreis (Niedrigster),Einkaufspreis,Einkaufsanfrage,,,,,,,Feld Artikeltabelle,Einst.-Preis - StÅckliste,Einst.-Preis - Produktion";
                                                                    ENU=" ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,Purchase Quote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing"];
                                                   OptionString=[ ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,Purchase Quote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing] }
    { 2121;   ;Outbnd. ILE Type Filter;Text250    ;OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Outbnd. ILE Type Filter",
                                                                  FIELDNO("Outbnd. ILE Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter (ausgehend);
                                                              ENU=Item Ledger Entry Type Filter (Outbound)] }
    { 2122;   ;Inbnd. ILE Type Filter;Text250     ;OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Inbnd. ILE Type Filter",
                                                                  FIELDNO("Inbnd. ILE Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter (eingehend);
                                                              ENU=Item Ledger Entry Type Filter (Inbound)] }
    { 2200;   ;Item Led. Document Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                ValCondTypeFilterMgt.ValidateFilter(
                                                                  "Item Led. Document Type Filter",
                                                                  FIELDNO("Item Led. Document Type Filter"),
                                                                  TRUE);
                                                              END;

                                                   CaptionML=[DEU=Artikelposten Belegart Filter;
                                                              ENU=Item Ledger Document Type Filter];
                                                   NotBlank=Yes }
    { 3001;   ;Level Calculation   ;Option        ;CaptionML=[DEU=Stufen Berechnung;
                                                              ENU=Level Calculation];
                                                   OptionCaptionML=[DEU=Alle,Schrittweise;
                                                                    ENU=All,Step-by-Step];
                                                   OptionString=All,Step-by-Step }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" = '' THEN
                                                                  EXIT;

                                                                ItemVariant.GET("Item No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code] }
    { 5800;   ;Valid Value         ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DEU=GÅltige Wert;
                                                              ENU=Valid Value] }
    { 5801;   ;Appreciation allowed;Option        ;CaptionML=[DEU=Aufwertung erlaubt;
                                                              ENU=Appreciation allowed];
                                                   OptionCaptionML=[DEU=Nie,0-Wert,Immer;
                                                                    ENU=Never,0-Value,Always];
                                                   OptionString=Never,0-Value,Always }
    { 5802;   ;Inventory Value (Calculated);Decimal;
                                                   OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Unit Cost (Calculated)" :=
                                                                  ROUND("Inventory Value (Calculated)" / Quantity,GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[DEU=Lagerwert (berechnet);
                                                              ENU=Inventory Value (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5803;   ;Inventory Value (Revalued);Decimal ;OnValidate=VAR
                                                                NewUnitCost@1000 : Decimal;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("Inventory Value (Revalued)") THEN
                                                                   TESTFIELD("Valuation Type","Valuation Type"::Specific);

                                                                IF "Entry No. Unit Cost Basis" <> 0 THEN
                                                                  VALIDATE("Valuation Amount","Inventory Value (Revalued)" - "Inventory Value (UnitCosBasis)")
                                                                ELSE
                                                                  VALIDATE("Valuation Amount","Inventory Value (Revalued)" - "Inventory Value (Calculated)");

                                                                GetGLSetup;
                                                                IF ("Unit Cost (Revalued)" <> xRec."Unit Cost (Revalued)") OR
                                                                  ("Inventory Value (Revalued)" <> xRec."Inventory Value (Revalued)")
                                                                THEN BEGIN
                                                                  NewUnitCost :=
                                                                    ROUND("Inventory Value (Revalued)" / Quantity,GLSetup."Unit-Amount Rounding Precision");
                                                                  IF (CurrFieldNo = FIELDNO("Unit Cost (Revalued)")) AND
                                                                    (NewUnitCost <> "Unit Cost (Revalued)")
                                                                  THEN
                                                                    IF NOT CONFIRM(Text011,TRUE,"Unit Cost (Revalued)",NewUnitCost) THEN
                                                                      ERROR(Text012);

                                                                    "Unit Cost (Revalued)" := NewUnitCost;
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Lagerwert (neu bewertet);
                                                              ENU=Inventory Value (Revalued)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5804;   ;Valuation Amount    ;Decimal       ;CaptionML=[DEU=Bewertungsbetrag;
                                                              ENU=Valuation Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5805;No ;Val. Amount Posted to G/L;Decimal  ;CaptionML=[DEU=Gebuchter Bewertungsbetrag;
                                                              ENU=Val. Amount Posted to G/L];
                                                   Description=Dummy for Item Valuation Entry;
                                                   AutoFormatType=1 }
    { 5806;No ;Valuaton Amount (ACY);Decimal      ;CaptionML=[DEU=Bewertungsbetrag (BW);
                                                              ENU=Valuation Amount (ACY)];
                                                   Description=Dummy for Item Valuation Entry;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5807;No ;Val. Amt. Posted to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Gebuchter Bewertungsbetrag (BW);
                                                              ENU=Val. Amt. Posted to G/L (ACY)];
                                                   Description=Dummy for Item Valuation Entry;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5808;   ;Calculation Type    ;Option        ;CaptionML=[DEU=Berechnungsart;
                                                              ENU=Calculation Type];
                                                   OptionCaptionML=[DEU=" ,Einstandspreisgrundlage,Basierend auf Einstandspreisgrundlage";
                                                                    ENU=" ,Unit Cost Basis,Based on Unit Cost Basis"];
                                                   OptionString=[ ,Unit Cost Basis,Based on Unit Cost Basis];
                                                   Editable=No }
    { 5809;   ;Unit Cost (Calculated);Decimal     ;CaptionML=[DEU=Einstandspreis (berechnet);
                                                              ENU=Unit Cost (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5810;   ;Unit Cost (Revalued);Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit Cost (Revalued)") THEN
                                                                   TESTFIELD("Valuation Type","Valuation Type"::Specific);

                                                                GetGLSetup;
                                                                IF ("Unit Cost (Revalued)" <> xRec."Unit Cost (Revalued)") OR ("Entry No." = 0)
                                                                THEN
                                                                  VALIDATE(
                                                                    "Inventory Value (Revalued)",
                                                                    ROUND(
                                                                      "Unit Cost (Revalued)" * Quantity,GLSetup."Amount Rounding Precision"));
                                                              END;

                                                   CaptionML=[DEU=Einstandspreis (neu bewertet);
                                                              ENU=Unit Cost (Revalued)];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 5812;   ;Unit Cost (Unit Cost Basis);Decimal;CaptionML=[DEU=Einstandspreis (Einstandspreisgrundlage);
                                                              ENU=Unit Cost (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5813;   ;Inventory Value (UnitCosBasis);Decimal;
                                                   OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Unit Cost (Unit Cost Basis)" :=
                                                                  ROUND("Inventory Value (UnitCosBasis)" / Quantity,GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[DEU=Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Inventory Value (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 6500;   ;Serial No.          ;Code50        ;CaptionML=[DEU=Seriennr.;
                                                              ENU=Serial No.] }
    { 6501;   ;Lot No.             ;Code50        ;CaptionML=[DEU=Chargennr.;
                                                              ENU=Lot No.] }
    { 6502;   ;Warranty Date       ;Date          ;CaptionML=[DEU=Garantiedatum;
                                                              ENU=Warranty Date] }
    { 6506;   ;Item Expiration Date;Date          ;CaptionML=[DEU=Artikelablaufdatum;
                                                              ENU=Item Expiration Date] }
    { 7000;   ;Posting Date First LE;Date         ;CaptionML=[DEU=Buchungsdatum (1. Buchungsposten);
                                                              ENU=Posting Date (First Ledger Entry)] }
    { 7001;   ;Item Ledger Entry No. First LE;Integer;
                                                   OnLookup=VAR
                                                              ItemLedgEntry@5447560 : Record 32;
                                                              ItemHistDataInbndEntry@5447561 : Record 5447560;
                                                            BEGIN
                                                              ItemLedgEntry.GET("Item Ledger Entry No. First LE");

                                                              // Check if First Posting Date on Item Historical Date Inbound is earlier
                                                              IF ItemHistDataInbndEntry.GET("Item Ledger Entry No. First LE") AND
                                                                 (ItemHistDataInbndEntry."Posting Date" <> 0D) AND
                                                                 (ItemHistDataInbndEntry."Posting Date" < ItemLedgEntry."Posting Date")
                                                              THEN
                                                                PAGE.RUNMODAL(0,ItemHistDataInbndEntry)
                                                              ELSE
                                                                PAGE.RUNMODAL(0,ItemLedgEntry);
                                                            END;

                                                   CaptionML=[DEU=Artikelposten Lfd. Nr. (1. Buchungsposten);
                                                              ENU=Item Ledger Entry No. (First Ledger Entry)] }
    { 7010;   ;Inventory on Posting Date;Decimal  ;OnLookup=VAR
                                                              ItemLedgEntryTotal@5447560 : Record 32;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryTotal.RESET;
                                                              ItemLedgEntryTotal.SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
                                                              ItemLedgEntryTotal.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryTotal.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryTotal.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryTotal.SETRANGE("Variant Code","Variant Code");
                                                              END;

                                                              PAGE.RUNMODAL(0,ItemLedgEntryTotal);
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand zum Buchungsdatum;
                                                              ENU=Inventory on Posting Date];
                                                   BlankZero=Yes }
    { 7011;   ;Qty. of Neg. Ledger Entries;Decimal;OnLookup=VAR
                                                              ItemLedgEntryNeg@5447560 : Record 32;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryNeg.RESET;
                                                              ItemLedgEntryNeg.SETCURRENTKEY("Item No.",Positive,"Entry Type","Variant Code","Location Code","Posting Date");
                                                              ItemLedgEntryNeg.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryNeg.SETFILTER("Posting Date",'%1..%2',
                                                                CALCDATE(Period,"Posting Date"),"Posting Date");
                                                              IF "Outbnd. ILE Type Filter" <> '' THEN
                                                                ItemLedgEntryNeg.SETFILTER("Entry Type","Outbnd. ILE Type Filter");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryNeg.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryNeg.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryNeg.SETRANGE(Positive,FALSE);

                                                              PAGE.RUNMODAL(0,ItemLedgEntryNeg);
                                                            END;

                                                   CaptionML=[DEU=Menge negativer Buchungsposten;
                                                              ENU=Qty. of Neg. Ledger Entries];
                                                   BlankZero=Yes }
    { 7012;   ;Range               ;Decimal       ;CaptionML=[DEU=Reichweite;
                                                              ENU=Range];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7020;   ;Last Posting Date (Neg. LE);Date   ;OnLookup=VAR
                                                              ItemLedgEntryNeg@5447560 : Record 32;
                                                              ItemHistDataOutbndEntry@5447562 : Record 5447559;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryNeg.RESET;
                                                              ItemLedgEntryNeg.SETCURRENTKEY("Item No.","Posting Date");
                                                              ItemLedgEntryNeg.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryNeg.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryNeg.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                ItemLedgEntryNeg.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryNeg.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryNeg.SETFILTER("Entry Type",'<>%1',ItemLedgEntryNeg."Entry Type"::Transfer);
                                                              ItemLedgEntryNeg.SETRANGE(Positive,FALSE);
                                                              IF ItemLedgEntryNeg.FINDLAST THEN
                                                                PAGE.RUNMODAL(0,ItemLedgEntryNeg)
                                                              ELSE BEGIN
                                                                ItemHistDataOutbndEntry.RESET;
                                                                ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Posting Date");
                                                                ItemHistDataOutbndEntry.SETRANGE("Item No.","Item No.");
                                                                ItemHistDataOutbndEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                                IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                                THEN BEGIN
                                                                  ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Location Code","Location Code");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Variant Code","Variant Code");
                                                                END;
                                                                ItemHistDataOutbndEntry.SETFILTER("Entry Type",'<>%1',ItemHistDataOutbndEntry."Entry Type"::Transfer);
                                                                IF ItemHistDataOutbndEntry.FINDLAST THEN;
                                                                IF PAGE.RUNMODAL(0,ItemHistDataOutbndEntry) = ACTION::LookupOK THEN;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Letztes Buchungsdatum (Neg. Buchungsposten);
                                                              ENU=Last Posting Date (neg. Ledger Entries)];
                                                   NotBlank=Yes }
    { 7021;   ;Last Posting Date (Transfer);Date  ;OnLookup=VAR
                                                              ItemLedgEntryTrans@5447560 : Record 32;
                                                              ItemHistDataOutbndEntry@5447562 : Record 5447559;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryTrans.RESET;
                                                              ItemLedgEntryTrans.SETCURRENTKEY("Item No.","Posting Date");
                                                              ItemLedgEntryTrans.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryTrans.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryTrans.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                ItemLedgEntryTrans.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryTrans.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryTrans.SETRANGE("Entry Type",ItemLedgEntryTrans."Entry Type"::Transfer);
                                                              IF "Item Led. Document Type Filter" <> '' THEN
                                                                ItemLedgEntryTrans.SETFILTER("Document Type","Item Led. Document Type Filter");
                                                              ItemLedgEntryTrans.SETRANGE(Positive,FALSE);
                                                              IF ItemLedgEntryTrans.FINDLAST THEN
                                                                PAGE.RUNMODAL(0,ItemLedgEntryTrans)
                                                              ELSE BEGIN
                                                                ItemHistDataOutbndEntry.RESET;
                                                                ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Posting Date");
                                                                ItemHistDataOutbndEntry.SETRANGE("Item No.","Item No.");
                                                                ItemHistDataOutbndEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                                IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                                THEN BEGIN
                                                                  ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Location Code","Location Code");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Variant Code","Variant Code");
                                                                END;
                                                                ItemHistDataOutbndEntry.SETRANGE("Entry Type",ItemHistDataOutbndEntry."Entry Type"::Transfer);
                                                                IF "Item Led. Document Type Filter" <> '' THEN
                                                                  ItemHistDataOutbndEntry.SETFILTER("Document Type","Item Led. Document Type Filter");
                                                                IF ItemHistDataOutbndEntry.FINDLAST THEN;
                                                                IF PAGE.RUNMODAL(0,ItemHistDataOutbndEntry) = ACTION::LookupOK THEN;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Letztes Buchungsdatum (Umlagerung);
                                                              ENU=Last Posting Date (Transfer)];
                                                   NotBlank=Yes }
    { 7022;   ;Lowest Number Of Entries;Integer   ;CaptionML=[DEU=Kleinste Anzahl Posten;
                                                              ENU=Lowest Number of Entries];
                                                   BlankZero=Yes }
    { 7030;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[DEU=WÑhrungscode;
                                                              ENU=Currency Code];
                                                   Editable=No }
    { 7031;   ;Currency Factor     ;Decimal       ;CaptionML=[DEU=WÑhrungsfaktor;
                                                              ENU=Currency Factor];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7032;   ;Purchase Amount     ;Decimal       ;CaptionML=[DEU=Einkaufsbetrag;
                                                              ENU=Purchase Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 7033;   ;Currency Factor Posting Date;Decimal;
                                                   CaptionML=[DEU=WÑhrungsfaktor zum Buchungsdatum;
                                                              ENU=Currency Factor on Posting Date];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7034;   ;Purch. Amt. (LCY) Posting Date;Decimal;
                                                   CaptionML=[DEU=Einkaufsbetrag (MW) zum Buchungsdatum;
                                                              ENU=Purchase Amount (LCY) on Posting Date];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 7035;   ;P. D. Unit Cost (LCY) P. Date;Decimal;
                                                   CaptionML=[DEU=EK-Preis (MW) zum Buchungsdatum;
                                                              ENU=Purchase Direct Unit Cost (LCY) on Posting Date];
                                                   BlankZero=Yes }
    { 7040;   ;Lowest Value - Cost ;Decimal       ;OnLookup=VAR
                                                              Item@5447560 : Record 27;
                                                            BEGIN
                                                              CASE "Lowest Value Type" OF
                                                                "Lowest Value Type"::"Last Direct Cost":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLastCostPostingDate(Rec,TRUE);
                                                                  END;
                                                                "Lowest Value Type"::"Last Direct Cost (Item)":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item,Item."Last Direct Cost");
                                                                  END;
                                                                "Lowest Value Type"::"Average Cost":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowAvgCostDateFilter(Rec);
                                                                  END;
                                                                "Lowest Value Type"::"Last Sales Price":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLastSalesPricePostingDate(Rec);
                                                                  END;
                                                                "Lowest Value Type"::"Lowest Direct Cost":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLowestDirectCost(Rec);
                                                                  END;
                                                                "Lowest Value Type"::"Last Unit Cost":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLastCostPostingDate(Rec,FALSE);
                                                                  END;
                                                                "Lowest Value Type"::"Lowest Unit Cost":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLowestDirectCost(Rec);
                                                                  END;
                                                                "Lowest Value Type"::"Purchase Cost":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item);
                                                                  END;
                                                                "Lowest Value Type"::"Purchase Quote":
                                                                  BEGIN
                                                                    ValCondCalcMgt.ShowLastPurchaseQuote(Rec);
                                                                  END;
                                                                "Lowest Value Type"::"Field Item Table":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item,"Item Field ID");
                                                                  END;
                                                                "Lowest Value Type"::"Standard Cost - Assembly List",
                                                                "Lowest Value Type"::"Standard Cost - Manufacturing":
                                                                  BEGIN
                                                                    // Nothing to because the are calculated
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Niederstwert - Preis;
                                                              ENU=Last Direct Cost on Posting Date];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 7045;   ;Profit %            ;Decimal       ;CaptionML=[DEU=DB %;
                                                              ENU=Profit %];
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100 }
    { 7050;   ;Entry No. Unit Cost Basis;Integer  ;TableRelation="IVA Item Valuation Plan Entry" WHERE (Item Ledger Entry No.=FIELD(Item Ledger Entry No.),
                                                                                                        Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                        Item No.=FIELD(Item No.),
                                                                                                        Posting Date=FIELD(Posting Date),
                                                                                                        Calculation Type=CONST(Unit Cost Basis));
                                                   OnValidate=VAR
                                                                ValCondHeader@5447560 : Record 5447562;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Lfd. Nr. Einstandspreisgrundlage;
                                                              ENU=Entry No. Unit Cost Basis];
                                                   BlankZero=Yes }
    { 7060;   ;Item Field ID       ;Integer       ;OnValidate=BEGIN
                                                                TESTFIELD("Lowest Value Type","Lowest Value Type"::"Field Item Table");
                                                              END;

                                                   CaptionML=[DEU=Artikel Feld ID;
                                                              ENU=Item Field ID];
                                                   BlankZero=Yes }
    { 7061;   ;Item Field Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=CONST(27),
                                                                                             No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldname;
                                                              ENU=Item Field Name];
                                                   Editable=No }
    { 7062;   ;Item Field Caption  ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=CONST(27),
                                                                                                   No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldbezeichnung;
                                                              ENU=Item Field Caption];
                                                   Editable=No }
    { 20000;  ;Comments            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("IVA Item Val. Comment Line" WHERE (Table ID=CONST(5447605),
                                                                                                         Item Ledger Entry No.=FIELD(Item Ledger Entry No.),
                                                                                                         Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[DEU=Bemerkungen;
                                                              ENU=Comments];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.,Posting Date,Valid Value,Journal Batch Name,Calculation Type,Location Code,Valuation Cond. Code,Gen. Prod. Posting Group,Inventory Posting Group,Item Tracking Code,Item Category Code,Global Dimension 1 Code,Global Dimension 2 Code;
                                                   SumIndexFields=Inventory Value (Calculated),Inventory Value (Revalued),Valuation Amount,Inventory Value (UnitCosBasis) }
    {    ;Item Ledger Entry No.,Journal Batch Name,Item No.,Posting Date,Calculation Type }
    {    ;Item Ledger Entry No.,Journal Batch Name,Item No.,Posting Date,Calculation Type,Valid Value;
                                                   SumIndexFields=Valuation Amount,Inventory Value (Calculated),Unit Cost (Calculated),Inventory Value (Revalued),Unit Cost (Revalued),Inventory Value (UnitCosBasis),Unit Cost (Unit Cost Basis);
                                                   MaintainSQLIndex=No }
    {    ;Item Ledger Entry No.,Journal Batch Name,Item No.,Posting Date,Calculation Type,Valuation Type;
                                                   SumIndexFields=Valuation Amount,Inventory Value (Calculated),Unit Cost (Calculated),Inventory Value (Revalued),Unit Cost (Revalued),Inventory Value (UnitCosBasis),Unit Cost (Unit Cost Basis);
                                                   MaintainSQLIndex=No }
    {    ;Item Ledger Entry No.,Journal Batch Name,Item No.,Posting Date,Calculation Type,Inventory Value (Revalued);
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Der Dimensionswert %1 wurde nicht fÅr die Dimension %2 eingerichtet.;ENU=The dimension value %1 has not been set up for dimension %2.';
      GLSetup@1006 : Record 98;
      Item@5447567 : Record 27;
      ItemVariant@5447563 : Record 5401;
      ItemValSetup@5447560 : Record 5447599;
      ValCondCalcMgt@5447564 : Codeunit 5447562;
      ValCondTypeFilterMgt@5447565 : Codeunit 5447563;
      GLSetupRetrieved@1007 : Boolean;
      Text006@5447650 : TextConst 'DEU=Die markierte Zeile ist schon eine gÅltige Einzelwertzeile.;ENU=The selected line is already specific.';
      Text007@5447651 : TextConst 'DEU=Es existieren bereits Zeilen fÅr Einzelwert. Wollen Sie diese durch die aktuelle Zeile ersetzten?;ENU=There are already single value lines. Do you want to replace them?';
      Text011@5447562 : TextConst 'DEU=Der Einstandspreis kann nicht auf %1 geÑndert werden. Mîchten Sie ihn stattdessen auf %2 Ñndern?;ENU=The unit cost cannot be changed to %1. Do you want to change it to %2 instead?';
      Text012@5447561 : TextConst 'DEU=Die Verarbeitung wurde unterbrochen, um die Warnung zu berÅcksichtigen.;ENU=The update has been interrupted to respect the warning.';
      ItemValSetupRead@5447566 : Boolean;

    LOCAL PROCEDURE ValidateDimValue@5(DimCode@1000 : Code[20];VAR DimValueCode@1001 : Code[20]);
    VAR
      DimValue@1002 : Record 349;
    BEGIN
      DimValue."Dimension Code" := DimCode;
      DimValue.Code := DimValueCode;
      DimValue.FIND('=><');
      IF DimValueCode <> COPYSTR(DimValue.Code,1,STRLEN(DimValueCode)) THEN
        ERROR(Text000,DimValueCode,DimCode);
      DimValueCode := DimValue.Code;
    END;

    LOCAL PROCEDURE GetGLSetup@2();
    BEGIN
      IF NOT GLSetupRetrieved THEN BEGIN
        GLSetup.GET;
        GLSetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetNextEntryNo@4() : Integer;
    VAR
      ItemValPlanEntry@5447650 : Record 5447605;
    BEGIN
      ItemValPlanEntry.SETCURRENTKEY("Entry No.");
      IF ItemValPlanEntry.FINDLAST THEN
        EXIT(ItemValPlanEntry."Entry No." + 1);

      EXIT(1);
    END;

    [External]
    PROCEDURE GetCaption@11() : Text[1024];
    VAR
      Item@1005 : Record 27;
      Dimension@1007 : Record 348;
      DimValue@1006 : Record 349;
      SourceTableCaption@1001 : Text[250];
      SourceFilter@1002 : Text;
      Description@1003 : Text[250];
    BEGIN
      CASE TRUE OF
        GETFILTER("Item No.") <> '':
          BEGIN
            SourceTableCaption := Item.TABLECAPTION;
            SourceFilter := GETFILTER("Item No.");
            IF MAXSTRLEN(Item."No.") >= STRLEN(SourceFilter) THEN
              IF Item.GET(SourceFilter) THEN
                Description := Item.Description;
          END;
        GETFILTER("Global Dimension 1 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 1 Code";
            SourceFilter := GETFILTER("Global Dimension 1 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 1 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Global Dimension 2 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 2 Code";
            SourceFilter := GETFILTER("Global Dimension 2 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 2 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
      END;

      EXIT(
        DELCHR(
          STRSUBSTNO('%1 %2 %3 %4',SourceTableCaption,SourceFilter,Description,"Journal Batch Name"),
          '>'));
    END;

    LOCAL PROCEDURE GetItem@5447560();
    BEGIN
      IF Item."No." <> "Item No." THEN
        Item.GET("Item No.");
    END;

    LOCAL PROCEDURE GetItemValSetup@5447564();
    BEGIN
      IF NOT ItemValSetupRead THEN
        ItemValSetup.GET;
      ItemValSetupRead := TRUE;
    END;

    PROCEDURE TransferFromItemValJnlLine@5447561(ItemValJnlLine@5447560 : Record 5447603;InvtValCalc@5447561 : Decimal;FirstSpecific@5447562 : Boolean);
    VAR
      ItemValPlanEntry2@5447563 : Record 5447605;
    BEGIN
      VALIDATE("Posting Date",ItemValJnlLine."Posting Date");
      VALIDATE("Item No.",ItemValJnlLine."Item No.");
      VALIDATE("Variant Code",ItemValJnlLine."Variant Code");
      "Journal Batch Name" := ItemValJnlLine."Journal Batch Name";
      "Location Code" := ItemValJnlLine."Location Code";
      "Gen. Bus. Posting Group" := ItemValJnlLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := ItemValJnlLine."Gen. Prod. Posting Group";
      "Inventory Posting Group" :=  ItemValJnlLine."Inventory Posting Group";
      "Item Tracking Code" :=  ItemValJnlLine."Item Tracking Code";
      "Item Category Code" := ItemValJnlLine."Item Category Code";
      "Item Ledger Entry No." :=  ItemValJnlLine."Applies-to Entry";
      "Serial No." :=  ItemValJnlLine."Serial No.";
      "Lot No." :=  ItemValJnlLine."Lot No.";
      "Item Expiration Date" :=  ItemValJnlLine."Item Expiration Date";
      "Unit of Measure Code" := ItemValJnlLine."Unit of Measure Code";
      VALIDATE("Global Dimension 1 Code", ItemValJnlLine."Shortcut Dimension 1 Code");
      VALIDATE("Global Dimension 2 Code", ItemValJnlLine."Shortcut Dimension 2 Code");
      VALIDATE(Quantity,ItemValJnlLine.Quantity);

      IF ("Calculation Type" = "Calculation Type"::"Based on Unit Cost Basis") AND FirstSpecific THEN BEGIN
        ItemValPlanEntry2 := Rec;
        ValCondCalcMgt.GetUnitCostBasis(Rec);
        VALIDATE("Unit Cost (Revalued)",ItemValPlanEntry2."Unit Cost (Revalued)");
      END ELSE
        VALIDATE("Inventory Value (Calculated)",InvtValCalc);

      "Posting Date First LE" := ItemValJnlLine."Posting Date First LE";
      "Item Ledger Entry No. First LE" := ItemValJnlLine."Item Ledger Entry No. First LE";
      "Calculation Type" := ItemValJnlLine."Calculation Type";
    END;

    LOCAL PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      GetGLSetup;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE SetLineAsSpecificValidValue@5447650();
    VAR
      ItemValPlanEntry2@5447652 : Record 5447605;
    BEGIN
      IF "Valuation Type" = "Valuation Type"::Specific THEN
        ERROR(Text006);

      // Search if already specific lines exists
      ItemValPlanEntry2.COPYFILTERS(Rec);
      ItemValPlanEntry2.SETRANGE("Valuation Type","Valuation Type"::Specific);
      IF NOT ItemValPlanEntry2.ISEMPTY THEN BEGIN
        IF NOT CONFIRM(Text007,FALSE) THEN
          EXIT;
        ItemValPlanEntry2.DELETEALL;
      END;

      // Create new lines as a copy
      ItemValPlanEntry2.COPY(Rec);
      ItemValPlanEntry2.MODIFYALL("Valid Value",FALSE);

      ItemValPlanEntry2."Entry No." := GetNextEntryNo;
      ItemValPlanEntry2."Valuation Type" := ItemValPlanEntry2."Valuation Type"::Specific;
      ItemValPlanEntry2.VALIDATE("Valuation Cond. Code",'');
      ItemValPlanEntry2."Appreciation allowed" := 0;
      ItemValPlanEntry2."Valuation Factor" := 0;
      ItemValPlanEntry2.Operator := 0;
      EVALUATE(ItemValPlanEntry2.Period,'');
      ItemValPlanEntry2."Starting Value" := 0;
      ItemValPlanEntry2."Ending Value" := 0;
      EVALUATE(ItemValPlanEntry2."Period Incoming Entry",'');
      ItemValPlanEntry2."Scrap Value" := 0;
      ItemValPlanEntry2."Lowest Value Type" := 0;
      ItemValPlanEntry2."Outbnd. ILE Type Filter" := '';
      ItemValPlanEntry2."Inbnd. ILE Type Filter" := '';
      ItemValPlanEntry2."Item Led. Document Type Filter" := '';
      ItemValPlanEntry2."Qty. of Neg. Ledger Entries" := 0;
      ItemValPlanEntry2.Range := 0;
      ItemValPlanEntry2."Last Posting Date (Neg. LE)" := 0D;
      ItemValPlanEntry2."Last Posting Date (Transfer)" := 0D;
      ItemValPlanEntry2."Currency Code" := '';
      ItemValPlanEntry2."Currency Factor" := 0;
      ItemValPlanEntry2."Purchase Amount" := 0;
      ItemValPlanEntry2."Currency Factor Posting Date" := 0;
      ItemValPlanEntry2."Purch. Amt. (LCY) Posting Date" := 0;
      ItemValPlanEntry2."P. D. Unit Cost (LCY) P. Date" := 0;
      ItemValPlanEntry2."Lowest Value - Cost" := 0;
      ItemValPlanEntry2."Profit %" := 0;
      ItemValPlanEntry2."Item Field ID" := 0;
      ItemValPlanEntry2."Item Field Name" := '';
      ItemValPlanEntry2."Valid Value" := TRUE;
      ItemValPlanEntry2.INSERT;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447606 IVA Item Valuation Entry
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikelbewertungsposten;
               ENU=Item Valuation Entry];
    LookupPageID=Page5447606;
    DrillDownPageID=Page5447606;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   ClosingDates=Yes }
    { 5   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 7   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 8   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 9   ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID];
                                                   Editable=No }
    { 14  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 15  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 16  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 50  ;   ;Valuation Cond. Code;Code20        ;TableRelation="IVA Valuation Condition";
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group];
                                                   Editable=No }
    { 60  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 61  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 62  ;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode;
                                                              ENU=Item Tracking Code] }
    { 64  ;   ;Item Category Code  ;Code20        ;TableRelation="Item Category";
                                                   CaptionML=[DEU=Artikelkategoriencode;
                                                              ENU=Item Category Code] }
    { 73  ;   ;Reversed            ;Boolean       ;CaptionML=[DEU=Storniert;
                                                              ENU=Reversed] }
    { 74  ;   ;Reversed by Entry No.;Integer      ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Storniert durch Lfd. Nr.;
                                                              ENU=Reversed by Entry No.];
                                                   BlankZero=Yes }
    { 75  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Stornierter Posten Lfd. Nr.;
                                                              ENU=Reversed Entry No.];
                                                   BlankZero=Yes }
    { 100 ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 101 ;   ;Journal Batch Name  ;Code10        ;TableRelation="IVA Item Val. Journal Batch".Name;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 2001;   ;Valuation Type      ;Option        ;CaptionML=[DEU=Bewertungsart;
                                                              ENU=Valuation Type];
                                                   OptionCaptionML=[DEU=Einzelwert,Reichweite,Abgang,Ablaufdatum,Alterstruktur,Lagerart,WÑhrung,Niederstwert,Reichweite-Perioden,Abgang-Perioden,Unbewertet;
                                                                    ENU=Specific,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods,Unevaluated];
                                                   OptionString=Specific,Range,Leaving,Expiration Date,Age Structure,Location Type,Currency,Lowest Value,Range-Periods,Leaving-Periods,Unevaluated;
                                                   Editable=No }
    { 2020;   ;Valuation Factor    ;Decimal       ;CaptionML=[DEU=Bewertungsfaktor;
                                                              ENU=Valuation Factor];
                                                   DecimalPlaces=0:2 }
    { 2099;   ;Operator            ;Option        ;CaptionML=[DEU=Operator;
                                                              ENU=Operator];
                                                   OptionCaptionML=[DEU=" ,<,>,<=,>=";
                                                                    ENU=" ,<,>,<=,>="];
                                                   OptionString=[ ,<,>,<=,>=] }
    { 2100;   ;Period              ;DateFormula   ;CaptionML=[DEU=Periode;
                                                              ENU=Period] }
    { 2101;   ;Number of Periods   ;Integer       ;CaptionML=[DEU=Anzahl Perioden;
                                                              ENU=Number of Periods];
                                                   BlankZero=Yes }
    { 2105;   ;Starting Value      ;Decimal       ;CaptionML=[DEU=Startwert;
                                                              ENU=Starting Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 2106;   ;Ending Value        ;Decimal       ;CaptionML=[DEU=Endwert;
                                                              ENU=Ending Value];
                                                   DecimalPlaces=0:1;
                                                   BlankZero=Yes }
    { 2110;   ;Period Incoming Entry;DateFormula  ;CaptionML=[DEU=Periode Eingehende Posten;
                                                              ENU=Period Incoming Entry] }
    { 2115;   ;Scrap Value         ;Decimal       ;CaptionML=[DEU=Schrottwert;
                                                              ENU=Scrap Value];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 2120;   ;Lowest Value Type   ;Option        ;CaptionML=[DEU=Niederstwert - Art;
                                                              ENU=Lowest Value Type];
                                                   OptionCaptionML=[DEU=" ,EK-Preis (Neuester),EK-Preis (Neuester) Artikel,Durchschnittliche Einstandspreis,Letzter Verkaufspreis,EK-Preis (Niedrigste),Einstandspreis (Neuester),Einstandspreis (Niedrigster),Einkaufspreis,Einkaufsanfrage,,,,,,,Feld Artikeltabelle,Einst.-Preis - StÅckliste,Einst.-Preis - Produktion";
                                                                    ENU=" ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,Purchase Quote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing"];
                                                   OptionString=[ ,Last Direct Cost,Last Direct Cost (Item),Average Cost,Last Sales Price,Lowest Direct Cost,Last Unit Cost,Lowest Unit Cost,Purchase Cost,Purchase Quote,,,,,,,Field Item Table,Standard Cost - Assembly List,Standard Cost - Manufacturing] }
    { 2121;   ;Outbnd. ILE Type Filter;Text250    ;CaptionML=[DEU=Artikelpostenartenfilter (ausgehend);
                                                              ENU=Item Ledger Entry Type Filter (Outbound)] }
    { 2122;   ;Inbnd. ILE Type Filter;Text250     ;CaptionML=[DEU=Artikelpostenartenfilter (eingehend);
                                                              ENU=Item Ledger Entry Type Filter (Inbound)] }
    { 2200;   ;Item Led. Document Type Filter;Text250;
                                                   CaptionML=[DEU=Artikelposten Belegart Filter;
                                                              ENU=Item Ledger Document Type Filter];
                                                   NotBlank=Yes }
    { 3001;   ;Level Calculation   ;Option        ;CaptionML=[DEU=Stufen Berechnung;
                                                              ENU=Level Calculation];
                                                   OptionCaptionML=[DEU=Alle,Schrittweise;
                                                                    ENU=All,Step-by-Step];
                                                   OptionString=All,Step-by-Step }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code] }
    { 5800;   ;Valid Value         ;Boolean       ;CaptionML=[DEU=GÅltige Wert;
                                                              ENU=Valid Value] }
    { 5801;   ;Appreciation allowed;Option        ;CaptionML=[DEU=Aufwertung erlaubt;
                                                              ENU=Appreciation allowed];
                                                   OptionCaptionML=[DEU=Nie,0-Wert,Immer;
                                                                    ENU=Never,0-Value,Always];
                                                   OptionString=Never,0-Value,Always }
    { 5802;   ;Inventory Value (Calculated);Decimal;
                                                   CaptionML=[DEU=Lagerwert (berechnet);
                                                              ENU=Inventory Value (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5803;   ;Inventory Value (Revalued);Decimal ;CaptionML=[DEU=Lagerwert (neu bewertet);
                                                              ENU=Inventory Value (Revalued)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5804;   ;Valuation Amount    ;Decimal       ;CaptionML=[DEU=Bewertungsbetrag;
                                                              ENU=Valuation Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5805;   ;Val. Amount Posted to G/L;Decimal  ;CaptionML=[DEU=Gebuchter Bewertungsbetrag;
                                                              ENU=Val. Amount Posted to G/L];
                                                   AutoFormatType=1 }
    { 5806;   ;Valuation Amount (ACY);Decimal     ;CaptionML=[DEU=Bewertungsbetrag (BW);
                                                              ENU=Valuation Amount (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5807;   ;Val. Amt. Posted to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Gebuchter Bewertungsbetrag (BW);
                                                              ENU=Val. Amt. Posted to G/L (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5808;   ;Calculation Type    ;Option        ;CaptionML=[DEU=Berechnungsart;
                                                              ENU=Calculation Type];
                                                   OptionCaptionML=[DEU=" ,Einstandspreisgrundlage,Basierend auf Einstandspreisgrundlage";
                                                                    ENU=" ,Unit Cost Basis,Based on Unit Cost Basis"];
                                                   OptionString=[ ,Unit Cost Basis,Based on Unit Cost Basis];
                                                   Editable=No }
    { 5809;   ;Unit Cost (Calculated);Decimal     ;CaptionML=[DEU=Einstandspreis (berechnet);
                                                              ENU=Unit Cost (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5810;   ;Unit Cost (Revalued);Decimal       ;CaptionML=[DEU=Einstandspreis (neu bewertet);
                                                              ENU=Unit Cost (Revalued)];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 5812;   ;Unit Cost (Unit Cost Basis);Decimal;CaptionML=[DEU=Einstandspreis (Einstandspreisgrundlage);
                                                              ENU=Unit Cost (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5813;   ;Inventory Value (UnitCosBasis);Decimal;
                                                   CaptionML=[DEU=Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Inventory Value (Unit Cost Basis)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5904;   ;Bal. Posting Date   ;Date          ;CaptionML=[DEU=Gegen Buchungsdatum;
                                                              ENU=Balance Posting Date];
                                                   ClosingDates=Yes }
    { 5905;   ;Bal. Val. Amount Posted to G/L;Decimal;
                                                   CaptionML=[DEU=Gebuchter Gegen Bewertungsbetrag;
                                                              ENU=Balance Val. Amount Posted to G/L];
                                                   AutoFormatType=1 }
    { 5907;   ;Bal. Val. Amt. P. to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Gebuchter Gegen Bewertungsbetrag (BW);
                                                              ENU=Balance Val. Amt. Posted to G/L (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 6500;   ;Serial No.          ;Code50        ;CaptionML=[DEU=Seriennr.;
                                                              ENU=Serial No.] }
    { 6501;   ;Lot No.             ;Code50        ;CaptionML=[DEU=Chargennr.;
                                                              ENU=Lot No.] }
    { 6502;   ;Warranty Date       ;Date          ;CaptionML=[DEU=Garantiedatum;
                                                              ENU=Warranty Date] }
    { 6506;   ;Item Expiration Date;Date          ;CaptionML=[DEU=Artikelablaufdatum;
                                                              ENU=Item Expiration Date] }
    { 7000;   ;Posting Date First LE;Date         ;CaptionML=[DEU=Buchungsdatum (1. Buchungsposten);
                                                              ENU=Posting Date (First Ledger Entry)] }
    { 7001;   ;Item Ledger Entry No. First LE;Integer;
                                                   OnLookup=VAR
                                                              ItemLedgEntry@5447560 : Record 32;
                                                              ItemHistDataInbndEntry@5447561 : Record 5447560;
                                                            BEGIN
                                                              ItemLedgEntry.GET("Item Ledger Entry No. First LE");

                                                              // Check if First Posting Date on Item Historical Date Inbound is earlier
                                                              IF ItemHistDataInbndEntry.GET("Item Ledger Entry No. First LE") AND
                                                                 (ItemHistDataInbndEntry."Posting Date" <> 0D) AND
                                                                 (ItemHistDataInbndEntry."Posting Date" < ItemLedgEntry."Posting Date")
                                                              THEN
                                                                PAGE.RUNMODAL(0,ItemHistDataInbndEntry)
                                                              ELSE
                                                                PAGE.RUNMODAL(0,ItemLedgEntry);
                                                            END;

                                                   CaptionML=[DEU=Artikelposten Lfd. Nr. (1. Buchungsposten);
                                                              ENU=Item Ledger Entry No. (First Ledger Entry)] }
    { 7010;   ;Inventory on Posting Date;Decimal  ;OnLookup=VAR
                                                              ItemLedgEntryTotal@5447560 : Record 32;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryTotal.RESET;
                                                              ItemLedgEntryTotal.SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
                                                              ItemLedgEntryTotal.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryTotal.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryTotal.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryTotal.SETRANGE("Variant Code","Variant Code");
                                                              END;

                                                              PAGE.RUNMODAL(0,ItemLedgEntryTotal);
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand zum Buchungsdatum;
                                                              ENU=Inventory on Posting Date];
                                                   BlankZero=Yes }
    { 7011;   ;Qty. of Neg. Ledger Entries;Decimal;OnLookup=VAR
                                                              ItemLedgEntryNeg@5447560 : Record 32;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryNeg.RESET;
                                                              ItemLedgEntryNeg.SETCURRENTKEY("Item No.",Positive,"Entry Type","Variant Code","Location Code","Posting Date");
                                                              ItemLedgEntryNeg.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryNeg.SETFILTER("Posting Date",'%1..%2',
                                                                CALCDATE(Period,"Posting Date"),"Posting Date");
                                                              IF "Outbnd. ILE Type Filter" <> '' THEN
                                                                ItemLedgEntryNeg.SETFILTER("Entry Type","Outbnd. ILE Type Filter");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryNeg.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryNeg.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryNeg.SETRANGE(Positive,FALSE);

                                                              PAGE.RUNMODAL(0,ItemLedgEntryNeg);
                                                            END;

                                                   CaptionML=[DEU=Menge negativer Buchungsposten;
                                                              ENU=Qty. of Neg. Ledger Entries];
                                                   BlankZero=Yes }
    { 7012;   ;Range               ;Decimal       ;CaptionML=[DEU=Reichweite;
                                                              ENU=Range];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7020;   ;Last Posting Date (Neg. LE);Date   ;OnLookup=VAR
                                                              ItemLedgEntryNeg@5447560 : Record 32;
                                                              ItemHistDataOutbndEntry@5447562 : Record 5447559;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryNeg.RESET;
                                                              ItemLedgEntryNeg.SETCURRENTKEY("Item No.","Posting Date");
                                                              ItemLedgEntryNeg.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryNeg.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryNeg.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                ItemLedgEntryNeg.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryNeg.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryNeg.SETFILTER("Entry Type",'<>%1',ItemLedgEntryNeg."Entry Type"::Transfer);
                                                              ItemLedgEntryNeg.SETRANGE(Positive,FALSE);
                                                              IF ItemLedgEntryNeg.FINDLAST THEN
                                                                PAGE.RUNMODAL(0,ItemLedgEntryNeg)
                                                              ELSE BEGIN
                                                                ItemHistDataOutbndEntry.RESET;
                                                                ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Posting Date");
                                                                ItemHistDataOutbndEntry.SETRANGE("Item No.","Item No.");
                                                                ItemHistDataOutbndEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                                IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                                THEN BEGIN
                                                                  ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Location Code","Location Code");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Variant Code","Variant Code");
                                                                END;
                                                                ItemHistDataOutbndEntry.SETFILTER("Entry Type",'<>%1',ItemHistDataOutbndEntry."Entry Type"::Transfer);
                                                                IF ItemHistDataOutbndEntry.FINDLAST THEN;
                                                                IF PAGE.RUNMODAL(0,ItemHistDataOutbndEntry) = ACTION::LookupOK THEN;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Letztes Buchungsdatum (Neg. Buchungsposten);
                                                              ENU=Last Posting Date (neg. Ledger Entries)];
                                                   NotBlank=Yes }
    { 7021;   ;Last Posting Date (Transfer);Date  ;OnLookup=VAR
                                                              ItemLedgEntryTrans@5447560 : Record 32;
                                                              ItemHistDataOutbndEntry@5447562 : Record 5447559;
                                                              InventorySetup@5447561 : Record 313;
                                                            BEGIN
                                                              InventorySetup.GET;

                                                              ItemLedgEntryTrans.RESET;
                                                              ItemLedgEntryTrans.SETCURRENTKEY("Item No.","Posting Date");
                                                              ItemLedgEntryTrans.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntryTrans.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                              IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                              THEN BEGIN
                                                                ItemLedgEntryTrans.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                ItemLedgEntryTrans.SETRANGE("Location Code","Location Code");
                                                                ItemLedgEntryTrans.SETRANGE("Variant Code","Variant Code");
                                                              END;
                                                              ItemLedgEntryTrans.SETRANGE("Entry Type",ItemLedgEntryTrans."Entry Type"::Transfer);
                                                              IF "Item Led. Document Type Filter" <> '' THEN
                                                                ItemLedgEntryTrans.SETFILTER("Document Type","Item Led. Document Type Filter");
                                                              ItemLedgEntryTrans.SETRANGE(Positive,FALSE);
                                                              IF ItemLedgEntryTrans.FINDLAST THEN
                                                                PAGE.RUNMODAL(0,ItemLedgEntryTrans)
                                                              ELSE BEGIN
                                                                ItemHistDataOutbndEntry.RESET;
                                                                ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Posting Date");
                                                                ItemHistDataOutbndEntry.SETRANGE("Item No.","Item No.");
                                                                ItemHistDataOutbndEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                                IF InventorySetup."Average Cost Calc. Type" = InventorySetup."Average Cost Calc. Type"::"Item & Location & Variant"
                                                                THEN BEGIN
                                                                  ItemHistDataOutbndEntry.SETCURRENTKEY("Item No.","Location Code","Variant Code","Posting Date");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Location Code","Location Code");
                                                                  ItemHistDataOutbndEntry.SETRANGE("Variant Code","Variant Code");
                                                                END;
                                                                ItemHistDataOutbndEntry.SETRANGE("Entry Type",ItemHistDataOutbndEntry."Entry Type"::Transfer);
                                                                IF "Item Led. Document Type Filter" <> '' THEN
                                                                  ItemHistDataOutbndEntry.SETFILTER("Document Type","Item Led. Document Type Filter");
                                                                IF ItemHistDataOutbndEntry.FINDLAST THEN;
                                                                IF PAGE.RUNMODAL(0,ItemHistDataOutbndEntry) = ACTION::LookupOK THEN;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Letztes Buchungsdatum (Umlagerung);
                                                              ENU=Last Posting Date (Transfer)];
                                                   NotBlank=Yes }
    { 7022;   ;Lowest Number Of Entries;Integer   ;CaptionML=[DEU=Kleinste Anzahl Posten;
                                                              ENU=Lowest Number of Entries];
                                                   BlankZero=Yes }
    { 7030;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[DEU=WÑhrungscode;
                                                              ENU=Currency Code];
                                                   Editable=No }
    { 7031;   ;Currency Factor     ;Decimal       ;CaptionML=[DEU=WÑhrungsfaktor;
                                                              ENU=Currency Factor];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7032;   ;Purchase Amount     ;Decimal       ;CaptionML=[DEU=Einkaufsbetrag;
                                                              ENU=Purchase Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 7033;   ;Currency Factor Posting Date;Decimal;
                                                   CaptionML=[DEU=WÑhrungsfaktor zum Buchungsdatum;
                                                              ENU=Currency Factor on Posting Date];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7034;   ;Purch. Amt. (LCY) Posting Date;Decimal;
                                                   CaptionML=[DEU=Einkaufsbetrag (MW) zum Buchungsdatum;
                                                              ENU=Purchase Amount (LCY) on Posting Date];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 7035;   ;P. D. Unit Cost (LCY) P. Date;Decimal;
                                                   CaptionML=[DEU=EK-Preis (MW) zum Buchungsdatum;
                                                              ENU=Purchase Direct Unit Cost (LCY) on Posting Date];
                                                   BlankZero=Yes }
    { 7040;   ;Lowest Value - Cost ;Decimal       ;OnLookup=VAR
                                                              Item@5447560 : Record 27;
                                                              ItemValPlanEntry@5447561 : Record 5447605;
                                                            BEGIN
                                                              CASE "Lowest Value Type" OF
                                                                "Lowest Value Type"::"Last Direct Cost":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLastCostPostingDate(ItemValPlanEntry,TRUE);
                                                                  END;
                                                                "Lowest Value Type"::"Last Direct Cost (Item)":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item,Item."Last Direct Cost");
                                                                  END;
                                                                "Lowest Value Type"::"Average Cost":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowAvgCostDateFilter(ItemValPlanEntry);
                                                                  END;
                                                                "Lowest Value Type"::"Last Sales Price":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLastSalesPricePostingDate(ItemValPlanEntry);
                                                                  END;
                                                                "Lowest Value Type"::"Lowest Direct Cost":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLowestDirectCost(ItemValPlanEntry);
                                                                  END;
                                                                "Lowest Value Type"::"Last Unit Cost":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLastCostPostingDate(ItemValPlanEntry,FALSE);
                                                                  END;
                                                                "Lowest Value Type"::"Lowest Unit Cost":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLowestDirectCost(ItemValPlanEntry);
                                                                  END;
                                                                "Lowest Value Type"::"Purchase Cost":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item);
                                                                  END;
                                                                "Lowest Value Type"::"Purchase Quote":
                                                                  BEGIN
                                                                    ItemValPlanEntry.TRANSFERFIELDS(Rec);
                                                                    ValCondCalcMgt.ShowLastPurchaseQuote(ItemValPlanEntry);
                                                                  END;
                                                                "Lowest Value Type"::"Field Item Table":
                                                                  BEGIN
                                                                    Item.GET("Item No.");
                                                                    PAGE.RUNMODAL(PAGE::"Item Card",Item,"Item Field ID");
                                                                  END;
                                                                "Lowest Value Type"::"Standard Cost - Assembly List",
                                                                "Lowest Value Type"::"Standard Cost - Manufacturing":
                                                                  BEGIN
                                                                    // Nothing to because the are calculated
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[DEU=Niederstwert - Preis;
                                                              ENU=Last Direct Cost on Posting Date];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 7045;   ;Profit %            ;Decimal       ;CaptionML=[DEU=DB %;
                                                              ENU=Profit %];
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100 }
    { 7050;   ;Entry No. Unit Cost Basis;Integer  ;TableRelation="IVA Item Valuation Entry" WHERE (Item Ledger Entry No.=FIELD(Item Ledger Entry No.),
                                                                                                   Journal Batch Name=FIELD(Journal Batch Name),
                                                                                                   Item No.=FIELD(Item No.),
                                                                                                   Posting Date=FIELD(Posting Date),
                                                                                                   Calculation Type=CONST(Unit Cost Basis));
                                                   OnValidate=VAR
                                                                ValCondHeader@5447560 : Record 5447562;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[DEU=Lfd. Nr. Einstandspreisgrundlage;
                                                              ENU=Entry No. Unit Cost Basis];
                                                   BlankZero=Yes }
    { 7060;   ;Item Field ID       ;Integer       ;OnValidate=BEGIN
                                                                TESTFIELD("Lowest Value Type","Lowest Value Type"::"Field Item Table");
                                                              END;

                                                   CaptionML=[DEU=Artikel Feld ID;
                                                              ENU=item Field ID];
                                                   BlankZero=Yes }
    { 7061;   ;Item Field Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=CONST(27),
                                                                                             No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldname;
                                                              ENU=Item Field Name];
                                                   Editable=No }
    { 7062;   ;Item Field Caption  ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=CONST(27),
                                                                                                   No.=FIELD(Item Field ID)));
                                                   CaptionML=[DEU=Artikel Feldbezeichnung;
                                                              ENU=Item Field Caption];
                                                   Editable=No }
    { 10000;  ;Post As Revaluation ;Boolean       ;CaptionML=[DEU=Als Neubewertung buchen;
                                                              ENU=Post as Revaluation] }
    { 10001;  ;Revaluation Value Entry No.;Integer;TableRelation=IF (Revaluation Value Entry No.=FILTER(<>0)) "Value Entry"."Entry No." WHERE (Item No.=FIELD(Item No.),
                                                                                                                                               Item Ledger Entry No.=FIELD(Item Ledger Entry No.));
                                                   CaptionML=[DEU=Neubewertung Wertposten Lfd. Nr.;
                                                              ENU=Revaluaton value Entry No.];
                                                   BlankZero=Yes }
    { 20000;  ;Comments            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("IVA Item Val. Comment Line" WHERE (Table ID=CONST(5447605),
                                                                                                         Item Ledger Entry No.=FIELD(Item Ledger Entry No.),
                                                                                                         Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[DEU=Bemerkungen;
                                                              ENU=Comments];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.,Posting Date,Valid Value,Journal Batch Name,Calculation Type,Location Code,Valuation Cond. Code,Gen. Prod. Posting Group,Inventory Posting Group,Item Tracking Code,Item Category Code,Global Dimension 1 Code,Global Dimension 2 Code;
                                                   SumIndexFields=Inventory Value (Calculated),Inventory Value (Revalued),Valuation Amount,Inventory Value (UnitCosBasis) }
    {    ;Item No.,Posting Date,Valid Value,Calculation Type,Post As Revaluation }
    {    ;Item Ledger Entry No.,Item No.,Posting Date,Reversed }
    {    ;Document No.,Posting Date                }
    {    ;Reversed                                 }
    {    ;Item No.,Posting Date,Bal. Posting Date,Post As Revaluation,Reversed }
    {    ;Bal. Posting Date,Item No.,Posting Date,Post As Revaluation,Reversed }
    {    ;Item Ledger Entry No.,Item No.,Valid Value,Posting Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1006 : Record 98;
      GLSetupRetrieved@1007 : Boolean;
      ValCondCalcMgt@5447560 : Codeunit 5447562;

    LOCAL PROCEDURE GetGLSetup@2();
    BEGIN
      IF NOT GLSetupRetrieved THEN BEGIN
        GLSetup.GET;
        GLSetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      GetGLSetup;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowGL@9();
    VAR
      GLItemValEntryRelation@1000 : Record 5447617;
      GLEntry@1002 : Record 17;
      TempGLEntry@1001 : TEMPORARY Record 17;
    BEGIN
      GLItemValEntryRelation.SETCURRENTKEY("Item Val. Entry No.");
      GLItemValEntryRelation.SETRANGE("Item Val. Entry No.","Entry No.");
      IF GLItemValEntryRelation.FINDSET THEN
        REPEAT
          GLEntry.GET(GLItemValEntryRelation."G/L Entry No.");
          TempGLEntry.INIT;
          TempGLEntry := GLEntry;
          TempGLEntry.INSERT;
        UNTIL GLItemValEntryRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempGLEntry);
    END;

    PROCEDURE ShowDimensions@11();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447607 IVA Item Valuation Register
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    Permissions=TableData 5447606=rim,
                TableData 5447608=rim;
    CaptionML=[DEU=Artikelbewertungsjournal;
               ENU=Item Valuation Register];
    LookupPageID=Page5447607;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 2   ;   ;From Entry No.      ;Integer       ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Von Lfd. Nr.;
                                                              ENU=From Entry No.] }
    { 3   ;   ;To Entry No.        ;Integer       ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Bis Lfd. Nr.;
                                                              ENU=To Entry No.] }
    { 4   ;   ;Creation Date       ;Date          ;CaptionML=[DEU=Errichtungsdatum;
                                                              ENU=Creation Date] }
    { 5   ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 6   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID] }
    { 7   ;   ;Journal Batch Name  ;Code10        ;TableRelation="IVA Item Val. Journal Batch".Name;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 9   ;   ;Creation Time       ;Time          ;CaptionML=[DEU=Erstellungszeit;
                                                              ENU=Creation Time] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Creation Date                            }
    {    ;Source Code,Journal Batch Name,Creation Date }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,From Entry No.,To Entry No.,Creation Date,Source Code }
  }
  CODE
  {
    VAR
      Text001@5447563 : TextConst 'DEU=Mîchten Sie die Posten stornieren und den Bericht drucken?;ENU=Do you want to reverse the entries and print the report?';
      Text002@5447562 : TextConst 'DEU=Mîchten Sie die Posten stornieren?;ENU=Do you want to reverse the entries?';
      Text003@5447561 : TextConst 'DEU=Die Posten wurden erfolgreich storniert.;ENU=The entries were successfully reversed.';
      Text010@5447560 : TextConst 'DEU=Sie kînnen %1 Nr. %2 nicht stornieren, weil das Journal bereits bei einer Stornierung verwendet wurde.;ENU=You cannot reverse %1 No. %2 because the register has already been involved in a reversal.';
      Text011@5447564 : TextConst 'DEU=Buchungen im Neubewertungs Buch.-Blatt werden durch diesen Storno nicht storniert!;ENU=Postings to Revaluation won''t be reversed by this Reversal!';
      ItemValJnlPostLine@5447565 : Codeunit 5447602;
      Text012@5447566 : TextConst 'DEU=Bitte fÅhren Sie ''BewertungsbetrÑge buchen'' noch manuell aus;ENU=Please, run ''Post Valuation Amounts to G/L'' even manually.';
      Text013@5452007 : TextConst 'DEU=Das Setzen des %1 ist nicht stornierbar! Es kann nur durch neue Bewertung zu dem entsprechenden Bewertungsdatum ersetzt werden. Wollen Sie fortfahren?;ENU=Setting of %1 could not be done reverse! It can only be replaced by new valuations on the relevant valuation date. Do you want to continue?';

    PROCEDURE PostReversal@5447560(PrintRegister@5447566 : Boolean);
    VAR
      ItemValReg@5447562 : Record 5447607;
      ItemValEntry@5447565 : Record 5447606;
      ItemValJnlTemplate@5447561 : Record 5447600;
      ItemValJnlPostLine@5447560 : Codeunit 5447602;
      EntryNo@5447567 : Integer;
      Txt@5447563 : Text[250];
      WarningText@5447564 : Text[250];
    BEGIN
      RESET;

      // Search to revered entries in the register
      EntryNo := "From Entry No.";
      REPEAT
        ItemValEntry.GET(EntryNo);
        IF ItemValEntry.Reversed AND (ItemValEntry."Reversed by Entry No." <> 0) THEN
          ERROR(Text010,Rec.TABLECAPTION,"No.");
        EntryNo := EntryNo + 1;
      UNTIL EntryNo > "To Entry No.";

      // Search to posted as revaluation
      ItemValEntry.SETRANGE("Entry No.","From Entry No.","To Entry No.");
      ItemValEntry.SETRANGE("Post As Revaluation",TRUE);
      IF NOT ItemValEntry.ISEMPTY THEN
        MESSAGE(Text011);

      IF NOT PrintRegister THEN BEGIN
        IF CONFIRM(STRSUBSTNO(Text002)) THEN
          ItemValJnlPostLine.ReverseItemValEntry("From Entry No.","To Entry No.")
        ELSE
          EXIT;
      END ELSE BEGIN
        IF CONFIRM(STRSUBSTNO(Text001)) THEN BEGIN
          ItemValJnlPostLine.ReverseItemValEntry("From Entry No.","To Entry No.");
          ItemValJnlTemplate.VALIDATE("Page ID");
          IF ItemValJnlTemplate."Posting Report ID" <> 0 THEN BEGIN
            IF ItemValReg.FIND('+') THEN BEGIN;
              ItemValReg.SETRECFILTER;
              REPORT.RUN(ItemValJnlTemplate."Posting Report ID",FALSE,FALSE,ItemValReg);
            END;
          END;
        END ELSE
          EXIT;
      END;
      MESSAGE(Text003);
    END;

    PROCEDURE ShowOpenBalanceEntries@5447561(Multiple@5452007 : Boolean);
    VAR
      ItemValEntryOpenBalance@5447560 : Record 5447606;
      ItemValEntryOpenBalance2@5447561 : Record 5447606;
      OpenBalanceEntries@5447562 : TEMPORARY Record 5447606;
      PostItemValEntryToGL@5447563 : Record 5447608;
    BEGIN
      WITH ItemValEntryOpenBalance DO BEGIN
        SETCURRENTKEY("Bal. Posting Date","Item No.","Posting Date","Post As Revaluation",Reversed);
        SETRANGE("Bal. Posting Date",0D);
        SETRANGE("Post As Revaluation",FALSE);
        SETRANGE(Reversed,FALSE);
        IF NOT Multiple THEN BEGIN
          ItemValEntryOpenBalance2.GET(Rec."From Entry No.");
          SETRANGE("Posting Date",0D,CALCDATE('<-1D>',ItemValEntryOpenBalance2."Posting Date"));
        END;
        IF FINDSET THEN
          REPEAT
            IF NOT Multiple THEN BEGIN
                ItemValEntryOpenBalance2.GET(Rec."From Entry No.");
                OpenBalanceEntries := ItemValEntryOpenBalance;
                OpenBalanceEntries."Bal. Posting Date" := ItemValEntryOpenBalance2."Posting Date";
                OpenBalanceEntries.INSERT;
            END ELSE BEGIN
              ItemValEntryOpenBalance2.SETCURRENTKEY(
                "Bal. Posting Date","Item No.","Posting Date","Post As Revaluation",Reversed);
              ItemValEntryOpenBalance2.SETRANGE("Item No.","Item No.");
              ItemValEntryOpenBalance2.SETRANGE("Posting Date",CALCDATE('<1D>',"Posting Date"),31129999D);
              ItemValEntryOpenBalance2.SETRANGE("Bal. Posting Date",0D);
              ItemValEntryOpenBalance2.SETRANGE("Post As Revaluation",FALSE);
              ItemValEntryOpenBalance2.SETRANGE(Reversed,FALSE);
              IF ItemValEntryOpenBalance2.FINDFIRST THEN BEGIN
                OpenBalanceEntries := ItemValEntryOpenBalance;
                OpenBalanceEntries."Bal. Posting Date" := ItemValEntryOpenBalance2."Posting Date";
                OpenBalanceEntries.INSERT;
              END;
            END;
          UNTIL ItemValEntryOpenBalance.NEXT = 0;
      END;

      OpenBalanceEntries.SETCURRENTKEY(
        "Bal. Posting Date","Item No.","Posting Date","Post As Revaluation",Reversed);
      IF PAGE.RUNMODAL(PAGE::"Item Val. Entries Set Open Bal",OpenBalanceEntries) = ACTION::LookupOK THEN BEGIN
        IF OpenBalanceEntries.FINDSET THEN BEGIN
          IF NOT Multiple THEN
            IF NOT CONFIRM(Text013,FALSE,OpenBalanceEntries.FIELDCAPTION("Bal. Posting Date")) THEN
              EXIT;

          REPEAT
            ItemValEntryOpenBalance := OpenBalanceEntries;
            ItemValEntryOpenBalance.MODIFY;

            IF ItemValEntryOpenBalance."Valid Value" THEN BEGIN
              PostItemValEntryToGL."Item Valuation Entry No." := ItemValEntryOpenBalance."Entry No.";
              PostItemValEntryToGL."Item No." := ItemValEntryOpenBalance."Item No.";
              PostItemValEntryToGL."Posting Date" := ItemValEntryOpenBalance."Posting Date";
              IF PostItemValEntryToGL.INSERT THEN;
            END;

          UNTIL OpenBalanceEntries.NEXT = 0;
          MESSAGE(Text012);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447608 IVA Post Item Val. Ent. to G/L
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikelbewertungsposten in Sachkonto buchen;
               ENU=Post Item Val. Entry to G/L];
  }
  FIELDS
  {
    { 1   ;   ;Item Valuation Entry No.;Integer   ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Artikelbewertungsposten Lfd. Nr.;
                                                              ENU=Item Valuation Entry No.] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 5808;   ;Calculation Type    ;Option        ;CaptionML=[DEU=Berechnungsart;
                                                              ENU=Calculation Type];
                                                   OptionCaptionML=[DEU=" ,Einstandspreisgrundlage,Basierend auf Einstandspreisgrundlage";
                                                                    ENU=" ,Unit Cost Basis,Based on Unit Cost Basis"];
                                                   OptionString=[ ,Unit Cost Basis,Based on Unit Cost Basis];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Item Valuation Entry No.                ;Clustered=Yes }
    {    ;Item No.,Posting Date                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447610 IVA Val. General Posting Setup
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bewertung Buchungsmatrix Einrichtung;
               ENU=Valuation General Posting Setup];
    LookupPageID=Page5447610;
    DrillDownPageID=Page5447610;
  }
  FIELDS
  {
    { 1   ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 2   ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group];
                                                   NotBlank=Yes }
    { 3   ;   ;Valuation Cond. Code;Code20        ;TableRelation="IVA Valuation Condition".Code;
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 19  ;   ;Val. Inventory Adjmt. Account;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Val. Inventory Adjmt. Account");
                                                              END;

                                                   CaptionML=[DEU=Bewertung Lagerkorrekturkonto;
                                                              ENU=Valuation Inventory Adjmt. Account] }
    { 20  ;   ;Bal. Val. Inv. Adjmt. Account;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Bal. Val. Inv. Adjmt. Account");
                                                              END;

                                                   CaptionML=[DEU=Gegen Bewertung Lagerkorrekturkonto;
                                                              ENU=Balance Valuation Inventory Adjmt. Account] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
  }
  KEYS
  {
    {    ;Valuation Cond. Code,Gen. Bus. Posting Group,Gen. Prod. Posting Group;
                                                   Clustered=Yes }
    {    ;Valuation Cond. Code,Gen. Prod. Posting Group,Gen. Bus. Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE GetValInventoryAdjmtAccount@3() : Code[20];
    BEGIN
      TESTFIELD("Val. Inventory Adjmt. Account");
      EXIT("Val. Inventory Adjmt. Account");
    END;

    [External]
    PROCEDURE GetBalValInvAdjmtAccount@4() : Code[20];
    BEGIN
      TESTFIELD("Bal. Val. Inv. Adjmt. Account");
      EXIT("Bal. Val. Inv. Adjmt. Account");
    END;

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
       IF AccNo <> '' THEN BEGIN
         GLAcc.GET(AccNo);
         GLAcc.CheckGLAcc;
       END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447612 IVA Val. Inventory Post. Setup
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bewertung Lagerbuchung Einrichtung;
               ENU=Valuation Inventory Posting Setup];
    LookupPageID=Page5447612;
    DrillDownPageID=Page5447612;
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 2   ;   ;Invt. Posting Group Code;Code20    ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppencode;
                                                              ENU=Invt. Posting Group Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Valuation Cond. Code;Code20        ;TableRelation="IVA Valuation Condition".Code;
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 6   ;   ;Inventory Val. Account;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Inventory Val. Account");
                                                              END;

                                                   CaptionML=[DEU=Lagerbewertungskonto;
                                                              ENU=Inventory Valuation Account] }
    { 7   ;   ;Bal. Inventory Val. Account;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Bal. Inventory Val. Account");
                                                              END;

                                                   CaptionML=[DEU=Gegen Lagerbewertungskonto;
                                                              ENU=Balance Inventory Valuation Account] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
  }
  KEYS
  {
    {    ;Valuation Cond. Code,Location Code,Invt. Posting Group Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE GetInventoryValAccount@3() : Code[20];
    BEGIN
      TESTFIELD("Inventory Val. Account");
      EXIT("Inventory Val. Account");
    END;

    [External]
    PROCEDURE GetBalInventoryValAccount@4() : Code[20];
    BEGIN
      TESTFIELD("Bal. Inventory Val. Account");
      EXIT("Bal. Inventory Val. Account");
    END;

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447615 IVA Valuation Posting Buffer
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[DEU=Bewertungsbuchungspuffer;
               ENU=Valaution Posting Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Account Type        ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Kontoart;
                                                              ENU=Account Type];
                                                   OptionCaptionML=[DEU=Lagerbestand,Gegen Lagerbestand,Lagerkorrektur,Gegen Lagerkorrektur;
                                                                    ENU=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt.];
                                                   OptionString=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt. }
    { 2   ;   ;Location Code       ;Code10        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 3   ;   ;Inventory Posting Group;Code20     ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 4   ;   ;Dimension Entry No. ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Dimension Lfd. Nr.;
                                                              ENU=Dimension Entry No.] }
    { 5   ;   ;Amount              ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Betrag;
                                                              ENU=Amount] }
    { 6   ;   ;Amount (ACY)        ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Betrag (BW);
                                                              ENU=Amount (ACY)] }
    { 7   ;   ;Balance Account     ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Gegenkonto;
                                                              ENU=Balance Account] }
    { 8   ;   ;Account No.         ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Kontonr.;
                                                              ENU=Account No.] }
    { 9   ;   ;Posting Date        ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 10  ;   ;Gen. Bus. Posting Group;Code20     ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 11  ;   ;Gen. Prod. Posting Group;Code20    ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 12  ;   ;Negative            ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Negativ;
                                                              ENU=Negative] }
    { 13  ;   ;Entry No.           ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 14  ;   ;Bal. Account Type   ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Gegenkontoart;
                                                              ENU=Bal. Account Type];
                                                   OptionCaptionML=[DEU=Lagerbestand,Gegen Lagerbestand,Lagerkorrektur,Gegen Lagerkorrektur;
                                                                    ENU=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt.];
                                                   OptionString=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt. }
    { 16  ;   ;Valuation Cond. Code;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Posting Date,Account Type,Location Code,Inventory Posting Group,Gen. Bus. Posting Group,Gen. Prod. Posting Group,Dimension Entry No.,Negative,Bal. Account Type;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE UseInvtPostSetup@9() : Boolean;
    BEGIN
      EXIT(
        "Account Type" IN
        ["Account Type"::Inventory,
         "Account Type"::"Bal. Inventory"]);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447616 IVA Val. Post to G/L Test Buf
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[DEU=Testpuffer fÅr Bewertungsbuchung auf Sachposten;
               ENU=Val. Post to G/L Test Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Zeilennr.;
                                                              ENU=Line No.] }
    { 2   ;   ;Account No.         ;Code20        ;TableRelation="G/L Account";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Kontonr.;
                                                              ENU=Account No.] }
    { 3   ;   ;Posting Date        ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   ClosingDates=Yes }
    { 4   ;   ;Document No.        ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 5   ;   ;Description         ;Text100       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 6   ;   ;Amount              ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Betrag;
                                                              ENU=Amount];
                                                   AutoFormatType=1 }
    { 8   ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code];
                                                   Editable=No }
    { 9   ;   ;System-Created Entry;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Systembuchung;
                                                              ENU=System-Created Entry];
                                                   Editable=No }
    { 10  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 11  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 13  ;   ;Additional-Currency Posting;Option ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Buchung (BW);
                                                              ENU=Additional-Currency Posting];
                                                   OptionCaptionML=[DEU=Kein,Nur Betrag,Nur Betrag (BW);
                                                                    ENU=None,Amount Only,Additional-Currency Amount Only];
                                                   OptionString=None,Amount Only,Additional-Currency Amount Only;
                                                   Editable=No }
    { 14  ;   ;Source Currency Code;Code10        ;TableRelation=Currency;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Urspr.-WÑhrungscode;
                                                              ENU=Source Currency Code];
                                                   Editable=No }
    { 15  ;   ;Source Currency Amount;Decimal     ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Urspr.-WÑhrung Betrag;
                                                              ENU=Source Currency Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Item Valuation Entry No.;Integer   ;TableRelation="IVA Item Valuation Entry";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Artikelbewertungsposten Lfd. Nr.;
                                                              ENU=Item Valuation Entry No.];
                                                   Editable=No }
    { 17  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 18  ;   ;Invt. Posting Group Code;Code20    ;TableRelation="Inventory Posting Group";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerbuchungsgruppencode;
                                                              ENU=Invt. Posting Group Code] }
    { 19  ;   ;Inventory Account Type;Option      ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerkontoart;
                                                              ENU=Inventory Account Type];
                                                   OptionCaptionML=[DEU=Lagerbestand,Gegen Lagerbestand,Lagerkorrektur,Gegen Lagerkorrektur;
                                                                    ENU=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt.];
                                                   OptionString=Inventory,Bal. Inventory,Inventory Adjmt.,Bal. Inventory Adjmt. }
    { 20  ;   ;Valuation Cond. Code;Code20        ;TableRelation="IVA Valuation Condition".Code;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Bewertungsregelcode;
                                                              ENU=Valuation Condition Code] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE UseInvtPostSetup@9() : Boolean;
    BEGIN
      EXIT(
        "Inventory Account Type" IN
        ["Inventory Account Type"::Inventory,
         "Inventory Account Type"::"Bal. Inventory"]);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447617 IVA G/L - Item Val. Entry Rel.
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Sachposten - Artikelbewertungspostenverbindung;
               ENU=G/L - Item Valuation Entry Relation];
  }
  FIELDS
  {
    { 1   ;   ;G/L Entry No.       ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=[DEU=Sachposten Lfd. Nr.;
                                                              ENU=G/L Entry No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Item Val. Entry No. ;Integer       ;TableRelation="IVA Item Valuation Entry";
                                                   CaptionML=[DEU=Artikelbewertungsposten Lfd. Nr.;
                                                              ENU=Item Valuation Entry No.];
                                                   NotBlank=Yes }
    { 3   ;   ;G/L Register No.    ;Integer       ;TableRelation="G/L Register";
                                                   CaptionML=[DEU=Fibujournalnr.;
                                                              ENU=G/L Register No.] }
  }
  KEYS
  {
    {    ;G/L Entry No.,Item Val. Entry No.       ;Clustered=Yes }
    {    ;Item Val. Entry No.                      }
    {    ;G/L Register No.                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447620 IVA Item Val. Analy. Code Buf.
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[DEU=Artikelbewertung Anlyseberichtscodepuffer;
               ENU=Item Val. Analysis Code Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Code;
                                                              ENU=Code] }
    { 2   ;   ;Name                ;Text100       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Name;
                                                              ENU=Name] }
    { 3   ;   ;Totaling            ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=ZusammenzÑhlung;
                                                              ENU=Totaling] }
    { 4   ;   ;Period Start        ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Periodenanfang;
                                                              ENU=Period Start] }
    { 5   ;   ;Period End          ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Periodenende;
                                                              ENU=Period End] }
    { 6   ;   ;Visible             ;Boolean       ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Sichtbar;
                                                              ENU=Visible] }
    { 7   ;   ;Indentation         ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=EinrÅckung;
                                                              ENU=Indentation] }
    { 8   ;   ;Show in Bold        ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Fett anzeigen;
                                                              ENU=Show in Bold] }
    { 10  ;   ;Type                ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Art;
                                                              ENU=Type] }
    { 5802;   ;Inventory Value (Calculated);Decimal;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerwert (berechnet);
                                                              ENU=Inventory Value (Calculated)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5803;   ;Inventory Value (Revalued);Decimal ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerwert (neu bewertet);
                                                              ENU=Inventory Value (Revalued)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5804;   ;Valuation Amount    ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Bewertungsbetrag;
                                                              ENU=Valuation Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5805;   ;Inventory Value (UC Basis);Decimal ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Inventory Value (Unit Cost Basis)];
                                                   MaxValue=0 }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Period Start                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447621 IVA Item Val. Analy. Rep. Name
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Artikelbewertung Analyseberichtsname;
               ENU=Item Valuation Analysis Report Name];
  }
  FIELDS
  {
    { 2   ;   ;Name                ;Code10        ;CaptionML=[DEU=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text80        ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 10  ;   ;Show as Lines       ;Option        ;CaptionML=[DEU=Zeilenansicht;
                                                              ENU=Show as Lines];
                                                   OptionCaptionML=[DEU=Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,Bewertungsregel,Periode,Globale Dimension 1,Globale Dimension 2;
                                                                    ENU=Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,Valuation Condition,Periode,Global Dimension 1,Global Dimension 2];
                                                   OptionString=Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,Valuation Condition,Periode,Global Dimension 1,Global Dimension 2 }
    { 11  ;   ;Show as Columns     ;Option        ;CaptionML=[DEU=Spaltenansicht;
                                                              ENU=Show as Columns];
                                                   OptionCaptionML=[DEU=Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,Bewertungsregel,Periode,Globale Dimension 1,Globale Dimension 2;
                                                                    ENU=Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,Valuation Condition,Periode,Global Dimension 1,Global Dimension 2];
                                                   OptionString=Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,Valuation Condition,Periode,Global Dimension 1,Global Dimension 2 }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447622 IVA Item Valuation Buffer
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=Code;
    ReplicateData=No;
    CaptionML=[DEU=Artikelbewertungspuffer;
               ENU=Item Valuation Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Item Filter         ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Item;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Artikelfilter;
                                                              ENU=Item Filter] }
    { 4   ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortfilter;
                                                              ENU=Location Filter] }
    { 5   ;   ;Valuation Condition Filter;Code20  ;FieldClass=FlowFilter;
                                                   TableRelation="IVA Valuation Condition".Code;
                                                   CaptionML=[DEU=Bewertungsregelfilter;
                                                              ENU=Valuation Condition Filter] }
    { 6   ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionsfilter 1;
                                                              ENU=Global Dimension 1 Filter];
                                                   CaptionClass='1,3,1' }
    { 7   ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionsfilter 2;
                                                              ENU=Global Dimension 2 Filter];
                                                   CaptionClass='1,3,2' }
    { 8   ;   ;Internal Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Interner Datumsfilter;
                                                              ENU=Internal Date Filter];
                                                   ClosingDates=Yes }
    { 9   ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Datumsfilter;
                                                              ENU=Date Filter];
                                                   ClosingDates=Yes }
    { 10  ;   ;Journal Batch Filter;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Buch.-Blatt Filter;
                                                              ENU=Journal Batch Filter] }
    { 11  ;   ;Calculation Type Filter;Option     ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Berechnungsartenfilter;
                                                              ENU=Calculation Type Filter];
                                                   OptionCaptionML=[DEU=" ,Einstandspreisgrundlage,Basierend auf Einstandspreisgrundlage";
                                                                    ENU=" ,Unit Cost Basis,Based on Unit Cost Basis"];
                                                   OptionString=[ ,Unit Cost Basis,Based on Unit Cost Basis];
                                                   Editable=No }
    { 15  ;   ;Inventory Value (Calculated);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Entry"."Inventory Value (Calculated)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                    Item No.=FIELD(Item Filter),
                                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                                    Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                    Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                    Posting Date=FIELD(Date Filter),
                                                                                                                                    Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                    Valid Value=FIELD(Valid Value Filter),
                                                                                                                                    Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                    Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                    Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                    Item Category Code=FIELD(Item Category Filter),
                                                                                                                                    Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Lagerwert (berechnet);
                                                              ENU=Inv. Value (Calculated)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Inventory Value (Revalued);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Entry"."Inventory Value (Revalued)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                  Item No.=FIELD(Item Filter),
                                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                                  Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                  Valid Value=FIELD(Valid Value Filter),
                                                                                                                                  Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                  Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                  Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                  Item Category Code=FIELD(Item Category Filter),
                                                                                                                                  Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Lagerwert (neubewertet);
                                                              ENU=Inv. Value (Revalued)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Valuation Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Entry"."Valuation Amount" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                        Item No.=FIELD(Item Filter),
                                                                                                                        Location Code=FIELD(Location Filter),
                                                                                                                        Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                        Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                        Valid Value=FIELD(Valid Value Filter),
                                                                                                                        Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                        Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                        Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                        Item Category Code=FIELD(Item Category Filter),
                                                                                                                        Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Bewertungsbetrag;
                                                              ENU=Valuation Amount];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;Inventory Value (UC Basis);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Entry"."Inventory Value (UnitCosBasis)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                      Item No.=FIELD(Item Filter),
                                                                                                                                      Location Code=FIELD(Location Filter),
                                                                                                                                      Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                      Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                                      Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                      Valid Value=FIELD(Valid Value Filter),
                                                                                                                                      Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                      Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                      Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                      Item Category Code=FIELD(Item Category Filter),
                                                                                                                                      Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Inventory Value (Unit Cost Basis)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50  ;   ;Plan. Inv. Value (Calculated);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (Calculated)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                         Item No.=FIELD(Item Filter),
                                                                                                                                         Location Code=FIELD(Location Filter),
                                                                                                                                         Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                         Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                         Posting Date=FIELD(Date Filter),
                                                                                                                                         Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                         Valid Value=FIELD(Valid Value Filter),
                                                                                                                                         Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                         Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                         Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                         Item Category Code=FIELD(Item Category Filter),
                                                                                                                                         Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Plan. Lagerwert (berechnet);
                                                              ENU=Plan. Inv. Value (Calculated)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 51  ;   ;Plan. Inv. Value (Revalued);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (Revalued)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                       Item No.=FIELD(Item Filter),
                                                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                                       Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                       Valid Value=FIELD(Valid Value Filter),
                                                                                                                                       Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                       Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                       Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                       Item Category Code=FIELD(Item Category Filter),
                                                                                                                                       Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Plan. Lagerwert (neubewertet);
                                                              ENU=Plan. Inv. Value (Revalued)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 52  ;   ;Plan. Valuation Amount;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Valuation Amount" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                             Item No.=FIELD(Item Filter),
                                                                                                                             Location Code=FIELD(Location Filter),
                                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                                             Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                             Valid Value=FIELD(Valid Value Filter),
                                                                                                                             Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                             Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                             Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                             Item Category Code=FIELD(Item Category Filter),
                                                                                                                             Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Plan. Bewertungsbetrag;
                                                              ENU=Plan. Valuation Amount];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 53  ;   ;Plan. Inv. Value (UC Basis);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("IVA Item Valuation Plan Entry"."Inventory Value (UnitCosBasis)" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                                                           Item No.=FIELD(Item Filter),
                                                                                                                                           Location Code=FIELD(Location Filter),
                                                                                                                                           Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                                           Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                                           Posting Date=FIELD(Date Filter),
                                                                                                                                           Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                                                           Valid Value=FIELD(Valid Value Filter),
                                                                                                                                           Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                                                           Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                                                           Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                                                           Item Category Code=FIELD(Item Category Filter),
                                                                                                                                           Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Plan. Lagerwert (Einstandspreisgrundlage);
                                                              ENU=Plan. Inv. Value (Unit Cost Basis)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Item Val. Plan Entries Avail.;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("IVA Item Valuation Plan Entry" WHERE (Journal Batch Name=FIELD(Journal Batch Filter),
                                                                                                            Item No.=FIELD(Item Filter),
                                                                                                            Location Code=FIELD(Location Filter),
                                                                                                            Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                            Posting Date=FIELD(Date Filter),
                                                                                                            Valuation Cond. Code=FIELD(Valuation Condition Filter),
                                                                                                            Valid Value=FIELD(Valid Value Filter),
                                                                                                            Gen. Prod. Posting Group=FIELD(Product Posting Group Filter),
                                                                                                            Inventory Posting Group=FIELD(Inventory Posting Group Filter),
                                                                                                            Item Tracking Code=FIELD(Item Tracking Filter),
                                                                                                            Item Category Code=FIELD(Item Category Filter),
                                                                                                            Calculation Type=FIELD(Calculation Type Filter)));
                                                   CaptionML=[DEU=Artikelbewertungsplanposten vorhanden;
                                                              ENU=Item Valuation Plan Entry available] }
    { 70  ;   ;Valid Value Filter  ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=GÅltige Wert Filter;
                                                              ENU=Valid Value Filter] }
    { 74  ;   ;Product Posting Group Filter;Code20;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Produktbuchungsgruppenfilter;
                                                              ENU=Product Posting Group Filter] }
    { 75  ;   ;Inventory Posting Group Filter;Code20;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Lagerbuchungsgruppemfilter;
                                                              ENU=Inventory Posting Group Filter] }
    { 76  ;   ;Item Tracking Filter;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Artikelverfolgungsfilter;
                                                              ENU=Item Tracking Filter] }
    { 77  ;   ;Item Category Filter;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[DEU=Artikelkategorienfilter;
                                                              ENU=Item Category] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447650 IVA Application Analysis Buf
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=IVA-ALUPG;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[DEU=Ausgleichsnachweispuffer;
               ENU=Application Analysis Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Zeilennr.;
                                                              ENU=Line No.] }
    { 7   ;   ;No Transfer         ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Keine Umlagerung;
                                                              ENU=No Transfer] }
    { 8   ;   ;Process No.         ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Vorgang No.;
                                                              ENU=Process No.] }
    { 9   ;   ;Level               ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Ebene;
                                                              ENU=Level] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 20  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 21  ;   ;Posting Date        ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 22  ;   ;Entry Type          ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung, ,Verbrauch fÅr Montage,Montage-Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 23  ;   ;Document No.        ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 24  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 31  ;   ;Positive            ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Positiv;
                                                              ENU=Positive] }
    { 32  ;   ;Open                ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Offen;
                                                              ENU=Open] }
    { 33  ;   ;Remaining Quantity  ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Restmenge;
                                                              ENU=Remaining Quantity];
                                                   DecimalPlaces=0:5 }
    { 34  ;   ;Rem. Qty. Cost Amt.(Total);Decimal ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Restmenge Einstandsbetrag (Gesamt);
                                                              ENU=Rem. Qty. Cost Amt.(Total)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 35  ;   ;Applied Entry to Adjust;Boolean    ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Ausgegl. Posten regul.;
                                                              ENU=Applied Entry to Adjust] }
    { 40  ;   ;Quantity            ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Menge;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5 }
    { 41  ;   ;Invoiced Quantity   ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Fakturierte Menge;
                                                              ENU=Invoiced Quantity];
                                                   DecimalPlaces=0:5 }
    { 42  ;   ;Not Inv. Quantity   ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Nicht Fakt. Menge;
                                                              ENU=Not Inv. Quantity];
                                                   DecimalPlaces=0:5 }
    { 45  ;   ;Cost Amount (Expected);Decimal     ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Einstandsbetrag (erwartet);
                                                              ENU=Cost Amount (Expected)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 46  ;   ;Cost Amount (Actual);Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Einstandsbetrag (tatsÑchl.);
                                                              ENU=Cost Amount (Actual)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 47  ;   ;Cost Amount (Total) ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Einstandsbetrag (Gesamt);
                                                              ENU=Cost Amount (Totall)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50  ;   ;Prorated Quantity   ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Anteilige Menge;
                                                              ENU=Prorated Quantity];
                                                   DecimalPlaces=0:5 }
    { 51  ;   ;Prorated Cost Amount (Base);Decimal;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Anteil Einstandsbetrag (Basis);
                                                              ENU=Prorated Cost Amount (Base)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 52  ;   ;Prorated Cost Qty. (Base);Decimal  ;DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Anteil Menge (Basis);
                                                              ENU=Prorated Cost Qty. (Base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 57  ;   ;Prorated Cost Amount (Totall);Decimal;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DEU=Anteil Einstandsbetrag (Gesamt);
                                                              ENU=Prorated Cost Amount (Total)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447700 General Posting Setup CPL CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckNotBlank
             END;

    OnDelete=BEGIN
               CheckSetupUsage;
             END;

    OnRename=BEGIN
               CheckNotBlank
             END;

    CaptionML=[DEU=Buchungsmatrix Einrichtung PLUS;
               ENU=General Posting Setup PLUS];
    LookupPageID=Page5447700;
    DrillDownPageID=Page5447700;
  }
  FIELDS
  {
    { 1   ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 2   ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group];
                                                   NotBlank=Yes }
    { 3   ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 4   ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 18  ;   ;COGS Account        ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("COGS Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("COGS Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "COGS Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                  STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=[DEU=Lagerverbrauchskonto;
                                                              ENU=COGS Account] }
    { 19  ;   ;Inventory Adjmt. Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Inventory Adjmt. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Inventory Adjmt. Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Inventory Adjmt. Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                  STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=[DEU=Lagerkorrekturkonto;
                                                              ENU=Inventory Adjmt. Account] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 51  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[DEU=Alle Konten in Lookup anzeigen;
                                                              ENU=View All Accounts on Lookup] }
    { 5801;   ;Invt. Accrual Acc. (Interim);Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Invt. Accrual Acc. (Interim)");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Inventory Adjmt. Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Inventory Adjmt. Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                  STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=[DEU=Lagerzugangskonto (Interim);
                                                              ENU=Invt. Accrual Acc. (Interim)] }
    { 5803;   ;COGS Account (Interim);Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("COGS Account (Interim)");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("COGS Account (Interim)")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "COGS Account (Interim)",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                  STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=[DEU=Lagerverbrauchskonto (Interim);
                                                              ENU=COGS Account (Interim)] }
    { 5447700;;Direct Prod. Cost Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Direct Prod. Cost Account");
                                                              END;

                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Direkte Produktionskostenkonto;
                                                              ENU=Direct Prod. Cost Account] }
    { 5447701;;Overhead Prod. Cost Account;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Overhead Prod. Cost Account");
                                                              END;

                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Indirekte Produktionskostenkonto;
                                                              ENU=Overhead Prod. Cost Account] }
    { 99000752;;Direct Cost Applied Account;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Direct Cost Applied Account");
                                                              END;

                                                   CaptionML=[DEU=Direkte Kosten Verrech.-Konto;
                                                              ENU=Direct Cost Applied Account] }
    { 99000753;;Overhead Applied Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Overhead Applied Account");
                                                              END;

                                                   CaptionML=[DEU=Gemeinkostenverrechnungskonto;
                                                              ENU=Overhead Applied Account] }
    { 99000754;;Purchase Variance Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purchase Variance Account");
                                                              END;

                                                   CaptionML=[DEU=Einkaufsabweichungskonto;
                                                              ENU=Purchase Variance Account] }
  }
  KEYS
  {
    {    ;Gen. Bus. Posting Group,Gen. Prod. Posting Group,Source Code,Reason Code;
                                                   Clustered=Yes }
    {    ;Gen. Prod. Posting Group,Gen. Bus. Posting Group,Source Code,Reason Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      YouCannotDeleteErr@1003 : TextConst '@@@="%1 = Location Code; %2 = Posting Group";DEU=Sie kînnen %1 %2 nicht lîschen.;ENU=You cannot delete %1 %2.';
      Text000@5447650 : TextConst 'DEU=%1 und %2 dÅrfen zusammen nicht leer sein.;ENU=%1 and %2 may be together not empty.';

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    LOCAL PROCEDURE CheckSetupUsage@24();
    VAR
      GLEntry@1000 : Record 17;
    BEGIN
      GLEntry.SETRANGE("Gen. Bus. Posting Group","Gen. Bus. Posting Group");
      GLEntry.SETRANGE("Gen. Prod. Posting Group","Gen. Prod. Posting Group");
      IF NOT GLEntry.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,"Gen. Bus. Posting Group","Gen. Prod. Posting Group");
    END;

    [External]
    PROCEDURE GetCOGSAccount@11() : Code[20];
    BEGIN
      TESTFIELD("COGS Account");
      EXIT("COGS Account");
    END;

    [External]
    PROCEDURE GetCOGSInterimAccount@13() : Code[20];
    BEGIN
      TESTFIELD("COGS Account (Interim)");
      EXIT("COGS Account (Interim)");
    END;

    [External]
    PROCEDURE GetInventoryAdjmtAccount@17() : Code[20];
    BEGIN
      TESTFIELD("Inventory Adjmt. Account");
      EXIT("Inventory Adjmt. Account");
    END;

    [External]
    PROCEDURE GetInventoryAccrualAccount@12() : Code[20];
    BEGIN
      TESTFIELD("Invt. Accrual Acc. (Interim)");
      EXIT("Invt. Accrual Acc. (Interim)");
    END;

    [External]
    PROCEDURE GetDirectCostAppliedAccount@19() : Code[20];
    BEGIN
      TESTFIELD("Direct Cost Applied Account");
      EXIT("Direct Cost Applied Account");
    END;

    [External]
    PROCEDURE GetOverheadAppliedAccount@20() : Code[20];
    BEGIN
      TESTFIELD("Overhead Applied Account");
      EXIT("Overhead Applied Account");
    END;

    [External]
    PROCEDURE GetPurchaseVarianceAccount@21() : Code[20];
    BEGIN
      TESTFIELD("Purchase Variance Account");
      EXIT("Purchase Variance Account");
    END;

    PROCEDURE SetAccountsVisibility@25(VAR PmtToleranceVisible@1000 : Boolean;VAR PmtDiscountVisible@1007 : Boolean;VAR SalesInvDiscVisible@1001 : Boolean;VAR SalesLineDiscVisible@1002 : Boolean;VAR PurchInvDiscVisible@1003 : Boolean;VAR PurchLineDiscVisible@1004 : Boolean);
    VAR
      SalesSetup@1005 : Record 311;
      PurchSetup@1006 : Record 312;
      PaymentTerms@1008 : Record 3;
    BEGIN
      GLSetup.GET;
      PmtToleranceVisible := (GLSetup."Payment Tolerance %" > 0) OR (GLSetup."Max. Payment Tolerance Amount" <> 0);

      PmtDiscountVisible := PaymentTerms.UsePaymentDiscount;

      SalesSetup.GET;
      SalesLineDiscVisible :=
        SalesSetup."Discount Posting" IN [SalesSetup."Discount Posting"::"All Discounts",
                                          SalesSetup."Discount Posting"::"Line Discounts"];
      SalesInvDiscVisible :=
        SalesSetup."Discount Posting" IN [SalesSetup."Discount Posting"::"All Discounts",
                                          SalesSetup."Discount Posting"::"Invoice Discounts"];

      PurchSetup.GET;
      PurchLineDiscVisible :=
        PurchSetup."Discount Posting" IN [PurchSetup."Discount Posting"::"All Discounts",
                                          PurchSetup."Discount Posting"::"Line Discounts"];
      PurchInvDiscVisible :=
        PurchSetup."Discount Posting" IN [PurchSetup."Discount Posting"::"All Discounts",
                                          PurchSetup."Discount Posting"::"Invoice Discounts"];
    END;

    [External]
    PROCEDURE SuggestSetupAccounts@26();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      SuggestInvtAccounts(RecRef);
      RecRef.MODIFY;
    END;

    LOCAL PROCEDURE SuggestInvtAccounts@32(VAR RecRef@1000 : RecordRef);
    BEGIN
      IF "COGS Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("COGS Account"));
      IF "COGS Account (Interim)" = '' THEN
        SuggestAccount(RecRef,FIELDNO("COGS Account (Interim)"));
      IF "Inventory Adjmt. Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Inventory Adjmt. Account"));
      IF "Invt. Accrual Acc. (Interim)" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Invt. Accrual Acc. (Interim)"));
      IF "Direct Cost Applied Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Direct Cost Applied Account"));
      IF "Overhead Applied Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Overhead Applied Account"));
      IF "Purchase Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Purchase Variance Account"));
    END;

    LOCAL PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record 63;
      RecFieldRef@1003 : FieldRef;
      GenPostingSetupRecRef@1005 : RecordRef;
      GenPostingSetupFieldRef@1006 : FieldRef;
    BEGIN
      GenPostingSetupRecRef.OPEN(DATABASE::"General Posting Setup");

      GenPostingSetupRecRef.RESET;
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Bus. Posting Group"));
      GenPostingSetupFieldRef.SETRANGE("Gen. Bus. Posting Group");
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Prod. Posting Group"));
      GenPostingSetupFieldRef.SETFILTER('<>%1',"Gen. Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(GenPostingSetupRecRef,AccountFieldNo);

      GenPostingSetupRecRef.RESET;
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Bus. Posting Group"));
      GenPostingSetupFieldRef.SETFILTER('<>%1',"Gen. Bus. Posting Group");
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Prod. Posting Group"));
      GenPostingSetupFieldRef.SETRANGE("Gen. Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(GenPostingSetupRecRef,AccountFieldNo);

      GenPostingSetupRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      IF TempAccountUseBuffer.FINDLAST THEN BEGIN
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      END;
    END;

    LOCAL PROCEDURE CheckNotBlank@5447650();
    BEGIN
      IF ("Source Code" = '') AND ("Reason Code" = '') THEN
        ERROR(Text000,FIELDCAPTION("Source Code"),FIELDCAPTION("Reason Code"));
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447701 Inv. Posting Setup CPL CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckNotBlank;
             END;

    OnDelete=BEGIN
               CheckSetupUsage;
             END;

    OnRename=BEGIN
               CheckNotBlank;
             END;

    CaptionML=[DEU=Lagerbuchung Einrichtung PLUS;
               ENU=Inventory Posting Setup PLUS];
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 2   ;   ;Invt. Posting Group Code;Code20    ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppencode;
                                                              ENU=Invt. Posting Group Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 4   ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 6   ;   ;Inventory Account   ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Inventory Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Inventory Account",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Inventory Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Inventory Account",GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);

                                                              VALIDATE("Inventory Account");
                                                            END;

                                                   CaptionML=[DEU=Lagerkonto;
                                                              ENU=Inventory Account] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 21  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[DEU=Alle Konten in Lookup anzeigen;
                                                              ENU=View All Accounts on Lookup] }
    { 5800;   ;Inventory Account (Interim);Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Inventory Account (Interim)",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Inventory Account (Interim)",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Inventory Account (Interim)")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Inventory Account (Interim)",GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);

                                                              VALIDATE("Inventory Account (Interim)");
                                                            END;

                                                   CaptionML=[DEU=Lagerkonto (Interim);
                                                              ENU=Inventory Account (Interim)] }
    { 5447700;;WIP Change Account  ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                GLAccountCategoryMgt.CheckGLAccount(
                                                                  "WIP Change Account",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);
                                                              END;

                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskonto;
                                                              ENU=WIP Change Account] }
    { 5447701;;Prod. Accrual Acc. (Interim);Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                GLAccountCategoryMgt.CheckGLAccount(
                                                                  "Prod. Accrual Acc. (Interim)",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);
                                                              END;

                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionszugangskonto (Interim);
                                                              ENU=Prod. Accrual Account (Interim)] }
    { 5447702;;Prod. Accrual Account;Code20       ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                GLAccountCategoryMgt.CheckGLAccount(
                                                                  "Prod. Accrual Account",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetInventory);
                                                              END;

                                                   AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionszugangskonto;
                                                              ENU=Prod. Accrual Account] }
    { 99000750;;WIP Account        ;Code20        ;TableRelation="G/L Account";
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Unf.-Arbeit-Konto;
                                                              ENU=WIP Account] }
    { 99000753;;Material Variance Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Materialabweichungskonto;
                                                              ENU=Material Variance Account] }
    { 99000754;;Capacity Variance Account;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=KapazitÑtsabweichungskonto;
                                                              ENU=Capacity Variance Account] }
    { 99000755;;Mfg. Overhead Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[DEU=Prod.-Gemeinkostenabw.-Konto;
                                                              ENU=Mfg. Overhead Variance Account] }
    { 99000756;;Cap. Overhead Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[DEU=Kap.-Gemeinkostenabw.-Konto;
                                                              ENU=Cap. Overhead Variance Account] }
    { 99000757;;Subcontracted Variance Account;Code20;
                                                   TableRelation="G/L Account";
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Fremdarbeitskostenabw.-Konto;
                                                              ENU=Subcontracted Variance Account] }
  }
  KEYS
  {
    {    ;Location Code,Invt. Posting Group Code,Source Code,Reason Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      YouCannotDeleteErr@1004 : TextConst '@@@="%1 = Location Code; %2 = Posting Group";DEU=Sie kînnen %1 %2 nicht lîschen.;ENU=You cannot delete %1 %2.';
      Text000@5447650 : TextConst 'DEU=%1 und %2 dÅrfen zusammen nicht leer sein.;ENU=%1 and %2 may be together not empty.';

    LOCAL PROCEDURE CheckSetupUsage@1();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETRANGE("Location Code","Location Code");
      ValueEntry.SETRANGE("Inventory Posting Group","Invt. Posting Group Code");
      IF NOT ValueEntry.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,"Location Code","Invt. Posting Group Code");
    END;

    [External]
    PROCEDURE GetCapacityVarianceAccount@7() : Code[20];
    BEGIN
      TESTFIELD("Capacity Variance Account");
      EXIT("Capacity Variance Account");
    END;

    [External]
    PROCEDURE GetCapOverheadVarianceAccount@9() : Code[20];
    BEGIN
      TESTFIELD("Cap. Overhead Variance Account");
      EXIT("Cap. Overhead Variance Account");
    END;

    [External]
    PROCEDURE GetInventoryAccount@3() : Code[20];
    BEGIN
      TESTFIELD("Inventory Account");
      EXIT("Inventory Account");
    END;

    [External]
    PROCEDURE GetInventoryAccountInterim@4() : Code[20];
    BEGIN
      TESTFIELD("Inventory Account (Interim)");
      EXIT("Inventory Account (Interim)");
    END;

    [External]
    PROCEDURE GetMaterialVarianceAccount@6() : Code[20];
    BEGIN
      TESTFIELD("Material Variance Account");
      EXIT("Material Variance Account");
    END;

    [External]
    PROCEDURE GetMfgOverheadVarianceAccount@8() : Code[20];
    BEGIN
      TESTFIELD("Mfg. Overhead Variance Account");
      EXIT("Mfg. Overhead Variance Account");
    END;

    [External]
    PROCEDURE GetSubcontractedVarianceAccount@10() : Code[20];
    BEGIN
      TESTFIELD("Subcontracted Variance Account");
      EXIT("Subcontracted Variance Account");
    END;

    [External]
    PROCEDURE GetWIPAccount@5() : Code[20];
    BEGIN
      IF "WIP Account" = '' THEN
      TESTFIELD("WIP Account");
      EXIT("WIP Account");
    END;

    [External]
    PROCEDURE SuggestSetupAccounts@2();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      IF "Inventory Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Inventory Account"));
      IF "Inventory Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Inventory Account (Interim)"));
      IF "WIP Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("WIP Account"));
      IF "Material Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Material Variance Account"));
      IF "Capacity Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Capacity Variance Account"));
      IF "Mfg. Overhead Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Mfg. Overhead Variance Account"));
      IF "Cap. Overhead Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Cap. Overhead Variance Account"));
      IF "Subcontracted Variance Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Subcontracted Variance Account"));
      OnAfterSuggestSetupAccount(Rec,RecRef);
      RecRef.MODIFY;
    END;

    [External]
    PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record 63;
      RecFieldRef@1003 : FieldRef;
      InvtPostingSetupRecRef@1005 : RecordRef;
      InvtPostingSetupFieldRef@1004 : FieldRef;
    BEGIN
      InvtPostingSetupRecRef.OPEN(DATABASE::"Inventory Posting Setup");

      InvtPostingSetupRecRef.RESET;
      InvtPostingSetupFieldRef := InvtPostingSetupRecRef.FIELD(FIELDNO("Invt. Posting Group Code"));
      InvtPostingSetupFieldRef.SETFILTER('<>%1',"Invt. Posting Group Code");
      InvtPostingSetupFieldRef := InvtPostingSetupRecRef.FIELD(FIELDNO("Location Code"));
      InvtPostingSetupFieldRef.SETRANGE("Location Code");
      TempAccountUseBuffer.UpdateBuffer(InvtPostingSetupRecRef,AccountFieldNo);

      InvtPostingSetupRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      IF TempAccountUseBuffer.FINDLAST THEN BEGIN
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSuggestSetupAccount@11(VAR InventoryPostingSetupCPL@1000 : Record 5447701;RecRef@1001 : RecordRef);
    BEGIN
    END;

    LOCAL PROCEDURE CheckNotBlank@5447650();
    BEGIN
      IF ("Source Code" = '') AND ("Reason Code" = '') THEN
        ERROR(Text000,FIELDCAPTION("Source Code"),FIELDCAPTION("Reason Code"));
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447702 Inventory Setup CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;DataClassification=ToBeClassified }
    { 2   ;   ;Prod. Cost Posting to G/L;Boolean  ;DataClassification=ToBeClassified }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447703 Production Order CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Status              ;Option        ;CaptionML=[DEU=Status;
                                                              ENU=Status];
                                                   OptionCaptionML=[DEU=Simuliert,Geplant,Fest geplant,Freigegeben,Beendet;
                                                                    ENU=Simulated,Planned,Firm Planned,Released,Finished];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished }
    { 2   ;   ;No.                 ;Code20        ;TableRelation="Production Order".No. WHERE (Status=FIELD(Status));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 3   ;   ;Production Cost Posting to G/L;Boolean;
                                                   CaptionML=[DEU=Produktionskosten buchen;
                                                              ENU=Production Cost Posting to G/L] }
  }
  KEYS
  {
    {    ;Status,No.                              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447704 Value Entry CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;DataClassification=ToBeClassified }
    { 2   ;   ;Production Cost     ;Boolean       ;DataClassification=ToBeClassified }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447705 Inventory Posting Setup CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;DataClassification=ToBeClassified }
    { 2   ;   ;Invt. Posting Group Code;Code20    ;DataClassification=ToBeClassified }
    { 5447700;;WIP Change Account  ;Code20        ;DataClassification=ToBeClassified }
    { 5447701;;Prod. Accr. Acc. (Interim);Code20  ;DataClassification=ToBeClassified }
    { 5447702;;Prod. Accrual Account;Code20       ;DataClassification=ToBeClassified }
  }
  KEYS
  {
    {    ;Location Code,Invt. Posting Group Code  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447706 General Posting Setup CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Gen. Bus. Posting Group;Code20     ;DataClassification=ToBeClassified }
    { 2   ;   ;Gen. Prod. Posting Group;Code20    ;DataClassification=ToBeClassified }
    { 5447700;;Direct Prod. Cost Account;Code20   ;DataClassification=ToBeClassified }
    { 5447701;;Overhead Prod. Cost Acc.;Code20    ;DataClassification=ToBeClassified }
  }
  KEYS
  {
    {    ;Gen. Bus. Posting Group,Gen. Prod. Posting Group;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447710 Inv. Adjmt. Entry (Order) CIN
{
  OBJECT-PROPERTIES
  {
    Date=10.09.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Order Type          ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragsart;
                                                              ENU=Order Type];
                                                   OptionCaptionML=[DEU=" ,Fertigung,Umlagerung,Service,Montage";
                                                                    ENU=" ,Production,Transfer,Service,Assembly"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly] }
    { 2   ;   ;Order No.           ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragsnr.;
                                                              ENU=Order No.] }
    { 3   ;   ;Order Line No.      ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Auftragszeilennr.;
                                                              ENU=Order Line No.] }
    { 5447700;;Production Cost Posting to G/L;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Produktionskosten buchen;
                                                              ENU=Production Cost Posting to G/L] }
  }
  KEYS
  {
    {    ;Order Type,Order No.,Order Line No.     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447800 Invt G/L Recon. PLUS Entry CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Posten;
               ENU=Inventory - G/L Reconcilation PLUS Entry];
    LookupPageID=Page5447800;
    DrillDownPageID=Page5447800;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 4   ;   ;Item Ledger Entry Type;Option      ;CaptionML=[DEU=Artikelpostenart;
                                                              ENU=Item Ledger Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung, ,Verbrauch fÅr Montage,Montage-Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 5   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[DEU=Herkunftsnr.;
                                                              ENU=Source No.] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 9   ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 10  ;   ;Source Posting Group;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF (Source Type=CONST(Vendor)) "Vendor Posting Group"
                                                                 ELSE IF (Source Type=CONST(Item)) "Inventory Posting Group";
                                                   CaptionML=[DEU=Herkunftsbuchungsgruppe;
                                                              ENU=Source Posting Group] }
    { 11  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 12  ;   ;Valued Quantity     ;Decimal       ;CaptionML=[DEU=Bewertete Menge;
                                                              ENU=Valued Quantity];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Item Ledger Entry Quantity;Decimal ;CaptionML=[DEU=Artikelpostenmenge;
                                                              ENU=Item Ledger Entry Quantity];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[DEU=Fakturierte Menge;
                                                              ENU=Invoiced Quantity];
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Cost per Unit       ;Decimal       ;CaptionML=[DEU=Lagerwert pro Einheit;
                                                              ENU=Cost per Unit];
                                                   AutoFormatType=2 }
    { 17  ;   ;Sales Amount (Actual);Decimal      ;CaptionML=[DEU=Verkaufsbetrag (tatsÑchl.);
                                                              ENU=Sales Amount (Actual)];
                                                   AutoFormatType=1 }
    { 22  ;   ;Salespers./Purch. Code;Code20      ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[DEU=Verk.-/EinkÑufercode;
                                                              ENU=Salespers./Purch. Code] }
    { 23  ;   ;Discount Amount     ;Decimal       ;CaptionML=[DEU=Rabattbetrag;
                                                              ENU=Discount Amount];
                                                   AutoFormatType=1 }
    { 24  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID] }
    { 25  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 28  ;   ;Applies-to Entry    ;Integer       ;CaptionML=[DEU=Ausgleich mit Lfd. Nr.;
                                                              ENU=Applies-to Entry] }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 41  ;   ;Source Type         ;Option        ;CaptionML=[DEU=Herkunftsart;
                                                              ENU=Source Type];
                                                   OptionCaptionML=[DEU=" ,Debitor,Kreditor,Artikel";
                                                                    ENU=" ,Customer,Vendor,Item"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 43  ;   ;Cost Amount (Actual);Decimal       ;CaptionML=[DEU=Einstandsbetrag (tatsÑchl.);
                                                              ENU=Cost Amount (Actual)];
                                                   AutoFormatType=1 }
    { 45  ;   ;Cost Posted to G/L  ;Decimal       ;CaptionML=[DEU=Gebuchte Lagerregulierung;
                                                              ENU=Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 46  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   AccessByPermission=TableData 223=R;
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 47  ;   ;Drop Shipment       ;Boolean       ;CaptionML=[DEU=Direktlieferung;
                                                              ENU=Drop Shipment] }
    { 48  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=No;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 58  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date] }
    { 61  ;   ;External Document No.;Code35       ;CaptionML=[DEU=Externe Belegnummer;
                                                              ENU=External Document No.] }
    { 68  ;   ;Cost Amount (Actual) (ACY);Decimal ;CaptionML=[DEU=Einst.-Betrag (tatsÑchl.) (BW);
                                                              ENU=Cost Amount (Actual) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 70  ;   ;Cost Posted to G/L (ACY);Decimal   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Gebuchte Lagerregulierung (BW);
                                                              ENU=Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 72  ;   ;Cost per Unit (ACY) ;Decimal       ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Lagerwert pro Einheit (BW);
                                                              ENU=Cost per Unit (ACY)];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Verkaufslieferung,Verkaufsrechnung,VerkaufsrÅcksendung,Verkaufsgutschrift,Einkaufslieferung,Einkaufsrechnung,RÅcklieferung,Einkaufsgutschrift,Umlagerungsausgang,Umlagerungseingang,Servicelieferung,Servicerechnung,Servicegutschrift,Gebuchte Montage";
                                                                    ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly] }
    { 80  ;   ;Document Line No.   ;Integer       ;CaptionML=[DEU=Belegzeilennr.;
                                                              ENU=Document Line No.] }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=[DEU=Auftragsart;
                                                              ENU=Order Type];
                                                   OptionCaptionML=[DEU=" ,Fertigung,Umlagerung,Service,Montage";
                                                                    ENU=" ,Production,Transfer,Service,Assembly"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly];
                                                   Editable=No }
    { 91  ;   ;Order No.           ;Code20        ;CaptionML=[DEU=Auftragsnr.;
                                                              ENU=Order No.];
                                                   Editable=No }
    { 92  ;   ;Order Line No.      ;Integer       ;CaptionML=[DEU=Auftragszeilennr.;
                                                              ENU=Order Line No.];
                                                   Editable=No }
    { 98  ;   ;Expected Cost       ;Boolean       ;CaptionML=[DEU=Soll-Kosten;
                                                              ENU=Expected Cost] }
    { 99  ;   ;Item Charge No.     ;Code20        ;TableRelation="Item Charge";
                                                   CaptionML=[DEU=Artikel Zu-/Abschlagsnr.;
                                                              ENU=Item Charge No.] }
    { 100 ;   ;Valued By Average Cost;Boolean     ;CaptionML=[DEU=Bew. z. Einst.-Pr.(durchschn.);
                                                              ENU=Valued By Average Cost] }
    { 102 ;   ;Partial Revaluation ;Boolean       ;CaptionML=[DEU=Teilneubewertung;
                                                              ENU=Partial Revaluation] }
    { 103 ;   ;Inventoriable       ;Boolean       ;CaptionML=[DEU=Einfluss auf Lagerwert;
                                                              ENU=Inventoriable] }
    { 104 ;   ;Valuation Date      ;Date          ;CaptionML=[DEU=Bewertungsdatum;
                                                              ENU=Valuation Date] }
    { 105 ;   ;Entry Type          ;Option        ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Direkte Kosten,Neubewertung,Rundung,Indirekte Kosten,Abweichung;
                                                                    ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance;
                                                   Editable=No }
    { 106 ;   ;Variance Type       ;Option        ;CaptionML=[DEU=Abweichungsart;
                                                              ENU=Variance Type];
                                                   OptionCaptionML=[DEU=" ,Einkauf,Material,KapazitÑt,KapazitÑtsgemeinkosten,Produktionsgemeinkosten,Fremdarbeitskosten";
                                                                    ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted"];
                                                   OptionString=[ ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted];
                                                   Editable=No }
    { 148 ;   ;Purchase Amount (Actual);Decimal   ;CaptionML=[DEU=Einkaufsbetrag (tatsÑchl.);
                                                              ENU=Purchase Amount (Actual)];
                                                   AutoFormatType=1 }
    { 149 ;   ;Purchase Amount (Expected);Decimal ;AccessByPermission=TableData 120=R;
                                                   CaptionML=[DEU=Einkaufsbetrag (erwartet);
                                                              ENU=Purchase Amount (Expected)];
                                                   AutoFormatType=1 }
    { 150 ;   ;Sales Amount (Expected);Decimal    ;AccessByPermission=TableData 110=R;
                                                   CaptionML=[DEU=Verkaufsbetrag (erwartet);
                                                              ENU=Sales Amount (Expected)];
                                                   AutoFormatType=1 }
    { 151 ;   ;Cost Amount (Expected);Decimal     ;CaptionML=[DEU=Einstandsbetrag (erwartet);
                                                              ENU=Cost Amount (Expected)];
                                                   AutoFormatType=1 }
    { 152 ;   ;Cost Amount (Non-Invtbl.);Decimal  ;AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-Betr. (lagerwertunabh.);
                                                              ENU=Cost Amount (Non-Invtbl.)];
                                                   AutoFormatType=1 }
    { 156 ;   ;Cost Amount (Expected) (ACY);Decimal;
                                                   CaptionML=[DEU=Einstandsbetrag (erw.) (BW);
                                                              ENU=Cost Amount (Expected) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 157 ;   ;Cost Amount (Non-Invtbl.)(ACY);Decimal;
                                                   AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-B. (lagerw.-unabh.)(BW);
                                                              ENU=Cost Amount (Non-Invtbl.)(ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 158 ;   ;Expected Cost Posted to G/L;Decimal;CaptionML=[DEU=Auf Sachkonto geb. Soll-Kosten;
                                                              ENU=Expected Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 159 ;   ;Exp. Cost Posted to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Auf Sachkto. geb. Soll-K. (BW);
                                                              ENU=Exp. Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 1000;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[DEU=Projektnr.;
                                                              ENU=Job No.] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[DEU=Projektaufgabennr.;
                                                              ENU=Job Task No.] }
    { 1002;   ;Job Ledger Entry No.;Integer       ;TableRelation="Job Ledger Entry"."Entry No.";
                                                   CaptionML=[DEU=Projektpostennr.;
                                                              ENU=Job Ledger Entry No.];
                                                   BlankZero=Yes }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5818;   ;Adjustment          ;Boolean       ;CaptionML=[DEU=Regulierung;
                                                              ENU=Adjustment];
                                                   Editable=No }
    { 5819;   ;Average Cost Exception;Boolean     ;CaptionML=[DEU=Durchschnittskostenausnahme;
                                                              ENU=Average Cost Exception] }
    { 5831;   ;Capacity Ledger Entry No.;Integer  ;TableRelation="Capacity Ledger Entry";
                                                   CaptionML=[DEU=KapazitÑtsposten Lfd. Nr.;
                                                              ENU=Capacity Ledger Entry No.] }
    { 5832;   ;Type                ;Option        ;CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=Arbeitsplatzgruppe,Arbeitsplatz, ,Ressource;
                                                                    ENU=Work Center,Machine Center, ,Resource];
                                                   OptionString=Work Center,Machine Center, ,Resource }
    { 5834;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Machine Center)) "Machine Center"
                                                                 ELSE IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 6602;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[DEU=Reklamationsgrundcode;
                                                              ENU=Return Reason Code] }
    { 5447700;;Production Cost     ;Boolean       ;AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionskosten;
                                                              ENU=Production Cost] }
    { 5447701;;Other Overhead Cost ;Boolean       ;AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Andere Gemeinkosten;
                                                              ENU=Other Overhead Cost] }
    { 5447743;;Cost Amount (Other Ovhd);Decimal   ;AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Einstandsbetrag (Andere Gemeinkosten);
                                                              ENU=Cost Amount (Other Overhead)];
                                                   AutoFormatType=1 }
    { 5447758;;Other Ovhd Cost Posted to G/L;Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Auf Sachkonto geb. Andere Gemeinkosten;
                                                              ENU=Other Overhead Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 5447759;;Oth O Cost Posted to G/L (ACY);Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Auf Sachkto. geb. Andere Gem.-K. (BW);
                                                              ENU=Other Ovhd. Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 5447768;;Cost Amount (Other Ovhd) (ACY);Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Einst.-Betrag (Andere Gemeinkosten) (BW);
                                                              ENU=Cost Amount (Other Overheads) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5448000;;Cost Policy Type    ;Option        ;CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
    { 9000000;;Exp. Cost Not Posted to G/L;Decimal;CaptionML=[DEU=Nicht auf Sachkonto geb. Soll-Kosten;
                                                              ENU=Expected Cost Not Posted to G/L];
                                                   AutoFormatType=1 }
    { 9000001;;Cost Not Posted to G/L;Decimal     ;CaptionML=[DEU=Nicht gebuchte Lagerregulierung;
                                                              ENU=Cost Not Posted to G/L];
                                                   AutoFormatType=1 }
    { 9000002;;Open Exp. Cost (Posting Date);Boolean;
                                                   CaptionML=[DEU=Offene Soll-Kosten (Stichtag);
                                                              ENU=Open Expected Cost (Date)] }
    { 9000003;;Qty. Shipped Not Invoiced;Decimal  ;CaptionML=[DEU=Lief. nicht fakt. Menge;
                                                              ENU=Qty. Shipped Not Invoiced];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 9000040;;Warning             ;Boolean       ;CaptionML=[DEU=Warnung;
                                                              ENU=Warning] }
    { 9000047;;Posting  lower Value Date-Warn;Boolean;
                                                   CaptionML=[DEU=Buchungsdatum kleiner als Bewertungsdatum-Warnung;
                                                              ENU=Posting Date lower Value Date-Warning] }
    { 9000050;;Gen. Prod. Posting Group-Warn;Boolean;
                                                   CaptionML=[DEU=Produktbuchungsgruppe - Warnung;
                                                              ENU=Gen. Product Posting Group - Warning] }
    { 9000051;;Invt. Posting Group-Warning;Boolean;CaptionML=[DEU=Lagerbuchungsgruppe - Warnung;
                                                              ENU=Inventory Posting Group - Warning] }
    { 9000061;;Cost is Posted to G/L Warning;Boolean;
                                                   CaptionML=[DEU=Einstandspreis ist auf Sachkonten gebucht - Warnung;
                                                              ENU=Cost is Posted to G/L Warning] }
    { 9000062;;Expected Cost Posting Warning;Boolean;
                                                   CaptionML=[DEU=Soll-Kosten buchen - Warnung;
                                                              ENU=Expected Cost Posting Warning] }
    { 9000063;;Compression Warning ;Boolean       ;CaptionML=[DEU=Komprimierung - Warnung;
                                                              ENU=Compression Warning] }
    { 9000064;;Posting Group Warning;Boolean      ;CaptionML=[DEU=Buchungsgruppe - Warnung;
                                                              ENU=Posting Group Warning] }
    { 9000065;;Direct Postings Warning;Boolean    ;CaptionML=[DEU=Direktbuchungen - Warnung;
                                                              ENU=Direct Postings Warning] }
    { 9000066;;Posting Date Warning;Boolean       ;CaptionML=[DEU=Buchungsdatum - Warnung;
                                                              ENU=Posting Date Warning] }
    { 9000067;;Closing Period Overlap Warning;Boolean;
                                                   CaptionML=[DEU=PeriodenabschlussÅberschneidung - Warnung;
                                                              ENU=Closing Period Overlap Warning] }
    { 9000069;;Deleted G/L Accounts Warning;Boolean;
                                                   CaptionML=[DEU=Gelîschte Sachkonten - Warnung;
                                                              ENU=Deleted G/L Accounts Warning] }
    { 9000070;;Difference - Warning;Boolean       ;CaptionML=[DEU=Werte vorhanden - Warnung;
                                                              ENU=Difference - Warning] }
    { 9000099;;Invt G/L Recon. Code;Code20        ;TableRelation="Invt G/L Recon. Code CIN";
                                                   CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code;
                                                              ENU=Inventory - G/L Reconciliation PLUS Code] }
    { 9100003;;Description (Item)  ;Text100       ;CaptionML=[DEU=Beschreibung (Artikel);
                                                              ENU=Description (Item)] }
    { 9100011;;Inventory Posting Group (Item);Code20;
                                                   TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe (Artikel);
                                                              ENU=Inventory Posting Group (Item)] }
    { 9100091;;Gen. Prod. Posting Group (MD);Code20;
                                                   TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe (Stammdaten);
                                                              ENU=Gen. Product Posting Group (Master Data)] }
    { 9106500;;Item Tracking Code (Item);Code10   ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode (Artikel);
                                                              ENU=Item Tracking Code (Item)] }
    { 9200006;;Document No (ILE)   ;Code20        ;CaptionML=[DEU=Belegnr. (Artikelposten);
                                                              ENU=Document No (Item Ledger Entry)] }
    { 9200010;;Item Tracking (ILE) ;Option        ;CaptionML=[DEU=Artikelverfolgung (Artikelposten);
                                                              ENU=Item Tracking (Item Ledger Entry)];
                                                   OptionCaptionML=[DEU=Ohne,Chargennr.,Chargennr. und Seriennr.,Seriennr.;
                                                                    ENU=None,Lot No.,Lot and Serial No.,Serial No.];
                                                   OptionString=None,Lot No.,Lot and Serial No.,Serial No.;
                                                   Editable=No }
    { 9205704;;Item Category Code (ILE);Code20    ;TableRelation="Item Category";
                                                   CaptionML=[DEU=Artikelkategoriencode (Artikelposten);
                                                              ENU=Item Category Code (Item Ledger Entry)] }
    { 9206500;;Serial No. (ILE)    ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",0,"Serial No. (ILE)");
                                                            END;

                                                   CaptionML=[DEU=Seriennr. (Artikelposten);
                                                              ENU=Serial No. (Item Ledger Entry)] }
    { 9206501;;Lot No. (ILE)       ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",1,"Lot No. (ILE)");
                                                            END;

                                                   CaptionML=[DEU=Chargennr. (Artikelposten);
                                                              ENU=Lot No. (Item Ledger Entry)] }
    { 9900000;;G/L Entry No.       ;Integer       ;CaptionML=[DEU=Sachposten Lfd. Nr.;
                                                              ENU=G/L Entry No.] }
    { 9900003;;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Sachkontonr.;
                                                              ENU=G/L Account No.] }
    { 9900007;;G/L Account Name    ;Text100       ;CaptionML=[DEU=Sachkontoname;
                                                              ENU=G/L Account Name] }
    { 9900017;;G/L Amount          ;Decimal       ;CaptionML=[DEU=Sachkonto Betrag;
                                                              ENU=G/L Acc. Amount];
                                                   AutoFormatType=1 }
    { 9900029;;System-Created Entry;Boolean       ;CaptionML=[DEU=Systembuchung;
                                                              ENU=System-Created Entry] }
    { 9999999;;G/L                 ;Boolean       ;CaptionML=[DEU=Fibu;
                                                              ENU=G/L] }
    { 10000008;;Inventory          ;Decimal       ;CaptionML=[DEU=Lagerbestand;
                                                              ENU=Inventory];
                                                   BlankZero=Yes }
    { 10000009;;Inventory (Interim);Decimal       ;CaptionML=[DEU=Lager (Interim);
                                                              ENU=Inventory (Interim)];
                                                   BlankZero=Yes }
    { 10000010;;WIP Inventory      ;Decimal       ;CaptionML=[DEU=Aktiviert Lager;
                                                              ENU=WIP Inventory];
                                                   BlankZero=Yes }
    { 10000011;;Direct Cost Applied Actual;Decimal;CaptionML=[DEU=Ausgegl. direkte Ist-Kosten;
                                                              ENU=Direct Cost Applied Actual];
                                                   BlankZero=Yes }
    { 10000012;;Overhead Applied Actual;Decimal   ;CaptionML=[DEU=Ausgeglichene Ist-Gemeinkosten;
                                                              ENU=Overhead Applied Actual];
                                                   BlankZero=Yes }
    { 10000013;;Purchase Variance  ;Decimal       ;CaptionML=[DEU=Einkaufsabweichung;
                                                              ENU=Purchase Variance];
                                                   BlankZero=Yes }
    { 10000014;;Inventory Adjmt.   ;Decimal       ;CaptionML=[DEU=Lagerkorrektur;
                                                              ENU=Inventory Adjmt.];
                                                   BlankZero=Yes }
    { 10000016;;Invt. Accrual (Interim);Decimal   ;CaptionML=[DEU=Lagerzugang (Interim);
                                                              ENU=Invt. Accrual (Interim)];
                                                   BlankZero=Yes }
    { 10000017;;COGS               ;Decimal       ;CaptionML=[DEU=LAGERVERBR;
                                                              ENU=COGS];
                                                   BlankZero=Yes }
    { 10000018;;COGS (Interim)     ;Decimal       ;CaptionML=[DEU=LAGERVERBR (Interim);
                                                              ENU=COGS (Interim)];
                                                   BlankZero=Yes }
    { 10000019;;Material Variance  ;Decimal       ;CaptionML=[DEU=Materialabweichung;
                                                              ENU=Material Variance];
                                                   BlankZero=Yes }
    { 10000020;;Capacity Variance  ;Decimal       ;CaptionML=[DEU=Abweichung KapazitÑt;
                                                              ENU=Capacity Variance];
                                                   BlankZero=Yes }
    { 10000021;;Subcontracted Variance;Decimal    ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit;
                                                              ENU=Subcontracted Variance];
                                                   BlankZero=Yes }
    { 10000022;;Capacity Overhead Variance;Decimal;CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten;
                                                              ENU=Capacity Overhead Variance];
                                                   BlankZero=Yes }
    { 10000023;;Mfg. Overhead Variance;Decimal    ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten;
                                                              ENU=Mfg. Overhead Variance];
                                                   BlankZero=Yes }
    { 10000028;;Total              ;Decimal       ;CaptionML=[DEU=Gesamt;
                                                              ENU=Total];
                                                   BlankZero=Yes }
    { 10000029;;G/L Total          ;Decimal       ;CaptionML=[DEU=Fibu gesamt;
                                                              ENU=G/L Total];
                                                   BlankZero=Yes }
    { 10000030;;Difference         ;Decimal       ;CaptionML=[DEU=Abweichung;
                                                              ENU=Difference];
                                                   BlankZero=Yes }
    { 10000032;;Direct Cost Applied WIP;Decimal   ;CaptionML=[DEU=Ausgegl. direkte Kosten WIP;
                                                              ENU=Direct Cost Applied WIP];
                                                   BlankZero=Yes }
    { 10000033;;Overhead Applied WIP;Decimal      ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Gemeinkosten verrechnet WIP;
                                                              ENU=Overhead Applied WIP];
                                                   BlankZero=Yes }
    { 10000035;;Inventory To WIP   ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Lager auf WIP;
                                                              ENU=Inventory To WIP];
                                                   BlankZero=Yes }
    { 10000036;;WIP To Interim     ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=WIP auf Interim;
                                                              ENU=WIP To Interim];
                                                   BlankZero=Yes }
    { 10000037;;Direct Cost Applied;Decimal       ;CaptionML=[DEU=Direkte Kosten verrechnet;
                                                              ENU=Direct Cost Applied];
                                                   BlankZero=Yes }
    { 10000038;;Overhead Applied   ;Decimal       ;CaptionML=[DEU=Gemeinkosten verrechnet;
                                                              ENU=Overhead Applied];
                                                   BlankZero=Yes }
    { 10000099;;WIP To Inventory   ;Decimal       ;CaptionML=[DEU=WIP auf Lager;
                                                              ENU=WIP To Inventory];
                                                   BlankZero=Yes }
    { 10000100;;WIP Change         ;Decimal       ;CaptionML=[DEU=Unf.-Arbeit-VerÑnderung;
                                                              ENU=WIP Change];
                                                   BlankZero=Yes }
    { 10000101;;Prod. Accrual (Interim);Decimal   ;CaptionML=[DEU=Produktionszugang (Interim);
                                                              ENU=Prod. Accrual (Interim)];
                                                   BlankZero=Yes }
    { 10000102;;Prod. Accrual      ;Decimal       ;CaptionML=[DEU=Produktionszugang;
                                                              ENU=Prod. Accrual];
                                                   BlankZero=Yes }
    { 10000200;;Direct Prod. Cost  ;Decimal       ;CaptionML=[DEU=Direkte Produktionskosten;
                                                              ENU=Direct Prod. Cost];
                                                   BlankZero=Yes }
    { 10000201;;Overhead Prod. Cost;Decimal       ;CaptionML=[DEU=Indirekte Produktionskosten;
                                                              ENU=Overhead Prod. Cost];
                                                   BlankZero=Yes }
    { 20000008;;Inventory G/L      ;Decimal       ;CaptionML=[DEU=Lagerbestand Fibu;
                                                              ENU=Inventory G/L];
                                                   BlankZero=Yes }
    { 20000009;;Inventory (Interim) G/L;Decimal   ;CaptionML=[DEU=Lager (Interim) Fibu;
                                                              ENU=Inventory (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000010;;WIP Inventory G/L  ;Decimal       ;CaptionML=[DEU=Aktiviert Lager Fibu;
                                                              ENU=WIP Inventory G/L];
                                                   BlankZero=Yes }
    { 20000011;No;Direct Cost Applied Actual G/L;Decimal;
                                                   CaptionML=[DEU=Ausgegl. direkte Ist-Kosten Fibu;
                                                              ENU=Direct Cost Applied Actual G/L];
                                                   Description=Not filled }
    { 20000012;No;Overhead Applied Actual G/L;Decimal;
                                                   CaptionML=[DEU=Ausgeglichene Ist-Gemeinkosten Fibu;
                                                              ENU=Overhead Applied Actual G/L];
                                                   Description=Not filled }
    { 20000013;;Purchase Variance G/L;Decimal     ;CaptionML=[DEU=Einkaufsabweichung Fibu;
                                                              ENU=Purchase Variance G/L];
                                                   BlankZero=Yes }
    { 20000014;;Inventory Adjmt. G/L;Decimal      ;CaptionML=[DEU=Lagerkorrektur Fibu;
                                                              ENU=Inventory Adjmt. G/L];
                                                   BlankZero=Yes }
    { 20000016;;Invt. Accrual (Interim) G/L;Decimal;
                                                   CaptionML=[DEU=Lagerzugang (Interim) Fibu;
                                                              ENU=Invt. Accrual (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000017;;COGS G/L           ;Decimal       ;CaptionML=[DEU=LAGERVERBR Fibu;
                                                              ENU=COGS G/L];
                                                   BlankZero=Yes }
    { 20000018;;COGS (Interim) G/L ;Decimal       ;CaptionML=[DEU=LAGERVERBR (Interim) Fibu;
                                                              ENU=COGS (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000019;;Material Variance G/L;Decimal     ;CaptionML=[DEU=Materialabweichung Fibu;
                                                              ENU=Material Variance G/L];
                                                   BlankZero=Yes }
    { 20000020;;Capacity Variance G/L;Decimal     ;CaptionML=[DEU=Abweichung KapazitÑt Fibu;
                                                              ENU=Capacity Variance G/L];
                                                   BlankZero=Yes }
    { 20000021;;Subcontracted Variance G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Fibu;
                                                              ENU=Subcontracted Variance G/L];
                                                   BlankZero=Yes }
    { 20000022;;Capacity Overhead Variance G/L;Decimal;
                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Fibu;
                                                              ENU=Capacity Overhead Variance G/L];
                                                   BlankZero=Yes }
    { 20000023;;Mfg. Overhead Variance G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Fibu;
                                                              ENU=Mfg. Overhead Variance G/L];
                                                   BlankZero=Yes }
    { 20000032;No;Direct Cost Applied WIP G/L;Decimal;
                                                   CaptionML=[DEU=Ausgegl. direkte Kosten WIP Fibu;
                                                              ENU=Direct Cost Applied WIP G/L];
                                                   Description=Not filled }
    { 20000033;No;Overhead Applied WIP G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Gemeinkosten verrechnet WIP Fibu;
                                                              ENU=Overhead Applied WIP G/L];
                                                   Description=Not filled }
    { 20000035;;Inventory To WIP G/L;Decimal      ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Lager auf WIP Fibu;
                                                              ENU=Inventory To WIP G/L];
                                                   BlankZero=Yes }
    { 20000036;;WIP To Interim G/L ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=WIP auf Interim Fibu;
                                                              ENU=WIP To Interim G/L];
                                                   BlankZero=Yes }
    { 20000037;;Direct Cost Applied G/L;Decimal   ;CaptionML=[DEU=Direkte Kosten verrechnet Fibu;
                                                              ENU=Direct Cost Applied G/L];
                                                   BlankZero=Yes }
    { 20000038;;Overhead Applied G/L;Decimal      ;CaptionML=[DEU=Gemeinkosten verrechnet Fibu;
                                                              ENU=Overhead Applied G/L];
                                                   BlankZero=Yes }
    { 20000099;;WIP To Inventory G/L;Decimal      ;CaptionML=[DEU=WIP auf Lager Fibu;
                                                              ENU=WIP To Inventory G/L];
                                                   BlankZero=Yes }
    { 20000100;;WIP Change G/L     ;Decimal       ;CaptionML=[DEU=Unf.-Arbeit-VerÑnderung Fibu;
                                                              ENU=WIP Change G/L];
                                                   BlankZero=Yes }
    { 20000101;;Prod. Accrual (Interim) G/L;Decimal;
                                                   CaptionML=[DEU=Produktionszugang (Interim) Fibu;
                                                              ENU=Prod. Accrual (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000102;;Prod. Accrual G/L  ;Decimal       ;CaptionML=[DEU=Produktionszugang Fibu;
                                                              ENU=Prod. Accrual G/L];
                                                   BlankZero=Yes }
    { 20000200;;Direct Prod. Cost G/L;Decimal     ;CaptionML=[DEU=Direkte Produktionskosten Fibu;
                                                              ENU=Direct Prod. Cost G/L];
                                                   BlankZero=Yes }
    { 20000201;;Overhead Prod. Cost G/L;Decimal   ;CaptionML=[DEU=Indirekte Produktionskosten Fibu;
                                                              ENU=Overhead Prod. Cost G/L];
                                                   BlankZero=Yes }
    { 30000008;;Inventory Acc No.  ;Code20        ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand Kontonr.;
                                                              ENU=Inventory Account No.] }
    { 30000009;;Inventory (Interim) Acc No.;Code20;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lager (Interim) Kontonr.;
                                                              ENU=Inventory (Interim) Account No.] }
    { 30000010;;WIP Inventory Acc No.;Code20      ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Aktiviert Lager Kontonr.;
                                                              ENU=WIP Inventory Accoutn No.] }
    { 30000013;;Purchase Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Einkaufsabweichung Kontonr.;
                                                              ENU=Purchase Variance Account No.] }
    { 30000014;;Inventory Adjmt. Acc No.;Code20   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerkorrektur Kontonr.;
                                                              ENU=Inventory Adjmt. Account No.] }
    { 30000016;;Invt. Accrual (Interim) Acc No;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerzugang (Interim) Kontonr.;
                                                              ENU=Invt. Accrual (Interim) Account Name] }
    { 30000017;;COGS Acc No.       ;Code20        ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR Kontonr.;
                                                              ENU=COGS Account No.] }
    { 30000018;;COGS (Interim) Acc No.;Code20     ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR (Interim) Kontonr.;
                                                              ENU=COGS (Interim) Account Name] }
    { 30000019;;Material Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Materialabweichung Kontonr.;
                                                              ENU=Material Variance Account Name] }
    { 30000020;;Capacity Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abweichung KapazitÑt Kontonr.;
                                                              ENU=Capacity Variance Account Name] }
    { 30000021;;Subcontracted Variance Acc No.;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Kontonr.;
                                                              ENU=Subcontracted Variance Account Name] }
    { 30000022;;Capacity Overhead Variance Acc;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Kontonr.;
                                                              ENU=Capacity Overhead Variance Account Name] }
    { 30000023;;Mfg. Overhead Variance Acc No.;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Kontonr.;
                                                              ENU=Mfg. Overhead Variance Account Name] }
    { 30000037;;Direct Cost Applied Acc No.;Code20;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Kosten verrechnet Kontonr.;
                                                              ENU=Direct Cost Applied Account No.] }
    { 30000038;;Overhead Applied Acc No.;Code20   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Gemeinkosten verrechnet Kontonr.;
                                                              ENU=Overhead Applied Account No.] }
    { 30000100;;WIP Change Acc No. ;Code20        ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskonto;
                                                              ENU=WIP Change Account] }
    { 30000101;;Prod. Accrual Acc No (Interim);Code20;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskonto (Interim);
                                                              ENU=Prod. Accrual Account (Interim)] }
    { 30000102;;Prod. Accrual Acc No;Code20       ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskonto;
                                                              ENU=Prod. Accrual Account] }
    { 30000200;;Direct Prod. Cost Acc No.;Code20  ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Produktionskostenkonto;
                                                              ENU=Direct Prod. Cost Account] }
    { 30000201;;Overhead Prod. Cost Acc No.;Code20;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Indirekte Produktionskostenkonto;
                                                              ENU=Overhead Prod. Cost Account] }
    { 40000008;;Inventory Acc Name ;Text100       ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand Kontoname;
                                                              ENU=Inventory Account Name] }
    { 40000009;;Inventory (Interim) Acc Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lager (Interim) Kontoname;
                                                              ENU=Inventory (Interim) Account Name] }
    { 40000010;;WIP Inventory Acc Name;Text100    ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Aktiviert Lager Kontoname;
                                                              ENU=WIP Inventory Account Name] }
    { 40000013;;Purchase Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Einkaufsabweichung Kontoname;
                                                              ENU=Purchase Variance Account Name] }
    { 40000014;;Inventory Adjmt. Acc Name;Text100 ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerkorrektur Kontoname;
                                                              ENU=Inventory Adjmt. Account Name] }
    { 40000016;;Invt. Accrual (Interim) A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerzugang (Interim) Kontoname;
                                                              ENU=Invt. Accrual (Interim) Account Name] }
    { 40000017;;COGS Acc Name      ;Text100       ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR Kontoname;
                                                              ENU=COGS Account Name] }
    { 40000018;;COGS (Interim) Acc Name;Text100   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR (Interim) Kontoname;
                                                              ENU=COGS (Interim) Account Name] }
    { 40000019;;Material Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Materialabweichung Kontoname;
                                                              ENU=Material Variance Account Name] }
    { 40000020;;Capacity Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abweichung KapazitÑt Kontoname;
                                                              ENU=Capacity Variance Account Name] }
    { 40000021;;Subcontracted Variance A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Kontoname;
                                                              ENU=Subcontracted Variance Account Name] }
    { 40000022;;Capacity Overhead Variance A N;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Kontoname;
                                                              ENU=Capacity Overhead Variance Account Name] }
    { 40000023;;Mfg. Overhead Variance A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Kontoname;
                                                              ENU=Mfg. Overhead Variance Account Name] }
    { 40000037;;Direct Cost Applied Acc Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Kosten verrechnet Kontoname;
                                                              ENU=Direct Cost Applied Account Name] }
    { 40000038;;Overhead Applied Acc Name;Text100 ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Gemeinkosten verrechnet Kontoname;
                                                              ENU=Overhead Applied Account Name] }
    { 40000100;;WIP Change Acc Name;Text100       ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskontoname;
                                                              ENU=WIP Change Account Name] }
    { 40000101;;Prod. Accrual (Interim) A Name;Text100;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskontoname (Interim);
                                                              ENU=Prod. Accrual Account Name (Interim)] }
    { 40000102;;Prod. Accrual Acc Name;Text100    ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskontoname;
                                                              ENU=Prod. Accrual Account Name] }
    { 40000200;;Direct Prod. Cost Acc Name;Text100;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Produktionskostenkontoname;
                                                              ENU=Direct Prod. Cost Account Name] }
    { 40000201;;Overhead Prod. Cost Acc Name;Text100;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Indirekte Produktionskostenkontoname;
                                                              ENU=Overhead Prod. Cost Account Name] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Posting Date,Item Ledger Entry No.      ;MaintainSQLIndex=No }
    {    ;Item Ledger Entry No.,Posting Date      ;SumIndexFields=Cost Amount (Expected),Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Posting Date                            ;SumIndexFields=Total,G/L Total,Inventory,Inventory G/L,Inventory (Interim),Inventory (Interim) G/L,WIP Inventory,WIP Inventory G/L,Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Inventory Posting Group,Gen. Prod. Posting Group,Location Code,Item Tracking Code (Item),Item Category Code (ILE),Item No.,Order No.,Global Dimension 1 Code,Global Dimension 2 Code,Lot No. (ILE),Item Ledger Entry Type,Entry Type,Variance Type,Document Type,Item Ledger Entry Quantity,Invoiced Quantity,Cost Amount (Expected),Posting Date,Warning;
                                                   MaintainSQLIndex=No }
    {    ;Inventory Posting Group,Location Code,Global Dimension 1 Code,Global Dimension 2 Code,Lot No. (ILE),Posting Date;
                                                   SumIndexFields=Total,G/L Total,Inventory,Inventory G/L,Inventory (Interim),Inventory (Interim) G/L,WIP Inventory,WIP Inventory G/L,Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Gen. Prod. Posting Group,Location Code,Global Dimension 1 Code,Global Dimension 2 Code,Lot No. (ILE),Posting Date;
                                                   SumIndexFields=Total,G/L Total,Inventory,Inventory G/L,Inventory (Interim),Inventory (Interim) G/L,WIP Inventory,WIP Inventory G/L,Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Location Code,Global Dimension 1 Code,Global Dimension 2 Code,Lot No. (ILE),Posting Date;
                                                   SumIndexFields=Total,G/L Total,Inventory,Inventory G/L,Inventory (Interim),Inventory (Interim) G/L,WIP Inventory,WIP Inventory G/L,Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Item No.,Global Dimension 1 Code,Global Dimension 2 Code,Lot No. (ILE),Posting Date;
                                                   SumIndexFields=Total,G/L Total,Inventory,Inventory G/L,Inventory (Interim),Inventory (Interim) G/L,WIP Inventory,WIP Inventory G/L,Invoiced Quantity,Item Ledger Entry Quantity }
    {    ;Invt G/L Recon. Code                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Item Ledger Entry Type,Item Ledger Entry No.,Item No.,Posting Date,Source No.,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      InvtGLReconCode@5447701 : Record 5447808;
      InvtGLReconCodeEntry@5447703 : Record 5447809;
      InvtGLReconCodes@5447702 : Page 5447808;
      ItemTrackingMgt@5447700 : Codeunit 6500;
      GLSetupRead@1002 : Boolean;

    LOCAL PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    [External]
    PROCEDURE ShowGL@9();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      GLEntry@1002 : Record 17;
      TempGLEntry@1001 : TEMPORARY Record 17;
    BEGIN
      GLItemLedgRelation.SETCURRENTKEY("Value Entry No.");
      GLItemLedgRelation.SETRANGE("Value Entry No.","Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          GLEntry.GET(GLItemLedgRelation."G/L Entry No.");
          TempGLEntry.INIT;
          TempGLEntry := GLEntry;
          TempGLEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempGLEntry);
    END;

    [External]
    PROCEDURE ShowValueEntries@8();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      ValueEntry@1002 : Record 5802;
      TempValueEntry@1001 : TEMPORARY Record 5802;
    BEGIN
      // Like T17
      GLItemLedgRelation.SETRANGE("G/L Entry No.","G/L Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          ValueEntry.GET(GLItemLedgRelation."Value Entry No.");
          TempValueEntry.INIT;
          TempValueEntry := ValueEntry;
          TempValueEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempValueEntry);
    END;

    [External]
    PROCEDURE ShowDimensions@11();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE ShowItem@5448000();
    VAR
      Item@5447800 : Record 27;
      AccNo@5447801 : Code[20];
    BEGIN
      Item.GET("Item No.");
      PAGE.RUNMODAL(PAGE::"Item Card",Item);
    END;

    LOCAL PROCEDURE ShowGLAccount@5447800();
    VAR
      GLAcc@5447800 : Record 15;
      AccNo@5447801 : Code[20];
    BEGIN
      CASE CurrFieldNo OF
        FIELDNO("Inventory Acc No."):
          AccNo := "Inventory Acc No.";
        FIELDNO("Inventory (Interim) Acc No."):
          AccNo := "Inventory (Interim) Acc No.";
        FIELDNO("WIP Inventory Acc No."):
          AccNo := "WIP Inventory Acc No.";
        FIELDNO("Purchase Variance Acc No."):
          AccNo := "Purchase Variance Acc No.";
        FIELDNO("Inventory Adjmt. Acc No."):
          AccNo := "Inventory Adjmt. Acc No.";
        FIELDNO("Invt. Accrual (Interim) Acc No"):
          AccNo := "Invt. Accrual (Interim) Acc No";
        FIELDNO("COGS Acc No."):
          AccNo := "COGS Acc No.";
        FIELDNO("COGS (Interim) Acc No."):
          AccNo := "COGS (Interim) Acc No.";
        FIELDNO("Material Variance Acc No."):
          AccNo := "Material Variance Acc No.";
        FIELDNO("Capacity Variance Acc No."):
          AccNo := "Capacity Variance Acc No.";
        FIELDNO("Subcontracted Variance Acc No."):
          AccNo := "Subcontracted Variance Acc No.";
        FIELDNO("Capacity Overhead Variance Acc"):
          AccNo := "Capacity Overhead Variance Acc";
        FIELDNO("Mfg. Overhead Variance Acc No."):
          AccNo := "Mfg. Overhead Variance Acc No.";
        FIELDNO("Direct Cost Applied Acc No."):
          AccNo := "Direct Cost Applied Acc No.";
        FIELDNO("Overhead Applied Acc No."):
          AccNo := "Overhead Applied Acc No.";
      END;

      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        PAGE.RUNMODAL(PAGE::"G/L Account Card",GLAcc);
      END;
    END;

    PROCEDURE Reconcilate@5447702(VAR InvtGLReconEntry@5447700 : Record 5447800);
    BEGIN
      CLEAR(InvtGLReconCodes);
      InvtGLReconCodes.LOOKUPMODE(TRUE);
      IF InvtGLReconCodes.RUNMODAL = ACTION::LookupOK THEN BEGIN
        InvtGLReconCodes.GETRECORD(InvtGLReconCode);

        IF InvtGLReconEntry.COUNT = 1 THEN
          InvtGLReconEntry.SETRECFILTER;

        InvtGLReconEntry.SETRANGE(Warning,TRUE);
        InvtGLReconEntry.FINDSET(TRUE);
        REPEAT
          InvtGLReconEntry."Invt G/L Recon. Code" := InvtGLReconCode.Code;
          InvtGLReconEntry.Warning := FALSE;

          InvtGLReconCodeEntry."Entry No." := InvtGLReconEntry."Entry No.";
          InvtGLReconCodeEntry."Invt G/L Recon. Code" := InvtGLReconCode.Code;
          InvtGLReconCodeEntry.INSERT;

          InvtGLReconEntry.MODIFY;
        UNTIL InvtGLReconEntry.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447801 Invt G/L Recon. Used Acc. CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Name;
    OnDelete=VAR
               GLBudgetEntry@1000 : Record 96;
               CommentLine@1001 : Record 97;
               ExtTextHeader@1002 : Record 279;
               AnalysisViewEntry@1003 : Record 365;
               AnalysisViewBudgetEntry@1004 : Record 366;
               MoveEntries@1005 : Codeunit 361;
             BEGIN
             END;

    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Verwendete Sachkonto;
               ENU=Inventory - G/L Reconcilation PLUS Used G/L Account];
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[DEU=Nr.;
                                                              ENU=No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[DEU=Name;
                                                              ENU=Name] }
    { 10  ;   ;Used in Value Entry ;Boolean       ;CaptionML=[DEU=Verwendet in Wertposten;
                                                              ENU=Used in Value Entry] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Name                                     }
    {    ;Used in Value Entry                      }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,Field9,Field13,Field14          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447802 Invt G/L Recon. Item Val. CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lager - Sachpostenabstimmung Artikel Lagerwert;
               ENU=Inventory - G/L Reconcilation Item Inventory Valuation];
  }
  FIELDS
  {
    { 1   ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   OnValidate=BEGIN
                                                                IF InvtPostGrp.Code <> "Inventory Posting Group" THEN
                                                                 IF InvtPostGrp.GET("Inventory Posting Group") THEN
                                                                   "Description (Invt Post. Grp.)" := InvtPostGrp.Description
                                                                 ELSE
                                                                  "Description (Invt Post. Grp.)" := '';
                                                              END;

                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF Location.Code <> "Location Code" THEN
                                                                  IF "Location Code" = ''THEN
                                                                    Location.INIT
                                                                  ELSE
                                                                    Location.GET("Location Code");

                                                                "Name (Location Code)" := Location.Name;
                                                              END;

                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 4   ;   ;Lot No. (ILE)       ;Code50        ;CaptionML=[DEU=Chargennr. (Artikelposten);
                                                              ENU=Lot No. (Item Ledger Entry)] }
    { 101 ;   ;Description (Invt Post. Grp.);Text100;
                                                   CaptionML=[DEU=Beschreibung (Lagerbuchungsgruppe);
                                                              ENU=Description (Inventory Posting Group)] }
    { 102 ;   ;Description (Item)  ;Text100       ;CaptionML=[DEU=Beschreibung (Artikel);
                                                              ENU=Description (Item)] }
    { 103 ;   ;Name (Location Code);Text100       ;CaptionML=[DEU=Name (Lagerortcode);
                                                              ENU=Name (Location Code)] }
  }
  KEYS
  {
    {    ;Inventory Posting Group,Item No.,Location Code,Lot No. (ILE);
                                                   Clustered=Yes }
    {    ;Item No.,Location Code,Lot No. (ILE)     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvtPostGrp@5447700 : Record 94;
      Location@5447701 : Record 14;

    BEGIN
    END.
  }
}

OBJECT Table 5447803 Invt G/L Recon. Item Buf CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[DEU=Lager - Sachpostenabstimmung Artikel Lagerwert;
               ENU=Inventory - G/L Reconcilation Item Inventory Valuation];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[DEU=Code;
                                                              ENU=Code] }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[DEU=Name;
                                                              ENU=Name] }
    { 3   ;   ;Totaling            ;Text250       ;CaptionML=[DEU=ZusammenzÑhlung;
                                                              ENU=Totaling] }
    { 4   ;   ;Period Start        ;Date          ;CaptionML=[DEU=Periodenanfang;
                                                              ENU=Period Start] }
    { 5   ;   ;Period End          ;Date          ;CaptionML=[DEU=Periodenende;
                                                              ENU=Period End] }
    { 6   ;   ;Visible             ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DEU=Sichtbar;
                                                              ENU=Visible] }
    { 7   ;   ;Indentation         ;Integer       ;CaptionML=[DEU=EinrÅckung;
                                                              ENU=Indentation] }
    { 8   ;   ;Show in Bold        ;Boolean       ;CaptionML=[DEU=Fett anzeigen;
                                                              ENU=Show in Bold] }
    { 21  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   OnValidate=BEGIN
                                                                IF InvtPostGrp.Code <> "Inventory Posting Group" THEN
                                                                  InvtPostGrp.GET("Inventory Posting Group");

                                                                "Description (Invt Post. Grp.)" := InvtPostGrp.Description;
                                                              END;

                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 22  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 23  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF Location.Code <> "Location Code" THEN
                                                                  IF "Location Code" = ''THEN
                                                                    Location.INIT
                                                                  ELSE
                                                                    Location.GET("Location Code");

                                                                "Name (Location Code)" := Location.Name;
                                                              END;

                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 24  ;   ;Lot No. (ILE)       ;Code50        ;CaptionML=[DEU=Chargennr. (Artikelposten);
                                                              ENU=Lot No. (Item Ledger Entry)] }
    { 101 ;   ;Description (Invt Post. Grp.);Text100;
                                                   CaptionML=[DEU=Beschreibung (Lagerbuchungsgruppe);
                                                              ENU=Description (Inventory Posting Group)] }
    { 102 ;   ;Description (Item)  ;Text100       ;CaptionML=[DEU=Beschreibung (Artikel);
                                                              ENU=Description (Item)] }
    { 103 ;   ;Name (Location Code);Text100       ;CaptionML=[DEU=Name (Lagerortcode);
                                                              ENU=Name (Location Code)] }
    { 9000;   ;Row Value           ;Decimal       ;CaptionML=[DEU=Zeilenwert;
                                                              ENU=Row Value] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvtPostGrp@5447700 : Record 94;
      Location@5447701 : Record 14;

    BEGIN
    END.
  }
}

OBJECT Table 5447805 Invt G/L Recon. Entry G/L CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Posten Fibu;
               ENU=Inventory - G/L Reconcilation PLUS Entry G/L];
    LookupPageID=Page5447805;
    DrillDownPageID=Page5447805;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date] }
    { 4   ;   ;Item Ledger Entry Type;Option      ;CaptionML=[DEU=Artikelpostenart;
                                                              ENU=Item Ledger Entry Type];
                                                   OptionCaptionML=[DEU=Einkauf,Verkauf,Zugang,Abgang,Umlagerung,Verbrauch,Istmeldung, ,Verbrauch fÅr Montage,Montage-Istmeldung;
                                                                    ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 5   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[DEU=Herkunftsnr.;
                                                              ENU=Source No.] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 9   ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 10  ;   ;Source Posting Group;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF (Source Type=CONST(Vendor)) "Vendor Posting Group"
                                                                 ELSE IF (Source Type=CONST(Item)) "Inventory Posting Group";
                                                   CaptionML=[DEU=Herkunftsbuchungsgruppe;
                                                              ENU=Source Posting Group] }
    { 11  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Artikelposten Lfd. Nr.;
                                                              ENU=Item Ledger Entry No.] }
    { 12  ;   ;Valued Quantity     ;Decimal       ;CaptionML=[DEU=Bewertete Menge;
                                                              ENU=Valued Quantity];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Item Ledger Entry Quantity;Decimal ;CaptionML=[DEU=Artikelpostenmenge;
                                                              ENU=Item Ledger Entry Quantity];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[DEU=Fakturierte Menge;
                                                              ENU=Invoiced Quantity];
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Cost per Unit       ;Decimal       ;CaptionML=[DEU=Lagerwert pro Einheit;
                                                              ENU=Cost per Unit];
                                                   AutoFormatType=2 }
    { 17  ;   ;Sales Amount (Actual);Decimal      ;CaptionML=[DEU=Verkaufsbetrag (tatsÑchl.);
                                                              ENU=Sales Amount (Actual)];
                                                   AutoFormatType=1 }
    { 22  ;   ;Salespers./Purch. Code;Code20      ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[DEU=Verk.-/EinkÑufercode;
                                                              ENU=Salespers./Purch. Code] }
    { 23  ;   ;Discount Amount     ;Decimal       ;CaptionML=[DEU=Rabattbetrag;
                                                              ENU=Discount Amount];
                                                   AutoFormatType=1 }
    { 24  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID] }
    { 25  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code] }
    { 28  ;   ;Applies-to Entry    ;Integer       ;CaptionML=[DEU=Ausgleich mit Lfd. Nr.;
                                                              ENU=Applies-to Entry] }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 41  ;   ;Source Type         ;Option        ;CaptionML=[DEU=Herkunftsart;
                                                              ENU=Source Type];
                                                   OptionCaptionML=[DEU=" ,Debitor,Kreditor,Artikel";
                                                                    ENU=" ,Customer,Vendor,Item"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 43  ;   ;Cost Amount (Actual);Decimal       ;CaptionML=[DEU=Einstandsbetrag (tatsÑchl.);
                                                              ENU=Cost Amount (Actual)];
                                                   AutoFormatType=1 }
    { 45  ;   ;Cost Posted to G/L  ;Decimal       ;CaptionML=[DEU=Gebuchte Lagerregulierung;
                                                              ENU=Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 46  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   AccessByPermission=TableData 223=R;
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code] }
    { 47  ;   ;Drop Shipment       ;Boolean       ;CaptionML=[DEU=Direktlieferung;
                                                              ENU=Drop Shipment] }
    { 48  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=No;
                                                   CaptionML=[DEU=Buch.-Blattname;
                                                              ENU=Journal Batch Name] }
    { 57  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=GeschÑftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group] }
    { 58  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date] }
    { 61  ;   ;External Document No.;Code35       ;CaptionML=[DEU=Externe Belegnummer;
                                                              ENU=External Document No.] }
    { 68  ;   ;Cost Amount (Actual) (ACY);Decimal ;CaptionML=[DEU=Einst.-Betrag (tatsÑchl.) (BW);
                                                              ENU=Cost Amount (Actual) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 70  ;   ;Cost Posted to G/L (ACY);Decimal   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Gebuchte Lagerregulierung (BW);
                                                              ENU=Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 72  ;   ;Cost per Unit (ACY) ;Decimal       ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[DEU=Lagerwert pro Einheit (BW);
                                                              ENU=Cost per Unit (ACY)];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Verkaufslieferung,Verkaufsrechnung,VerkaufsrÅcksendung,Verkaufsgutschrift,Einkaufslieferung,Einkaufsrechnung,RÅcklieferung,Einkaufsgutschrift,Umlagerungsausgang,Umlagerungseingang,Servicelieferung,Servicerechnung,Servicegutschrift,Gebuchte Montage";
                                                                    ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly] }
    { 80  ;   ;Document Line No.   ;Integer       ;CaptionML=[DEU=Belegzeilennr.;
                                                              ENU=Document Line No.] }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=[DEU=Auftragsart;
                                                              ENU=Order Type];
                                                   OptionCaptionML=[DEU=" ,Fertigung,Umlagerung,Service,Montage";
                                                                    ENU=" ,Production,Transfer,Service,Assembly"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly];
                                                   Editable=No }
    { 91  ;   ;Order No.           ;Code20        ;CaptionML=[DEU=Auftragsnr.;
                                                              ENU=Order No.];
                                                   Editable=No }
    { 92  ;   ;Order Line No.      ;Integer       ;CaptionML=[DEU=Auftragszeilennr.;
                                                              ENU=Order Line No.];
                                                   Editable=No }
    { 98  ;   ;Expected Cost       ;Boolean       ;CaptionML=[DEU=Soll-Kosten;
                                                              ENU=Expected Cost] }
    { 99  ;   ;Item Charge No.     ;Code20        ;TableRelation="Item Charge";
                                                   CaptionML=[DEU=Artikel Zu-/Abschlagsnr.;
                                                              ENU=Item Charge No.] }
    { 100 ;   ;Valued By Average Cost;Boolean     ;CaptionML=[DEU=Bew. z. Einst.-Pr.(durchschn.);
                                                              ENU=Valued By Average Cost] }
    { 102 ;   ;Partial Revaluation ;Boolean       ;CaptionML=[DEU=Teilneubewertung;
                                                              ENU=Partial Revaluation] }
    { 103 ;   ;Inventoriable       ;Boolean       ;CaptionML=[DEU=Einfluss auf Lagerwert;
                                                              ENU=Inventoriable] }
    { 104 ;   ;Valuation Date      ;Date          ;CaptionML=[DEU=Bewertungsdatum;
                                                              ENU=Valuation Date] }
    { 105 ;   ;Entry Type          ;Option        ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   OptionCaptionML=[DEU=Direkte Kosten,Neubewertung,Rundung,Indirekte Kosten,Abweichung;
                                                                    ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance;
                                                   Editable=No }
    { 106 ;   ;Variance Type       ;Option        ;CaptionML=[DEU=Abweichungsart;
                                                              ENU=Variance Type];
                                                   OptionCaptionML=[DEU=" ,Einkauf,Material,KapazitÑt,KapazitÑtsgemeinkosten,Produktionsgemeinkosten,Fremdarbeitskosten";
                                                                    ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted"];
                                                   OptionString=[ ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted];
                                                   Editable=No }
    { 148 ;   ;Purchase Amount (Actual);Decimal   ;CaptionML=[DEU=Einkaufsbetrag (tatsÑchl.);
                                                              ENU=Purchase Amount (Actual)];
                                                   AutoFormatType=1 }
    { 149 ;   ;Purchase Amount (Expected);Decimal ;AccessByPermission=TableData 120=R;
                                                   CaptionML=[DEU=Einkaufsbetrag (erwartet);
                                                              ENU=Purchase Amount (Expected)];
                                                   AutoFormatType=1 }
    { 150 ;   ;Sales Amount (Expected);Decimal    ;AccessByPermission=TableData 110=R;
                                                   CaptionML=[DEU=Verkaufsbetrag (erwartet);
                                                              ENU=Sales Amount (Expected)];
                                                   AutoFormatType=1 }
    { 151 ;   ;Cost Amount (Expected);Decimal     ;CaptionML=[DEU=Einstandsbetrag (erwartet);
                                                              ENU=Cost Amount (Expected)];
                                                   AutoFormatType=1 }
    { 152 ;   ;Cost Amount (Non-Invtbl.);Decimal  ;AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-Betr. (lagerwertunabh.);
                                                              ENU=Cost Amount (Non-Invtbl.)];
                                                   AutoFormatType=1 }
    { 156 ;   ;Cost Amount (Expected) (ACY);Decimal;
                                                   CaptionML=[DEU=Einstandsbetrag (erw.) (BW);
                                                              ENU=Cost Amount (Expected) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 157 ;   ;Cost Amount (Non-Invtbl.)(ACY);Decimal;
                                                   AccessByPermission=TableData 5800=R;
                                                   CaptionML=[DEU=Einst.-B. (lagerw.-unabh.)(BW);
                                                              ENU=Cost Amount (Non-Invtbl.)(ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 158 ;   ;Expected Cost Posted to G/L;Decimal;CaptionML=[DEU=Auf Sachkonto geb. Soll-Kosten;
                                                              ENU=Expected Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 159 ;   ;Exp. Cost Posted to G/L (ACY);Decimal;
                                                   CaptionML=[DEU=Auf Sachkto. geb. Soll-K. (BW);
                                                              ENU=Exp. Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[DEU=Dimensionssatz-ID;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
    { 1000;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[DEU=Projektnr.;
                                                              ENU=Job No.] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[DEU=Projektaufgabennr.;
                                                              ENU=Job Task No.] }
    { 1002;   ;Job Ledger Entry No.;Integer       ;TableRelation="Job Ledger Entry"."Entry No.";
                                                   CaptionML=[DEU=Projektpostennr.;
                                                              ENU=Job Ledger Entry No.];
                                                   BlankZero=Yes }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5818;   ;Adjustment          ;Boolean       ;CaptionML=[DEU=Regulierung;
                                                              ENU=Adjustment];
                                                   Editable=No }
    { 5819;   ;Average Cost Exception;Boolean     ;CaptionML=[DEU=Durchschnittskostenausnahme;
                                                              ENU=Average Cost Exception] }
    { 5831;   ;Capacity Ledger Entry No.;Integer  ;TableRelation="Capacity Ledger Entry";
                                                   CaptionML=[DEU=KapazitÑtsposten Lfd. Nr.;
                                                              ENU=Capacity Ledger Entry No.] }
    { 5832;   ;Type                ;Option        ;CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=Arbeitsplatzgruppe,Arbeitsplatz, ,Ressource;
                                                                    ENU=Work Center,Machine Center, ,Resource];
                                                   OptionString=Work Center,Machine Center, ,Resource }
    { 5834;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Machine Center)) "Machine Center"
                                                                 ELSE IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.] }
    { 6602;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[DEU=Reklamationsgrundcode;
                                                              ENU=Return Reason Code] }
    { 5447700;;Production Cost     ;Boolean       ;AccessByPermission=Codeunit 5447700=X;
                                                   CaptionML=[DEU=Produktionskosten;
                                                              ENU=Production Cost] }
    { 5447701;;Other Overhead Cost ;Boolean       ;AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Andere Gemeinkosten;
                                                              ENU=Other Overhead Cost] }
    { 5447743;;Cost Amount (Other Ovhd);Decimal   ;AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Einstandsbetrag (Andere Gemeinkosten);
                                                              ENU=Cost Amount (Other Overhead)];
                                                   AutoFormatType=1 }
    { 5447758;;Other Ovhd Cost Posted to G/L;Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Auf Sachkonto geb. Andere Gemeinkosten;
                                                              ENU=Other Overhead Cost Posted to G/L];
                                                   AutoFormatType=1 }
    { 5447759;;Oth O Cost Posted to G/L (ACY);Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Auf Sachkto. geb. Andere Gem.-K. (BW);
                                                              ENU=Other Ovhd. Cost Posted to G/L (ACY)];
                                                   AutoFormatType=1 }
    { 5447768;;Cost Amount (Other Ovhd) (ACY);Decimal;
                                                   AccessByPermission=TableData 5447710=R;
                                                   CaptionML=[DEU=Einst.-Betrag (Andere Gemeinkosten) (BW);
                                                              ENU=Cost Amount (Other Overheads) (ACY)];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5448000;;Cost Policy Type    ;Option        ;CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
    { 9000000;;Exp. Cost Not Posted to G/L;Decimal;CaptionML=[DEU=Nicht auf Sachkonto geb. Soll-Kosten;
                                                              ENU=Expected Cost Not Posted to G/L];
                                                   AutoFormatType=1 }
    { 9000001;;Cost Not Posted to G/L;Decimal     ;CaptionML=[DEU=Nicht gebuchte Lagerregulierung;
                                                              ENU=Cost Not Posted to G/L];
                                                   AutoFormatType=1 }
    { 9000002;;Open Exp. Cost (Posting Date);Boolean;
                                                   CaptionML=[DEU=Offene Soll-Kosten (Stichtag);
                                                              ENU=Open Expected Cost (Date)] }
    { 9000003;;Qty. Shipped Not Invoiced;Decimal  ;CaptionML=[DEU=Lief. nicht fakt. Menge;
                                                              ENU=Qty. Shipped Not Invoiced];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 9000040;;Warning             ;Boolean       ;CaptionML=[DEU=Warnung;
                                                              ENU=Warning] }
    { 9000047;;Posting  lower Value Date-Warn;Boolean;
                                                   CaptionML=[DEU=Buchungsdatum kleiner als Bewertungsdatum-Warnung;
                                                              ENU=Posting Date lower Value Date-Warning] }
    { 9000050;;Gen. Prod. Posting Group-Warn;Boolean;
                                                   CaptionML=[DEU=Produktbuchungsgruppe - Warnung;
                                                              ENU=Gen. Product Posting Group - Warning] }
    { 9000051;;Invt. Posting Group-Warning;Boolean;CaptionML=[DEU=Lagerbuchungsgruppe - Warnung;
                                                              ENU=Inventory Posting Group - Warning] }
    { 9000061;;Cost is Posted to G/L Warning;Boolean;
                                                   CaptionML=[DEU=Einstandspreis ist auf Sachkonten gebucht - Warnung;
                                                              ENU=Cost is Posted to G/L Warning] }
    { 9000062;;Expected Cost Posting Warning;Boolean;
                                                   CaptionML=[DEU=Soll-Kosten buchen - Warnung;
                                                              ENU=Expected Cost Posting Warning] }
    { 9000063;;Compression Warning ;Boolean       ;CaptionML=[DEU=Komprimierung - Warnung;
                                                              ENU=Compression Warning] }
    { 9000064;;Posting Group Warning;Boolean      ;CaptionML=[DEU=Buchungsgruppe - Warnung;
                                                              ENU=Posting Group Warning] }
    { 9000065;;Direct Postings Warning;Boolean    ;CaptionML=[DEU=Direktbuchungen - Warnung;
                                                              ENU=Direct Postings Warning] }
    { 9000066;;Posting Date Warning;Boolean       ;CaptionML=[DEU=Buchungsdatum - Warnung;
                                                              ENU=Posting Date Warning] }
    { 9000067;;Closing Period Overlap Warning;Boolean;
                                                   CaptionML=[DEU=PeriodenabschlussÅberschneidung - Warnung;
                                                              ENU=Closing Period Overlap Warning] }
    { 9000069;;Deleted G/L Accounts Warning;Boolean;
                                                   CaptionML=[DEU=Gelîschte Sachkonten - Warnung;
                                                              ENU=Deleted G/L Accounts Warning] }
    { 9000070;;Difference - Warning;Boolean       ;CaptionML=[DEU=Werte vorhanden - Warnung;
                                                              ENU=Difference - Warning] }
    { 9000099;;Invt G/L Recon. Code;Code20        ;TableRelation="Invt G/L Recon. Code CIN";
                                                   CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code;
                                                              ENU=Inventory - G/L Reconciliation PLUS Code] }
    { 9100003;;Description (Item)  ;Text100       ;CaptionML=[DEU=Beschreibung (Artikel);
                                                              ENU=Description (Item)] }
    { 9100011;;Inventory Posting Group (Item);Code20;
                                                   TableRelation="Inventory Posting Group";
                                                   CaptionML=[DEU=Lagerbuchungsgruppe (Artikel);
                                                              ENU=Inventory Posting Group (Item)] }
    { 9100091;;Gen. Prod. Posting Group (MD);Code20;
                                                   TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe (Stammdaten);
                                                              ENU=Gen. Product Posting Group (Master Data)] }
    { 9106500;;Item Tracking Code (Item);Code10   ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode (Artikel);
                                                              ENU=Item Tracking Code (Item)] }
    { 9200006;;Document No (ILE)   ;Code20        ;CaptionML=[DEU=Belegnr. (Artikelposten);
                                                              ENU=Document No (Item Ledger Entry)] }
    { 9200010;;Item Tracking (ILE) ;Option        ;CaptionML=[DEU=Artikelverfolgung (Artikelposten);
                                                              ENU=Item Tracking (Item Ledger Entry)];
                                                   OptionCaptionML=[DEU=Ohne,Chargennr.,Chargennr. und Seriennr.,Seriennr.;
                                                                    ENU=None,Lot No.,Lot and Serial No.,Serial No.];
                                                   OptionString=None,Lot No.,Lot and Serial No.,Serial No.;
                                                   Editable=No }
    { 9205704;;Item Category Code (ILE);Code20    ;TableRelation="Item Category";
                                                   CaptionML=[DEU=Artikelkategoriencode (Artikelposten);
                                                              ENU=Item Category Code (Item Ledger Entry)] }
    { 9206500;;Serial No. (ILE)    ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",0,"Serial No. (ILE)");
                                                            END;

                                                   CaptionML=[DEU=Seriennr. (Artikelposten);
                                                              ENU=Serial No. (Item Ledger Entry)] }
    { 9206501;;Lot No. (ILE)       ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",1,"Lot No. (ILE)");
                                                            END;

                                                   CaptionML=[DEU=Chargennr. (Artikelposten);
                                                              ENU=Lot No. (Item Ledger Entry)] }
    { 9900000;;G/L Entry No.       ;Integer       ;CaptionML=[DEU=Sachposten Lfd. Nr.;
                                                              ENU=G/L Entry No.] }
    { 9900003;;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Sachkontonr.;
                                                              ENU=G/L Account No.] }
    { 9900007;;G/L Account Name    ;Text100       ;CaptionML=[DEU=Sachkontoname;
                                                              ENU=G/L Account Name] }
    { 9900017;;G/L Amount          ;Decimal       ;CaptionML=[DEU=Sachkonto Betrag;
                                                              ENU=G/L Acc. Amount];
                                                   AutoFormatType=1 }
    { 9900029;;System-Created Entry;Boolean       ;CaptionML=[DEU=Systembuchung;
                                                              ENU=System-Created Entry] }
    { 9999999;;G/L                 ;Boolean       ;CaptionML=[DEU=Fibu;
                                                              ENU=G/L] }
    { 10000008;;Inventory          ;Decimal       ;CaptionML=[DEU=Lagerbestand;
                                                              ENU=Inventory];
                                                   BlankZero=Yes }
    { 10000009;;Inventory (Interim);Decimal       ;CaptionML=[DEU=Lager (Interim);
                                                              ENU=Inventory (Interim)];
                                                   BlankZero=Yes }
    { 10000010;;WIP Inventory      ;Decimal       ;CaptionML=[DEU=Aktiviert Lager;
                                                              ENU=WIP Inventory];
                                                   BlankZero=Yes }
    { 10000011;;Direct Cost Applied Actual;Decimal;CaptionML=[DEU=Ausgegl. direkte Ist-Kosten;
                                                              ENU=Direct Cost Applied Actual];
                                                   BlankZero=Yes }
    { 10000012;;Overhead Applied Actual;Decimal   ;CaptionML=[DEU=Ausgeglichene Ist-Gemeinkosten;
                                                              ENU=Overhead Applied Actual];
                                                   BlankZero=Yes }
    { 10000013;;Purchase Variance  ;Decimal       ;CaptionML=[DEU=Einkaufsabweichung;
                                                              ENU=Purchase Variance];
                                                   BlankZero=Yes }
    { 10000014;;Inventory Adjmt.   ;Decimal       ;CaptionML=[DEU=Lagerkorrektur;
                                                              ENU=Inventory Adjmt.];
                                                   BlankZero=Yes }
    { 10000016;;Invt. Accrual (Interim);Decimal   ;CaptionML=[DEU=Lagerzugang (Interim);
                                                              ENU=Invt. Accrual (Interim)];
                                                   BlankZero=Yes }
    { 10000017;;COGS               ;Decimal       ;CaptionML=[DEU=LAGERVERBR;
                                                              ENU=COGS];
                                                   BlankZero=Yes }
    { 10000018;;COGS (Interim)     ;Decimal       ;CaptionML=[DEU=LAGERVERBR (Interim);
                                                              ENU=COGS (Interim)];
                                                   BlankZero=Yes }
    { 10000019;;Material Variance  ;Decimal       ;CaptionML=[DEU=Materialabweichung;
                                                              ENU=Material Variance];
                                                   BlankZero=Yes }
    { 10000020;;Capacity Variance  ;Decimal       ;CaptionML=[DEU=Abweichung KapazitÑt;
                                                              ENU=Capacity Variance];
                                                   BlankZero=Yes }
    { 10000021;;Subcontracted Variance;Decimal    ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit;
                                                              ENU=Subcontracted Variance];
                                                   BlankZero=Yes }
    { 10000022;;Capacity Overhead Variance;Decimal;CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten;
                                                              ENU=Capacity Overhead Variance];
                                                   BlankZero=Yes }
    { 10000023;;Mfg. Overhead Variance;Decimal    ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten;
                                                              ENU=Mfg. Overhead Variance];
                                                   BlankZero=Yes }
    { 10000028;;Total              ;Decimal       ;CaptionML=[DEU=Gesamt;
                                                              ENU=Total];
                                                   BlankZero=Yes }
    { 10000029;;G/L Total          ;Decimal       ;CaptionML=[DEU=Fibu gesamt;
                                                              ENU=G/L Total];
                                                   BlankZero=Yes }
    { 10000030;;Difference         ;Decimal       ;CaptionML=[DEU=Abweichung;
                                                              ENU=Difference];
                                                   BlankZero=Yes }
    { 10000032;;Direct Cost Applied WIP;Decimal   ;CaptionML=[DEU=Ausgegl. direkte Kosten WIP;
                                                              ENU=Direct Cost Applied WIP];
                                                   BlankZero=Yes }
    { 10000033;;Overhead Applied WIP;Decimal      ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Gemeinkosten verrechnet WIP;
                                                              ENU=Overhead Applied WIP];
                                                   BlankZero=Yes }
    { 10000035;;Inventory To WIP   ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Lager auf WIP;
                                                              ENU=Inventory To WIP];
                                                   BlankZero=Yes }
    { 10000036;;WIP To Interim     ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=WIP auf Interim;
                                                              ENU=WIP To Interim];
                                                   BlankZero=Yes }
    { 10000037;;Direct Cost Applied;Decimal       ;CaptionML=[DEU=Direkte Kosten verrechnet;
                                                              ENU=Direct Cost Applied];
                                                   BlankZero=Yes }
    { 10000038;;Overhead Applied   ;Decimal       ;CaptionML=[DEU=Gemeinkosten verrechnet;
                                                              ENU=Overhead Applied];
                                                   BlankZero=Yes }
    { 10000099;;WIP To Inventory   ;Decimal       ;CaptionML=[DEU=WIP auf Lager;
                                                              ENU=WIP To Inventory];
                                                   BlankZero=Yes }
    { 10000100;;WIP Change         ;Decimal       ;CaptionML=[DEU=Unf.-Arbeit-VerÑnderung;
                                                              ENU=WIP Change];
                                                   BlankZero=Yes }
    { 10000101;;Prod. Accrual (Interim);Decimal   ;CaptionML=[DEU=Produktionszugang (Interim);
                                                              ENU=Prod. Accrual (Interim)];
                                                   BlankZero=Yes }
    { 10000102;;Prod. Accrual      ;Decimal       ;CaptionML=[DEU=Produktionszugang;
                                                              ENU=Prod. Accrual];
                                                   BlankZero=Yes }
    { 10000200;;Direct Prod. Cost  ;Decimal       ;CaptionML=[DEU=Direkte Produktionskosten;
                                                              ENU=Direct Prod. Cost];
                                                   BlankZero=Yes }
    { 10000201;;Overhead Prod. Cost;Decimal       ;CaptionML=[DEU=Indirekte Produktionskosten;
                                                              ENU=Overhead Prod. Cost];
                                                   BlankZero=Yes }
    { 20000008;;Inventory G/L      ;Decimal       ;CaptionML=[DEU=Lagerbestand Fibu;
                                                              ENU=Inventory G/L];
                                                   BlankZero=Yes }
    { 20000009;;Inventory (Interim) G/L;Decimal   ;CaptionML=[DEU=Lager (Interim) Fibu;
                                                              ENU=Inventory (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000010;;WIP Inventory G/L  ;Decimal       ;CaptionML=[DEU=Aktiviert Lager Fibu;
                                                              ENU=WIP Inventory G/L];
                                                   BlankZero=Yes }
    { 20000011;No;Direct Cost Applied Actual G/L;Decimal;
                                                   CaptionML=[DEU=Ausgegl. direkte Ist-Kosten Fibu;
                                                              ENU=Direct Cost Applied Actual G/L];
                                                   Description=Not filled }
    { 20000012;No;Overhead Applied Actual G/L;Decimal;
                                                   CaptionML=[DEU=Ausgeglichene Ist-Gemeinkosten Fibu;
                                                              ENU=Overhead Applied Actual G/L];
                                                   Description=Not filled }
    { 20000013;;Purchase Variance G/L;Decimal     ;CaptionML=[DEU=Einkaufsabweichung Fibu;
                                                              ENU=Purchase Variance G/L];
                                                   BlankZero=Yes }
    { 20000014;;Inventory Adjmt. G/L;Decimal      ;CaptionML=[DEU=Lagerkorrektur Fibu;
                                                              ENU=Inventory Adjmt. G/L];
                                                   BlankZero=Yes }
    { 20000016;;Invt. Accrual (Interim) G/L;Decimal;
                                                   CaptionML=[DEU=Lagerzugang (Interim) Fibu;
                                                              ENU=Invt. Accrual (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000017;;COGS G/L           ;Decimal       ;CaptionML=[DEU=LAGERVERBR Fibu;
                                                              ENU=COGS G/L];
                                                   BlankZero=Yes }
    { 20000018;;COGS (Interim) G/L ;Decimal       ;CaptionML=[DEU=LAGERVERBR (Interim) Fibu;
                                                              ENU=COGS (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000019;;Material Variance G/L;Decimal     ;CaptionML=[DEU=Materialabweichung Fibu;
                                                              ENU=Material Variance G/L];
                                                   BlankZero=Yes }
    { 20000020;;Capacity Variance G/L;Decimal     ;CaptionML=[DEU=Abweichung KapazitÑt Fibu;
                                                              ENU=Capacity Variance G/L];
                                                   BlankZero=Yes }
    { 20000021;;Subcontracted Variance G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Fibu;
                                                              ENU=Subcontracted Variance G/L];
                                                   BlankZero=Yes }
    { 20000022;;Capacity Overhead Variance G/L;Decimal;
                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Fibu;
                                                              ENU=Capacity Overhead Variance G/L];
                                                   BlankZero=Yes }
    { 20000023;;Mfg. Overhead Variance G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Fibu;
                                                              ENU=Mfg. Overhead Variance G/L];
                                                   BlankZero=Yes }
    { 20000032;No;Direct Cost Applied WIP G/L;Decimal;
                                                   CaptionML=[DEU=Ausgegl. direkte Kosten WIP Fibu;
                                                              ENU=Direct Cost Applied WIP G/L];
                                                   Description=Not filled }
    { 20000033;No;Overhead Applied WIP G/L;Decimal;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Gemeinkosten verrechnet WIP Fibu;
                                                              ENU=Overhead Applied WIP G/L];
                                                   Description=Not filled }
    { 20000035;;Inventory To WIP G/L;Decimal      ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=Lager auf WIP Fibu;
                                                              ENU=Inventory To WIP G/L];
                                                   BlankZero=Yes }
    { 20000036;;WIP To Interim G/L ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[DEU=WIP auf Interim Fibu;
                                                              ENU=WIP To Interim G/L];
                                                   BlankZero=Yes }
    { 20000037;;Direct Cost Applied G/L;Decimal   ;CaptionML=[DEU=Direkte Kosten verrechnet Fibu;
                                                              ENU=Direct Cost Applied G/L];
                                                   BlankZero=Yes }
    { 20000038;;Overhead Applied G/L;Decimal      ;CaptionML=[DEU=Gemeinkosten verrechnet Fibu;
                                                              ENU=Overhead Applied G/L];
                                                   BlankZero=Yes }
    { 20000099;;WIP To Inventory G/L;Decimal      ;CaptionML=[DEU=WIP auf Lager Fibu;
                                                              ENU=WIP To Inventory G/L];
                                                   BlankZero=Yes }
    { 20000100;;WIP Change G/L     ;Decimal       ;CaptionML=[DEU=Unf.-Arbeit-VerÑnderung Fibu;
                                                              ENU=WIP Change G/L];
                                                   BlankZero=Yes }
    { 20000101;;Prod. Accrual (Interim) G/L;Decimal;
                                                   CaptionML=[DEU=Produktionszugang (Interim) Fibu;
                                                              ENU=Prod. Accrual (Interim) G/L];
                                                   BlankZero=Yes }
    { 20000102;;Prod. Accrual G/L  ;Decimal       ;CaptionML=[DEU=Produktionszugang Fibu;
                                                              ENU=Prod. Accrual G/L];
                                                   BlankZero=Yes }
    { 20000200;;Direct Prod. Cost G/L;Decimal     ;CaptionML=[DEU=Direkte Produktionskosten Fibu;
                                                              ENU=Direct Prod. Cost G/L];
                                                   BlankZero=Yes }
    { 20000201;;Overhead Prod. Cost G/L;Decimal   ;CaptionML=[DEU=Indirekte Produktionskosten Fibu;
                                                              ENU=Overhead Prod. Cost G/L];
                                                   BlankZero=Yes }
    { 30000008;;Inventory Acc No.  ;Code20        ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand Kontonr.;
                                                              ENU=Inventory Account No.] }
    { 30000009;;Inventory (Interim) Acc No.;Code20;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lager (Interim) Kontonr.;
                                                              ENU=Inventory (Interim) Account No.] }
    { 30000010;;WIP Inventory Acc No.;Code20      ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Aktiviert Lager Kontonr.;
                                                              ENU=WIP Inventory Accoutn No.] }
    { 30000013;;Purchase Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Einkaufsabweichung Kontonr.;
                                                              ENU=Purchase Variance Account No.] }
    { 30000014;;Inventory Adjmt. Acc No.;Code20   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerkorrektur Kontonr.;
                                                              ENU=Inventory Adjmt. Account No.] }
    { 30000016;;Invt. Accrual (Interim) Acc No;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerzugang (Interim) Kontonr.;
                                                              ENU=Invt. Accrual (Interim) Account Name] }
    { 30000017;;COGS Acc No.       ;Code20        ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR Kontonr.;
                                                              ENU=COGS Account No.] }
    { 30000018;;COGS (Interim) Acc No.;Code20     ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR (Interim) Kontonr.;
                                                              ENU=COGS (Interim) Account Name] }
    { 30000019;;Material Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Materialabweichung Kontonr.;
                                                              ENU=Material Variance Account Name] }
    { 30000020;;Capacity Variance Acc No.;Code20  ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abweichung KapazitÑt Kontonr.;
                                                              ENU=Capacity Variance Account Name] }
    { 30000021;;Subcontracted Variance Acc No.;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Kontonr.;
                                                              ENU=Subcontracted Variance Account Name] }
    { 30000022;;Capacity Overhead Variance Acc;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Kontonr.;
                                                              ENU=Capacity Overhead Variance Account Name] }
    { 30000023;;Mfg. Overhead Variance Acc No.;Code20;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Kontonr.;
                                                              ENU=Mfg. Overhead Variance Account Name] }
    { 30000037;;Direct Cost Applied Acc No.;Code20;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Kosten verrechnet Kontonr.;
                                                              ENU=Direct Cost Applied Account No.] }
    { 30000038;;Overhead Applied Acc No.;Code20   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Gemeinkosten verrechnet Kontonr.;
                                                              ENU=Overhead Applied Account No.] }
    { 30000100;;WIP Change Acc No. ;Code20        ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskonto;
                                                              ENU=WIP Change Account] }
    { 30000101;;Prod. Accrual Acc No (Interim);Code20;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskonto (Interim);
                                                              ENU=Prod. Accrual Account (Interim)] }
    { 30000102;;Prod. Accrual Acc No;Code20       ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskonto;
                                                              ENU=Prod. Accrual Account] }
    { 30000200;;Direct Prod. Cost Acc No.;Code20  ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Produktionskostenkonto;
                                                              ENU=Direct Prod. Cost Account] }
    { 30000201;;Overhead Prod. Cost Acc No.;Code20;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Indirekte Produktionskostenkonto;
                                                              ENU=Overhead Prod. Cost Account] }
    { 40000008;;Inventory Acc Name ;Text100       ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerbestand Kontoname;
                                                              ENU=Inventory Account Name] }
    { 40000009;;Inventory (Interim) Acc Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lager (Interim) Kontoname;
                                                              ENU=Inventory (Interim) Account Name] }
    { 40000010;;WIP Inventory Acc Name;Text100    ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Aktiviert Lager Kontoname;
                                                              ENU=WIP Inventory Account Name] }
    { 40000013;;Purchase Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Einkaufsabweichung Kontoname;
                                                              ENU=Purchase Variance Account Name] }
    { 40000014;;Inventory Adjmt. Acc Name;Text100 ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerkorrektur Kontoname;
                                                              ENU=Inventory Adjmt. Account Name] }
    { 40000016;;Invt. Accrual (Interim) A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Lagerzugang (Interim) Kontoname;
                                                              ENU=Invt. Accrual (Interim) Account Name] }
    { 40000017;;COGS Acc Name      ;Text100       ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR Kontoname;
                                                              ENU=COGS Account Name] }
    { 40000018;;COGS (Interim) Acc Name;Text100   ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=LAGERVERBR (Interim) Kontoname;
                                                              ENU=COGS (Interim) Account Name] }
    { 40000019;;Material Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Materialabweichung Kontoname;
                                                              ENU=Material Variance Account Name] }
    { 40000020;;Capacity Variance Acc Name;Text100;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abweichung KapazitÑt Kontoname;
                                                              ENU=Capacity Variance Account Name] }
    { 40000021;;Subcontracted Variance A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Fremdarbeit Kontoname;
                                                              ENU=Subcontracted Variance Account Name] }
    { 40000022;;Capacity Overhead Variance A N;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Abw. KapazitÑtsgemeinkosten Kontoname;
                                                              ENU=Capacity Overhead Variance Account Name] }
    { 40000023;;Mfg. Overhead Variance A Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[DEU=Abweichung Prod.-Gemeinkosten Kontoname;
                                                              ENU=Mfg. Overhead Variance Account Name] }
    { 40000037;;Direct Cost Applied Acc Name;Text100;
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Kosten verrechnet Kontoname;
                                                              ENU=Direct Cost Applied Account Name] }
    { 40000038;;Overhead Applied Acc Name;Text100 ;OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Gemeinkosten verrechnet Kontoname;
                                                              ENU=Overhead Applied Account Name] }
    { 40000100;;WIP Change Acc Name;Text100       ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Unf.-Arbeit-VerÑnderungskontoname;
                                                              ENU=WIP Change Account Name] }
    { 40000101;;Prod. Accrual (Interim) A Name;Text100;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskontoname (Interim);
                                                              ENU=Prod. Accrual Account Name (Interim)] }
    { 40000102;;Prod. Accrual Acc Name;Text100    ;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Produktionszugangskontoname;
                                                              ENU=Prod. Accrual Account Name] }
    { 40000200;;Direct Prod. Cost Acc Name;Text100;TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Direkte Produktionskostenkontoname;
                                                              ENU=Direct Prod. Cost Account Name] }
    { 40000201;;Overhead Prod. Cost Acc Name;Text100;
                                                   TableRelation="G/L Account";
                                                   OnLookup=BEGIN
                                                              ShowGLAccount();
                                                            END;

                                                   CaptionML=[DEU=Indirekte Produktionskostenkontoname;
                                                              ENU=Overhead Prod. Cost Account Name] }
  }
  KEYS
  {
    {    ;Entry No.,G/L Entry No.                  }
    {    ;G/L Account No.,Posting Date            ;SumIndexFields=Total,G/L Total,Inventory,Inventory (Interim),WIP Inventory;
                                                   Clustered=Yes }
    {    ;Posting Date,Item Ledger Entry No.      ;MaintainSQLIndex=No }
    {    ;Item Ledger Entry No.                   ;MaintainSQLIndex=No }
    {    ;G/L Account No.,Inventory Posting Group,Gen. Prod. Posting Group,Location Code,Item Tracking Code (Item),Item No.,Order No.,Global Dimension 1 Code,Item Ledger Entry Type,Entry Type,Variance Type,Document Type,Item Ledger Entry Quantity,Invoiced Quantity,Cost Amount (Expected),Posting Date,Warning;
                                                   MaintainSQLIndex=No }
    {    ;Direct Postings Warning,G/L Entry No.    }
    {    ;Invt G/L Recon. Code                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Item Ledger Entry Type,Item Ledger Entry No.,Item No.,Posting Date,Source No.,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      InvtGLReconCode@5447701 : Record 5447808;
      InvtGLReconCodeEntry@5447703 : Record 5447809;
      InvtGLReconCodes@5447702 : Page 5447808;
      ItemTrackingMgt@5447700 : Codeunit 6500;
      GLSetupRead@1002 : Boolean;

    LOCAL PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowGL@9();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      GLEntry@1002 : Record 17;
      TempGLEntry@1001 : TEMPORARY Record 17;
    BEGIN
      GLItemLedgRelation.SETCURRENTKEY("Value Entry No.");
      GLItemLedgRelation.SETRANGE("Value Entry No.","Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          GLEntry.GET(GLItemLedgRelation."G/L Entry No.");
          TempGLEntry.INIT;
          TempGLEntry := GLEntry;
          TempGLEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempGLEntry);
    END;

    PROCEDURE ShowValueEntries@8();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      ValueEntry@1002 : Record 5802;
      TempValueEntry@1001 : TEMPORARY Record 5802;
    BEGIN
      // Like T17
      GLItemLedgRelation.SETRANGE("G/L Entry No.","G/L Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          ValueEntry.GET(GLItemLedgRelation."Value Entry No.");
          TempValueEntry.INIT;
          TempValueEntry := ValueEntry;
          TempValueEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempValueEntry);
    END;

    PROCEDURE ShowDimensions@11();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE ShowItem@5448000();
    VAR
      Item@5447800 : Record 27;
      AccNo@5447801 : Code[20];
    BEGIN
      Item.GET("Item No.");
      PAGE.RUNMODAL(PAGE::"Item Card",Item);
    END;

    LOCAL PROCEDURE ShowGLAccount@5447800();
    VAR
      GLAcc@5447800 : Record 15;
      AccNo@5447801 : Code[20];
    BEGIN
      CASE CurrFieldNo OF
        FIELDNO("Inventory Acc No."):
          AccNo := "Inventory Acc No.";
        FIELDNO("Inventory (Interim) Acc No."):
          AccNo := "Inventory (Interim) Acc No.";
        FIELDNO("WIP Inventory Acc No."):
          AccNo := "WIP Inventory Acc No.";
        FIELDNO("Purchase Variance Acc No."):
          AccNo := "Purchase Variance Acc No.";
        FIELDNO("Inventory Adjmt. Acc No."):
          AccNo := "Inventory Adjmt. Acc No.";
        FIELDNO("Invt. Accrual (Interim) Acc No"):
          AccNo := "Invt. Accrual (Interim) Acc No";
        FIELDNO("COGS Acc No."):
          AccNo := "COGS Acc No.";
        FIELDNO("COGS (Interim) Acc No."):
          AccNo := "COGS (Interim) Acc No.";
        FIELDNO("Material Variance Acc No."):
          AccNo := "Material Variance Acc No.";
        FIELDNO("Capacity Variance Acc No."):
          AccNo := "Capacity Variance Acc No.";
        FIELDNO("Subcontracted Variance Acc No."):
          AccNo := "Subcontracted Variance Acc No.";
        FIELDNO("Capacity Overhead Variance Acc"):
          AccNo := "Capacity Overhead Variance Acc";
        FIELDNO("Mfg. Overhead Variance Acc No."):
          AccNo := "Mfg. Overhead Variance Acc No.";
        FIELDNO("Direct Cost Applied Acc No."):
          AccNo := "Direct Cost Applied Acc No.";
        FIELDNO("Overhead Applied Acc No."):
          AccNo := "Overhead Applied Acc No.";
      END;

      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        PAGE.RUNMODAL(PAGE::"G/L Account Card",GLAcc);
      END;
    END;

    PROCEDURE Reconcilate@5447702(VAR InvtGLReconEntryGL@5447700 : Record 5447805);
    BEGIN
      CLEAR(InvtGLReconCodes);
      InvtGLReconCodes.LOOKUPMODE(TRUE);
      IF InvtGLReconCodes.RUNMODAL = ACTION::LookupOK THEN BEGIN
        InvtGLReconCodes.GETRECORD(InvtGLReconCode);

        IF InvtGLReconEntryGL.COUNT = 1 THEN
          InvtGLReconEntryGL.SETRECFILTER;

        InvtGLReconEntryGL.SETRANGE(Warning,TRUE);
        InvtGLReconEntryGL.FINDSET(TRUE);
        REPEAT
          InvtGLReconEntryGL."Invt G/L Recon. Code" := InvtGLReconCode.Code;
          InvtGLReconEntryGL.Warning := FALSE;

          InvtGLReconCodeEntry."G/L Entry No." := InvtGLReconEntryGL."G/L Entry No.";
          InvtGLReconCodeEntry."Entry No." := InvtGLReconEntryGL."Entry No.";
          InvtGLReconCodeEntry."Invt G/L Recon. Code" := InvtGLReconCode.Code;
          InvtGLReconCodeEntry.INSERT;

          InvtGLReconEntryGL.MODIFY;
        UNTIL InvtGLReconEntryGL.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447807 Invt G/L Recon. Code Value CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code Feldwert;
               ENU=Invt GL Recon PLUS Code Field Value];
  }
  FIELDS
  {
    { 1   ;   ;Row Code            ;Code20        ;CaptionML=[DEU=Zeilenref.-Nr.;
                                                              ENU=Row Ref. No.] }
    { 2   ;   ;Column Code         ;Code20        ;CaptionML=[DEU=Spaltennr.;
                                                              ENU=Column No.] }
    { 3   ;   ;Value               ;Decimal       ;CaptionML=[DEU=Wert;
                                                              ENU=Value];
                                                   AutoFormatType=1 }
    { 4   ;No ;Has Error           ;Boolean       ;CaptionML=[DEU=Fehler;
                                                              ENU=Has Error] }
    { 5   ;No ;Period Error        ;Boolean       ;CaptionML=[DEU=Periodenfehler;
                                                              ENU=Period Error] }
    { 6   ;No ;Formula Error       ;Boolean       ;CaptionML=[DEU=Formelfehler;
                                                              ENU=Formula Error] }
    { 7   ;No ;Cyclic Error        ;Boolean       ;CaptionML=[DEU=Zyklischer Fehler;
                                                              ENU=Cyclic Error] }
    { 10  ;   ;Invt G/L Recon. Code;Code20        ;TableRelation="Invt G/L Recon. Code CIN";
                                                   CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code;
                                                              ENU=Inventory - G/L Reconciliation PLUS Code] }
    { 11  ;   ;Per Date            ;Date          ;CaptionML=[DEU=bis Datum;
                                                              ENU=Per Date] }
    { 12  ;   ;Is Totaled Value    ;Boolean       ;CaptionML=[DEU=Is Summierter Wert;
                                                              ENU=Is Totaled Value] }
    { 13  ;   ;Are Line Values Zero;Boolean       ;CaptionML=[DEU=Sind Zeilenwerte 0;
                                                              ENU=Are Line Values Zero] }
    { 40  ;   ;Has Warning         ;Boolean       ;CaptionML=[DEU=Warnung;
                                                              ENU=Has Warning] }
    { 111 ;   ;Row Name            ;Text100       ;CaptionML=[DEU=Zeilenname;
                                                              ENU=Row Name] }
    { 112 ;   ;Row Totaling 1      ;Text250       ;CaptionML=[DEU=ZeilenzusammenzÑhlung 1;
                                                              ENU=Row Totaling 1] }
    { 113 ;   ;Row Totaling 2      ;Text250       ;CaptionML=[DEU=ZeilenzusammenzÑhlung 2;
                                                              ENU=Row Totaling 2] }
    { 114 ;   ;Row Totaling 3      ;Text250       ;CaptionML=[DEU=ZeilenzusammenzÑhlung 3;
                                                              ENU=Row Totaling 3] }
    { 115 ;   ;Row Totaling 4      ;Text250       ;CaptionML=[DEU=ZeilenzusammenzÑhlung 4;
                                                              ENU=Row Totaling 4] }
    { 120 ;   ;Column Name         ;Text100       ;CaptionML=[DEU=Spaltenname;
                                                              ENU=Column Name] }
    { 6506;   ;Item Expiration Date;Date          ;CaptionML=[DEU=Artikelablaufdatum;
                                                              ENU=Item Expiration Date] }
    { 7000;   ;Posting Date First LE;Date         ;CaptionML=[DEU=Buchungsdatum (1. Buchungsposten);
                                                              ENU=Posting Date (First Ledger Entry)] }
  }
  KEYS
  {
    {    ;Invt G/L Recon. Code,Row Code,Column Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447808 Invt G/L Recon. Code CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Ending Date" = 0D THEN
                 "Ending Date" := CALCDATE('<CM>',WORKDATE);
             END;

    OnModify=BEGIN
               TESTFIELD("Ending Date");
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);
               RestoreWarnings;
               DeleteFieldValues;
             END;

    OnRename=BEGIN
               DeleteFieldValues;
             END;

    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code;
               ENU=Inventory - G/L Reconciliation PLUS Code];
    LookupPageID=Page5447808;
    DrillDownPageID=Page5447808;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 10  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Starting Date" <> xRec."Starting Date" THEN
                                                                  DeleteFieldValues;
                                                              END;

                                                   CaptionML=[DEU=Startdatum;
                                                              ENU=Starting Date] }
    { 11  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" <> xRec."Ending Date" THEN
                                                                  DeleteFieldValues;
                                                              END;

                                                   CaptionML=[DEU=Enddatum;
                                                              ENU=Ending Date] }
    { 12  ;   ;Status              ;Option        ;CaptionML=[DEU=Status;
                                                              ENU=Status];
                                                   OptionCaptionML=[DEU=Offen,Abgestimmt;
                                                                    ENU=Open,Reconcilated];
                                                   OptionString=Open,Reconcilated }
    { 110 ;   ;Show as Lines       ;Option        ;InitValue=Item Inventory Valuation;
                                                   OnValidate=BEGIN
                                                                IF "Show as Lines" <> xRec."Show as Lines" THEN
                                                                  DeleteFieldValues;
                                                              END;

                                                   CaptionML=[DEU=Zeilenansicht;
                                                              ENU=Show as Lines];
                                                   OptionCaptionML=[DEU=Bilanz,GuV,Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,,Periode,Globale Dimension 1,Globale Dimension 2,,,,Lagerwert,Artikel Lagerwert,Sachkonto;
                                                                    ENU=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account];
                                                   OptionString=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account }
    { 111 ;   ;Show as Columns     ;Option        ;InitValue=Inventory Valuation;
                                                   OnValidate=BEGIN
                                                                IF "Show as Columns" <> xRec."Show as Columns" THEN
                                                                  DeleteFieldValues;
                                                              END;

                                                   CaptionML=[DEU=Spaltenansicht;
                                                              ENU=Show as Columns];
                                                   OptionCaptionML=[DEU=Bilanz,GuV,Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,,Periode,Globale Dimension 1,Globale Dimension 2,,,,Lagerwert,Artikel Lagerwert,Sachkonto;
                                                                    ENU=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account];
                                                   OptionString=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account }
    { 112 ;   ;Filter Code         ;Code20        ;TableRelation="Invt G/L Recon. Filter CIN";
                                                   OnValidate=BEGIN
                                                                IF "Filter Code" <> xRec."Filter Code" THEN
                                                                  DeleteFieldValues;
                                                              END;

                                                   CaptionML=[DEU=Filter Code;
                                                              ENU=Filter Code] }
    { 1000;   ;Saved Values Exists ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Invt G/L Recon. Code Value CIN" WHERE (Invt G/L Recon. Code=FIELD(Code)));
                                                   CaptionML=[DEU=Gespeicherte Werte vorhanden;
                                                              ENU=Saved Values Exists];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvtGLReconRepMgt@5447700 : Codeunit 5447817;
      Window@5447701 : Dialog;
      Text000@5447703 : TextConst 'DEU=Werte werden berechnet...\#1########## #2########## \Zeilenwert   #3##########\Spaltenwert  #4##########.;ENU=Value are calculated...\#1########## #2##########\Line Value  #3##########\Column Value   #4###########.';
      Text001@5447704 : TextConst 'DEU=Wollen Sie die gespeicherten Werte wirklich neu berechnen?;ENU=Do you really want to recalculate the values?';
      Text002@5447705 : TextConst 'DEU=Wollen Sie den Abstimmungscode wirklich zurÅcksetzen?;ENU=Do your really ewatn to reset Reconciliation Code?';
      Text106@5447702 : TextConst 'DEU=<OHNE>;ENU=<BLANK>';

    PROCEDURE RestoreWarnings@5447700();
    VAR
      InvtGLReconEntry@5447700 : Record 5447800;
      InvtGLReconEntryGL@5447701 : Record 5447805;
      InvtGLReconCodeEntry@5447702 : Record 5447809;
    BEGIN
      IF GUIALLOWED THEN
        IF NOT CONFIRM(Text002,FALSE) THEN
          EXIT;

      TESTFIELD(Status,Status::Open);

      InvtGLReconEntry.SETCURRENTKEY("Invt G/L Recon. Code");
      InvtGLReconEntry.SETRANGE("Invt G/L Recon. Code",Code);
      InvtGLReconEntry.MODIFYALL(Warning,TRUE);
      InvtGLReconEntry.MODIFYALL("Invt G/L Recon. Code",'');

      InvtGLReconEntryGL.SETCURRENTKEY("Invt G/L Recon. Code");
      InvtGLReconEntryGL.SETRANGE("Invt G/L Recon. Code",Code);
      InvtGLReconEntryGL.MODIFYALL(Warning,TRUE);
      InvtGLReconEntryGL.MODIFYALL("Invt G/L Recon. Code",'');

      InvtGLReconCodeEntry.SETCURRENTKEY("Invt G/L Recon. Code");
      InvtGLReconCodeEntry.SETRANGE("Invt G/L Recon. Code",Code);
      InvtGLReconCodeEntry.DELETEALL;
    END;

    PROCEDURE CalcFieldValues@5447701();
    VAR
      RowDimCodeBuf@5447700 : Record 367;
      ColDimCodeBuf@5447701 : Record 367;
      InvtGLReconCodeFieldValue@5447702 : Record 5447807;
      InvtGLReconEntryFilter@5447703 : Record 5447800;
      ItemLedgEntry@5447712 : Record 32;
      PeriodType@5447706 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      DateFilter@5447705 : Text[30];
      InternalDateFilter@5447704 : Text[30];
      PeriodInitialized@5447708 : Boolean;
      FilterCode@5447707 : Code[20];
      SeparatorPos@5447709 : Integer;
      TotalingFilter@5447710 : Text[250];
      LineValuesZero@5447711 : Boolean;
    BEGIN
      IF GUIALLOWED THEN
        IF NOT CONFIRM(Text001,FALSE) THEN
          EXIT;

      Window.OPEN(Text000);
      Window.UPDATE(1,TABLECAPTION);
      Window.UPDATE(2,Code);

      InvtGLReconCodeFieldValue.SETRANGE("Invt G/L Recon. Code",Code);
      InvtGLReconCodeFieldValue.DELETEALL;

      PeriodType := PeriodType::Month;
      IF ("Starting Date" <> 0D) OR ("Ending Date" <> 0D) THEN BEGIN
        InvtGLReconEntryFilter.SETRANGE("Posting Date",0D,"Ending Date");
        DateFilter := InvtGLReconEntryFilter.GETFILTER("Posting Date");
        InternalDateFilter := DateFilter;
      END;

      FilterCode := "Filter Code";

      IF InvtGLReconRepMgt.FindRec(
          "Show as Lines",RowDimCodeBuf,'-',
          InvtGLReconEntryFilter,
          PeriodType,DateFilter,PeriodInitialized,InternalDateFilter,
          TRUE,FALSE,"Show as Columns"="Show as Columns"::"G/L Account")
      THEN
        REPEAT
          IF InvtGLReconRepMgt.FindRec(
            "Show as Columns",ColDimCodeBuf,'-',
            InvtGLReconEntryFilter,
            PeriodType,DateFilter,PeriodInitialized,InternalDateFilter,
            FALSE,FALSE,"Show as Lines"="Show as Lines"::"G/L Account")
          THEN BEGIN
            LineValuesZero := TRUE;
            REPEAT
              Window.UPDATE(3,RowDimCodeBuf.Name);
              Window.UPDATE(4,ColDimCodeBuf.Name);

              InvtGLReconCodeFieldValue.INIT;
              InvtGLReconCodeFieldValue."Invt G/L Recon. Code" := Code;
              InvtGLReconCodeFieldValue."Row Code" := RowDimCodeBuf.Code;
              InvtGLReconCodeFieldValue."Column Code" := ColDimCodeBuf.Code;
              InvtGLReconCodeFieldValue.Value := InvtGLReconRepMgt.CalcCell(
                FilterCode,
                InvtGLReconEntryFilter,
                "Show as Lines",RowDimCodeBuf,
                "Show as Columns",ColDimCodeBuf);
              InvtGLReconCodeFieldValue."Per Date" := "Ending Date";
              InvtGLReconCodeFieldValue."Is Totaled Value" := RowDimCodeBuf."Show in Bold";
              InvtGLReconCodeFieldValue."Has Warning" := InvtGLReconRepMgt.GetWarnings;

              InvtGLReconCodeFieldValue."Row Name" := RowDimCodeBuf.Name;
              IF RowDimCodeBuf.Totaling <> '~' THEN
                InvtGLReconCodeFieldValue."Row Totaling 1" := RowDimCodeBuf.Totaling;
              TotalingFilter := RowDimCodeBuf.Totaling;
              SeparatorPos := STRPOS(TotalingFilter,'#|');
              IF SeparatorPos > 0 THEN BEGIN
                InvtGLReconCodeFieldValue."Row Totaling 1" := '';
                CASE RowDimCodeBuf.Indentation OF
                  0: InvtGLReconCodeFieldValue."Row Totaling 1" := COPYSTR(TotalingFilter,1,SeparatorPos-1);
                  1:
                    BEGIN
                      IF COPYSTR(TotalingFilter,1,SeparatorPos-1) <> '~' THEN
                        InvtGLReconCodeFieldValue."Row Totaling 1" := COPYSTR(TotalingFilter,1,SeparatorPos-1);
                      InvtGLReconCodeFieldValue."Row Totaling 2" :=  COPYSTR(TotalingFilter,SeparatorPos+2);
                    END;
                  2:
                    BEGIN
                      IF COPYSTR(TotalingFilter,1,SeparatorPos-1) <> '~' THEN
                        InvtGLReconCodeFieldValue."Row Totaling 1" := COPYSTR(TotalingFilter,1,SeparatorPos-1);

                      TotalingFilter :=  COPYSTR(TotalingFilter,SeparatorPos+2);
                      SeparatorPos := STRPOS(TotalingFilter,'#|');
                      InvtGLReconCodeFieldValue."Row Totaling 2" :=  COPYSTR(TotalingFilter,1,SeparatorPos-1);

                      TotalingFilter := COPYSTR(TotalingFilter,SeparatorPos+2);
                      InvtGLReconCodeFieldValue."Row Totaling 3" := TotalingFilter;
                    END;
                  3:
                    BEGIN
                      IF COPYSTR(TotalingFilter,1,SeparatorPos-1) <> '~' THEN
                        InvtGLReconCodeFieldValue."Row Totaling 1" := COPYSTR(TotalingFilter,1,SeparatorPos-1);
                      TotalingFilter :=  COPYSTR(TotalingFilter,SeparatorPos+2);
                      SeparatorPos := STRPOS(TotalingFilter,'#|');
                      InvtGLReconCodeFieldValue."Row Totaling 2" :=  COPYSTR(TotalingFilter,1,SeparatorPos-1);

                      TotalingFilter := COPYSTR(TotalingFilter,SeparatorPos+2);
                      SeparatorPos := STRPOS(TotalingFilter,'#|');
                      InvtGLReconCodeFieldValue."Row Totaling 3" := COPYSTR(TotalingFilter,1,SeparatorPos-1);

                      TotalingFilter := COPYSTR(TotalingFilter,SeparatorPos+2);
                      InvtGLReconCodeFieldValue."Row Totaling 4" := TotalingFilter;
                    END;
                END;
              END;
              InvtGLReconCodeFieldValue."Column Name" := ColDimCodeBuf.Name;

              InvtGLReconCodeFieldValue.INSERT;

              LineValuesZero := LineValuesZero AND (InvtGLReconCodeFieldValue.Value = 0);
            UNTIL InvtGLReconRepMgt.NextRec(
              "Show as Columns",ColDimCodeBuf,1,
              InvtGLReconEntryFilter,
              PeriodType,DateFilter,
              FALSE,
              "Show as Lines" = "Show as Lines"::"G/L Account") = 0;

            IF LineValuesZero THEN BEGIN
              InvtGLReconCodeFieldValue.SETRANGE("Row Code",InvtGLReconCodeFieldValue."Row Code");
              InvtGLReconCodeFieldValue.MODIFYALL("Are Line Values Zero",LineValuesZero);
              InvtGLReconCodeFieldValue.SETRANGE("Row Code");
            END;

            IF NOT InvtGLReconCodeFieldValue."Is Totaled Value" THEN BEGIN
              InvtGLReconCodeFieldValue.SETRANGE("Row Code",InvtGLReconCodeFieldValue."Row Code");

              CASE InvtGLReconCodeFieldValue."Row Totaling 4" OF
                '':
                  ItemLedgEntry.SETRANGE("Lot No.");
                Text106:
                  ItemLedgEntry.SETRANGE("Lot No.",'');
                ELSE
                  ItemLedgEntry.SETRANGE("Lot No.",InvtGLReconCodeFieldValue."Row Totaling 4");
              END;
              ItemLedgEntry.SETRANGE(Positive,TRUE);
              ItemLedgEntry.SETCURRENTKEY("Item No.","Posting Date");
              IF ItemLedgEntry.FINDFIRST THEN BEGIN
                InvtGLReconCodeFieldValue.MODIFYALL("Item Expiration Date",ItemLedgEntry."Expiration Date");
                InvtGLReconCodeFieldValue.MODIFYALL("Posting Date First LE",ItemLedgEntry."Posting Date");
              END;
              InvtGLReconCodeFieldValue.SETRANGE("Row Code");
            END;
          END;
        UNTIL InvtGLReconRepMgt.NextRec(
          "Show as Lines",RowDimCodeBuf,1,
          InvtGLReconEntryFilter,
          PeriodType,DateFilter,
          TRUE,
          "Show as Columns" = "Show as Columns"::"G/L Account") = 0;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE DeleteFieldValues@5447702();
    VAR
      InvtGLReconCodeFieldValue@5447700 : Record 5447807;
    BEGIN
      InvtGLReconCodeFieldValue.SETRANGE("Invt G/L Recon. Code",Code);
      IF NOT InvtGLReconCodeFieldValue.ISEMPTY THEN
        InvtGLReconCodeFieldValue.DELETEALL;
    END;

    PROCEDURE DeleteAllFieldValues@5447703();
    VAR
      InvtGLReconCodeFieldValue@5447700 : Record 5447807;
    BEGIN
      IF NOT InvtGLReconCodeFieldValue.ISEMPTY THEN
        InvtGLReconCodeFieldValue.DELETEALL;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447809 Invt G/L Recon Code Entry CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;TableRelation=IF (G/L Entry No.=CONST(0)) "Invt G/L Recon. PLUS Entry CIN" WHERE (G/L Entry No.=FIELD(G/L Entry No.))
                                                                 ELSE IF (G/L Entry No.=FILTER(<>0)) "Invt G/L Recon. Entry G/L CIN"."Entry No.";
                                                   CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 10  ;   ;Invt G/L Recon. Code;Code20        ;TableRelation="Invt G/L Recon. Code CIN";
                                                   CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Code;
                                                              ENU=Inventory - G/L Reconciliation PLUS Code] }
    { 9900000;;G/L Entry No.       ;Integer       ;TableRelation="Invt G/L Recon. Entry G/L CIN"."G/L Entry No.";
                                                   CaptionML=[DEU=Sachposten Lfd. Nr.;
                                                              ENU=G/L Entry No.] }
  }
  KEYS
  {
    {    ;Entry No.,G/L Entry No.                 ;Clustered=Yes }
    {    ;Invt G/L Recon. Code                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447810 Invt G/L Recon. Filter CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Filter;
               ENU=Invt G/L Recon. PLUS Filter];
    LookupPageID=Page5447810;
    DrillDownPageID=Page5447810;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[DEU=Code;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[DEU=Name;
                                                              ENU=Name] }
    { 4   ;   ;Item Ledger Entry Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Item Ledger Entry Type Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Item Ledger Entry Type Filter"),CurrFieldNo <> FIELDNO("Item Ledger Entry Type Filter"));
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenartenfilter;
                                                              ENU=Item Ledger Entry Type Filter] }
    { 5   ;   ;Value Entry Type Filter;Text250    ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Value Entry Type Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Value Entry Type Filter"),CurrFieldNo <> FIELDNO("Value Entry Type Filter"));
                                                              END;

                                                   CaptionML=[DEU=Wertpostenartenfilter;
                                                              ENU=Value Entry Type Filter] }
    { 13  ;   ;Item Ledg. Entry Qty. Filter;Text250;
                                                   OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Item Ledg. Entry Qty. Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Item Ledg. Entry Qty. Filter"),FALSE);
                                                              END;

                                                   CaptionML=[DEU=Artikelpostenmengen Filter;
                                                              ENU=Item Ledger Entry Quantity] }
    { 14  ;   ;Invoiced Quantity Filter;Text10    ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Invoiced Quantity Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Invoiced Quantity Filter"),FALSE);
                                                              END;

                                                   CaptionML=[DEU=Fakturierte Menge Filter;
                                                              ENU=Invoiced Quantity Filter] }
    { 43  ;   ;Cost Amount (Actual) Filter;Text10 ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Cost Amount (Actual) Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Cost Amount (Actual) Filter"),FALSE);
                                                              END;

                                                   CaptionML=[DEU=Einstandsbetrag (tatsÑchl.) Filter;
                                                              ENU=Cost Amount (Actual) Filter];
                                                   AutoFormatType=1 }
    { 79  ;   ;Document Type Filter;Text250       ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Document Type Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Document Type Filter"),TRUE);
                                                              END;

                                                   CaptionML=[DEU=Belegartenfilter;
                                                              ENU=Document Type Filter] }
    { 98  ;   ;Expected Cost Filter;Text10        ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Expected Cost Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Expected Cost Filter"),FALSE);
                                                              END;

                                                   CaptionML=[DEU=Soll-Kosten Filter;
                                                              ENU=Expected Cost Filter] }
    { 106 ;   ;Variance Type Filter;Text250       ;OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Variance Type Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Variance Type Filter"),TRUE);
                                                              END;

                                                   CaptionML=[DEU=Abweichungsartenfilter;
                                                              ENU=Variance Type Filter] }
    { 151 ;   ;Cost Amount (Expected) Filter;Text10;
                                                   OnValidate=BEGIN
                                                                InvtGLReconRepMgmt.ValidateFilter(
                                                                  "Cost Amount (Expected) Filter",DATABASE::"Invt G/L Recon. Filter CIN",
                                                                  FIELDNO("Cost Amount (Expected) Filter"),FALSE);
                                                              END;

                                                   CaptionML=[DEU=Einstandsbetrag (erwartet) Filter;
                                                              ENU=Cost Amount (Expected) Filter];
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Sie kînnen nicht %1 fÅr %2 angeben.;ENU=You cannot specify a %1 for %2.';
      Text001@1001 : TextConst 'DEU=EINKAUF;ENU=PURCHASES';
      Text002@1002 : TextConst 'DEU=Einkaufsbuchungen;ENU=Purchase Bookings';
      Text003@1003 : TextConst 'DEU=EK/VK;ENU=PURCHASES/SALES';
      Text004@1004 : TextConst 'DEU=Einkaufs-/Verkaufsanalyse;ENU=Purchase/Sales Analysis';
      Text005@1005 : TextConst 'DEU=FAANALYSE;ENU=PRODORDER ANALYSIS';
      Text006@1006 : TextConst 'DEU=Fertigungsauftragsanalyse;ENU=Production Order Analysis';
      Text007@1007 : TextConst 'DEU=ISTMELDUNG;ENU=OUTPUT';
      Text008@1008 : TextConst 'DEU=Istmeldungen;ENU=Output Bookings';
      Text009@1009 : TextConst 'DEU=LIEF_NICHT_FAKT;ENU=SHIP_NOT_INVOICED';
      Text010@1010 : TextConst 'DEU=Geliefert, nicht fakturiert;ENU=Ship, but not invoiced';
      Text011@1011 : TextConst 'DEU=MANUELL;ENU=MANUAL';
      Text012@1012 : TextConst 'DEU=Manuelle Buchungen;ENU=Manual Bookings';
      Text013@1013 : TextConst 'DEU=MATABW;ENU=MATVARI';
      Text014@1014 : TextConst 'DEU=Materialabweichung FA;ENU=Material Variances';
      Text015@1015 : TextConst 'DEU=NEUBEWERTUNG;ENU=REVALUATION';
      Text016@1016 : TextConst 'DEU=Neubewertungen;ENU=Revaluation Bookings';
      Text017@1017 : TextConst 'DEU=NEUBEW_EINKAUF;ENU=REVAL_PURCHASE';
      Text018@1018 : TextConst 'DEU=Neubewertete EinkÑufe;ENU=Revalued Purchase Bookings';
      Text019@1019 : TextConst 'DEU=VERBRAUCH;ENU=CONSUMPTION';
      Text020@1020 : TextConst 'DEU=Verbrauch in FA;ENU=Consumption to Prod. Orders';
      Text021@1021 : TextConst 'DEU=VERKAUF;ENU=SALES';
      Text022@1022 : TextConst 'DEU=Verkaufsbuchungen;ENU=Sales Bookings';
      Text023@1023 : TextConst 'DEU=ZEITBUCH;ENU=TIMEBOOK';
      Text024@1024 : TextConst 'DEU=BDE Buchungen auf FA;ENU=Prod. Order Time Bookings';
      Text025@1025 : TextConst 'DEU=NUR FAKTURIERT;ENU=ONLY INVOICED';
      Text026@1026 : TextConst 'DEU=Nur fakturiert;ENU=Only invoiced';
      Text027@1027 : TextConst 'DEU=Lagerbestand;ENU=Inventory';
      Text028@1028 : TextConst 'DEU=LAGERBEST;ENU=INVENTORY';
      Text029@1029 : TextConst 'DEU=Verbrauch;ENU=Consumption';
      Text030@1030 : TextConst 'DEU=VERBRAUCH;ENU=CONSUMP';
      Text031@1031 : TextConst 'DEU=Abgang;ENU=Negative Adjustment';
      Text032@1032 : TextConst 'DEU=ABGANG;ENU=N-ADJTM';
      Text033@1033 : TextConst 'DEU=Istmeldung;ENU=Output';
      Text034@1034 : TextConst 'DEU=ISTMELD;ENU=OUTPUT';
      Text035@1035 : TextConst 'DEU=Zugang;ENU=Postive Adjustment';
      Text036@1036 : TextConst 'DEU=ZUGANG;ENU=P-ADJTM';
      Text037@1037 : TextConst 'DEU=Umlagerung;ENU=Transfer';
      Text038@1038 : TextConst 'DEU=UMLAG;ENU=TRANSFER';
      Text039@1039 : TextConst 'DEU=Verbrauchsmenge;ENU=Consumption Quantity';
      Text040@1040 : TextConst 'DEU=VERBRMGE;ENU=CONSUMPQTY';
      Text041@1041 : TextConst 'DEU=Lagermenge;ENU=Inventory Quantity';
      Text042@1042 : TextConst 'DEU=LAGERMGE;ENU=INVT-QTY';
      Text043@1043 : TextConst 'DEU=Abgangsmenge;ENU=Neg. Adjmt. Quantity';
      Text044@1044 : TextConst 'DEU=ABGANGSMGE;ENU=N-ADJTMQTY';
      Text045@1045 : TextConst 'DEU=Fertig gestellte Menge;ENU=Output Quantity';
      Text046@1046 : TextConst 'DEU=FERTIG-MGE;ENU=OUTPUT-QTY';
      Text047@1047 : TextConst 'DEU=Zugangsmenge;ENU=Pos. Adjmt. Quantity';
      Text048@1048 : TextConst 'DEU=ZUGANGSMGE;ENU=P-ADJTMQTY';
      Text049@1049 : TextConst 'DEU=Umlagerungsmenge;ENU=Transfer Quantity';
      Text050@1050 : TextConst 'DEU=UMLAGMGE;ENU=TRANS-QTY';
      Text051@1051 : TextConst 'DEU=Einstandspreis (fest);ENU=Standard Cost';
      Text052@1052 : TextConst 'DEU=EINSTPREIS;ENU=STDCOST';
      Text053@1053 : TextConst 'DEU=Indirekte Kosten %;ENU=Indirect Cost %';
      Text054@1054 : TextConst 'DEU=KOSTENPROZ;ENU=INDCOSTPCT';
      Text055@1055 : TextConst 'DEU=Die %1 wurden neu erstellt.;ENU=The %1 have been recreated.';
      InvtGLReconRepMgmt@1056 : Codeunit 5447817;

    [External]
    PROCEDURE ResetDefaultAnalysisTypes@1(ShowMessage@1000 : Boolean);
    VAR
      ItemStatBuf@1001 : Record 5821;
    BEGIN
      InsertItemAnalysisType(
        Text001,
        Text002,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text003,
        Text004,
        STRSUBSTNO('=%1|%2',
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text005,
        Text006,
        STRSUBSTNO('=%1|%2|''%3''',
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::" ")),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text007,
        Text008,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text009,
        Text010,
        STRSUBSTNO('=%1|%2',
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '','','',
        '','','','','<>0');
      InsertItemAnalysisType(
        Text011,
        Text012,
        STRSUBSTNO('=%1|%2|''%3''',
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt."),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt."),
          FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text013,
        Text014,
        '',
        '',
        '','','','','',
        FORMAT(ItemStatBuf."Variance Type Filter"::Material),
        '');
      InsertItemAnalysisType(
        Text015,
        Text016,
        '',
        FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation),
        '','',
        '','','','','');
      InsertItemAnalysisType(
        Text017,
        Text018,
        STRSUBSTNO('=%1',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation),
        '','',
        '','','','','');
      InsertItemAnalysisType(
        Text019,
        Text020,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text021,
        Text022,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text023,
        Text024,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::" ")),
        '','','',
        '','','','','');
      InsertItemAnalysisType(
        Text025,
        Text026,
        '',
        '','','<>0',
        '','','','','');
      {
      InsertItemAnalysisType(
        Text026,
        Text025,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"3");

      InsertItemAnalysisType(
        Text028,
        Text027,
        '<>'' ''',
        '',
        "Value Type"::"3");
      InsertItemAnalysisType(
        Text030,
        Text029,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::"3");
      InsertItemAnalysisType(
        Text032,
        Text031,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::"3");
      InsertItemAnalysisType(
        Text034,
        Text033,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"3");
      InsertItemAnalysisType(
        Text036,
        Text035,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::"3");
      InsertItemAnalysisType(
        Text038,
        Text037,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::"3");

      InsertItemAnalysisType(
        Text040,
        Text039,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::"1");
      InsertItemAnalysisType(
        Text042,
        Text041,
        '<>'' ''',
        '',
        "Value Type"::"1");
      InsertItemAnalysisType(
        Text044,
        Text043,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::"1");
      InsertItemAnalysisType(
        Text046,
        Text045,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        '',
        "Value Type"::"1");
      InsertItemAnalysisType(
        Text048,
        Text047,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::"1");
      InsertItemAnalysisType(
        Text050,
        Text049,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::"1");

      InsertItemAnalysisType(
        Text052,
        Text051,
        '',
        '',
        "Value Type"::"6");
      InsertItemAnalysisType(
        Text054,
        Text053,
        '',
        '',
        "Value Type"::"7");
      }

      IF ShowMessage THEN
        MESSAGE(Text055,TABLECAPTION);
    END;

    LOCAL PROCEDURE InsertItemAnalysisType@2(Code2@1006 : Code[20];Name2@1000 : Text[50];ItemLedgEntryTypeFilter@1001 : Text[250];ValueEntryTypeFilter@1002 : Text[250];ItemLedgEntryQtyFilter@5447800 : Text[10];InvoiceQtyFilter@5447801 : Text[10];CostAmtActualFilter@5447802 : Text[10];DocTypeFilter@5447803 : Text[250];ExpectedCostFilter@5447804 : Text[10];VarianceTypeFilter@5447805 : Text[250];CostAmtExpectedFilter@5447806 : Text[10]);
    VAR
      InvtGLReconFilter@1004 : Record 5447810;
    BEGIN
      WITH InvtGLReconFilter DO BEGIN
        INIT;
        Code := Code2;
        Name := Name2;
        VALIDATE("Item Ledger Entry Type Filter",ItemLedgEntryTypeFilter);
        VALIDATE("Value Entry Type Filter",ValueEntryTypeFilter);
        VALIDATE("Item Ledg. Entry Qty. Filter",ItemLedgEntryQtyFilter);
        VALIDATE("Invoiced Quantity Filter",InvoiceQtyFilter);
        VALIDATE("Cost Amount (Actual) Filter",CostAmtActualFilter);
        VALIDATE("Document Type Filter",DocTypeFilter);
        VALIDATE("Expected Cost Filter",ExpectedCostFilter);
        VALIDATE("Variance Type Filter",VarianceTypeFilter);
        VALIDATE("Cost Amount (Expected) Filter",CostAmtExpectedFilter);
        IF NOT INSERT(TRUE) THEN
          MODIFY(TRUE);
      END;
    END;

    PROCEDURE GetFilterAsText@5447800() : Text;
    VAR
      InvtGLReconBuf@5447800 : Record 5447800;
    BEGIN
      WITH InvtGLReconBuf DO BEGIN
        IF "Item Ledger Entry Type Filter" <> '' THEN
          SETFILTER("Item Ledger Entry Type","Item Ledger Entry Type Filter");
        IF "Value Entry Type Filter" <> '' THEN
          SETFILTER("Entry Type","Value Entry Type Filter");
        IF "Item Ledg. Entry Qty. Filter" <> '' THEN
          SETFILTER("Item Ledger Entry Quantity", "Item Ledg. Entry Qty. Filter");
        IF "Invoiced Quantity Filter" <> '' THEN
          SETFILTER("Invoiced Quantity","Invoiced Quantity Filter");
        IF "Cost Amount (Actual) Filter" <> '' THEN
          SETFILTER("Cost Amount (Actual)", "Cost Amount (Actual) Filter");
        IF "Document Type Filter" <> '' THEN
          SETFILTER("Document Type","Document Type Filter");
        IF "Expected Cost Filter" <> '' THEN
          SETFILTER(InvtGLReconBuf."Expected Cost","Expected Cost Filter");
        IF "Variance Type Filter" <> '' THEN
          SETFILTER("Variance Type","Variance Type Filter");
        IF "Cost Amount (Expected) Filter" <> '' THEN
          SETFILTER("Cost Amount (Expected)","Cost Amount (Expected) Filter");

        EXIT(GETFILTERS);
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5447815 Invt G/L Recon Field Value CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lager - Sachpostenabstimmung PLUS Feldwert;
               ENU=Invt GL Recon PLUS Field Value];
  }
  FIELDS
  {
    { 1   ;   ;Row Code            ;Code20        ;CaptionML=[DEU=Zeilenref.-Nr.;
                                                              ENU=Row Ref. No.] }
    { 2   ;   ;Column Code         ;Code20        ;CaptionML=[DEU=Spaltennr.;
                                                              ENU=Column No.] }
    { 3   ;   ;Value               ;Decimal       ;CaptionML=[DEU=Wert;
                                                              ENU=Value];
                                                   AutoFormatType=1 }
    { 4   ;No ;Has Error           ;Boolean       ;CaptionML=[DEU=Fehler;
                                                              ENU=Has Error] }
    { 5   ;No ;Period Error        ;Boolean       ;CaptionML=[DEU=Periodenfehler;
                                                              ENU=Period Error] }
    { 6   ;No ;Formula Error       ;Boolean       ;CaptionML=[DEU=Formelfehler;
                                                              ENU=Formula Error] }
    { 7   ;No ;Cyclic Error        ;Boolean       ;CaptionML=[DEU=Zyklischer Fehler;
                                                              ENU=Cyclic Error] }
    { 40  ;   ;Has Warning         ;Boolean       ;CaptionML=[DEU=Warnung;
                                                              ENU=Has Warning] }
  }
  KEYS
  {
    {    ;Row Code,Column Code                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5447816 Invt G/L Recon Report Name CIN
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CIN-ALUPG;
  }
  PROPERTIES
  {
    DataCaptionFields=Name,Description;
    CaptionML=[DEU=Lager - Sachkontenabstimmung PLUS Berichtsname;
               ENU=Invt G/L Recon. PLUS Report Name];
    LookupPageID=Page5447816;
  }
  FIELDS
  {
    { 2   ;   ;Name                ;Code20        ;CaptionML=[DEU=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 10  ;   ;Show as Lines       ;Option        ;InitValue=Income Statement;
                                                   CaptionML=[DEU=Zeilenansicht;
                                                              ENU=Show as Lines];
                                                   OptionCaptionML=[DEU=Bilanz,GuV,Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,,Periode,Globale Dimension 1,Globale Dimension 2,,,,Lagerwert,Artikel Lagerwert,Sachkonto;
                                                                    ENU=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account];
                                                   OptionString=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account }
    { 11  ;   ;Show as Columns     ;Option        ;InitValue=Balance Sheet;
                                                   CaptionML=[DEU=Spaltenansicht;
                                                              ENU=Show as Columns];
                                                   OptionCaptionML=[DEU=Bilanz,GuV,Artikel,Artikelverfolgung,Artikelkategorie,,,,Produktbuchungsgruppe,,Lagerbuchungsgruppe,,Lagerort,,Periode,Globale Dimension 1,Globale Dimension 2,,,,Lagerwert,Artikel Lagerwert,Sachkonto;
                                                                    ENU=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account];
                                                   OptionString=Balance Sheet,Income Statement,Item,Item Tracking,Item Category,,,,Gen. Prod. Posting Group,,Inventory Posting Group,,Location,,Periode,Global Dimension 1,Global Dimension 2,,,,Inventory Valuation,Item Inventory Valuation,G/L Account }
    { 12  ;   ;Filter Code         ;Code20        ;TableRelation="Invt G/L Recon. Filter CIN";
                                                   CaptionML=[DEU=Filter Code;
                                                              ENU=Filter Code] }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5448000 Costing Policy Entry CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
    Permissions=TableData 5448000=rim;
    CaptionML=[DEU=Werteflussstrategie Posten;
               ENU=Costing Policy Entry];
    LookupPageID=Page5448002;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 3   ;   ;First Item Ledger Entry No.;Integer;TableRelation="Item Ledger Entry";
                                                   CaptionML=[DEU=Erste Artikelposten Lfd. Nr.;
                                                              ENU=First Item Ledger Entry No.] }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.] }
    { 5   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 8   ;   ;Base Unit of Measure;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Basiseinheitencode;
                                                              ENU=Base Unit of Measure] }
    { 10  ;   ;Starting Date       ;Date          ;CaptionML=[DEU=Startdatum;
                                                              ENU=Starting Date] }
    { 21  ;   ;Costing Method      ;Option        ;CaptionML=[DEU=Lagerabgangsmethode;
                                                              ENU=Costing Method];
                                                   OptionCaptionML=[DEU=FIFO,LIFO,AusgewÑhlt,Durchschnitt,Standard;
                                                                    ENU=FIFO,LIFO,Specific,Average,Standard];
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 6500;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode;
                                                              ENU=Item Tracking Code] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.,Entry No.                       }
    {    ;Item No.,First Item Ledger Entry No.     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5448001 Costing Policy Worksheet CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
    Permissions=TableData 5448000=r;
    OnInsert=BEGIN
               TESTFIELD("Worksheet Name");
               TESTFIELD("Item No.");

               InsertCoPoWStndCostSKU;
             END;

    OnDelete=BEGIN
               DeleteCoPoWStndCostSKU;
             END;

    OnRename=BEGIN
               CheckCoPoWStndCostSKU;
             END;

    CaptionML=[DEU=Werteflussstrategie Vorschlag;
               ENU=Costing Policy Worksheet];
  }
  FIELDS
  {
    { 1   ;   ;Worksheet Name      ;Code10        ;TableRelation="Costing Policy Wks. Name CMC";
                                                   CaptionML=[DEU=Vorschlagsname;
                                                              ENU=Worksheet Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                "Costing Method" := CostPolicyMgt.GetCostingMethod("Item No.",0,0D);
                                                                "Item Tracking Code" := CostPolicyMgt.GetItemTrackingCode("Item No.",0,0D);
                                                                "New Item Tracking Code" := "Item Tracking Code";
                                                                "Base Unit of Measure" := CostPolicyMgt.GetBaseUnitOfMeasureCode("Item No.",0,0D);

                                                                GetItem("Item No.");
                                                                Item.TESTFIELD(Blocked,FALSE);
                                                                Description := Item.Description;
                                                              END;

                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 8   ;   ;Base Unit of Measure;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Basiseinheitencode;
                                                              ENU=Base Unit of Measure];
                                                   Editable=No }
    { 9   ;   ;New Base Unit of Measure;Code10    ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF ("New Base Unit of Measure" = "Base Unit of Measure") AND
                                                                  ("New Base Unit of Measure" <> '')
                                                                THEN
                                                                  FIELDERROR("New Base Unit of Measure");
                                                              END;

                                                   CaptionML=[DEU=Neue Basiseinheitencode;
                                                              ENU=New Base Unit of Measure] }
    { 21  ;   ;Costing Method      ;Option        ;InitValue=[ ];
                                                   CaptionML=[DEU=Lagerabgangsmethode;
                                                              ENU=Costing Method];
                                                   OptionCaptionML=[DEU="FIFO,LIFO,AusgewÑhlt,Durchschnitt,Standard, ";
                                                                    ENU="FIFO,LIFO,Specific,Average,Standard, "];
                                                   OptionString=[FIFO,LIFO,Specific,Average,Standard, ];
                                                   Editable=No }
    { 22  ;   ;Unit Cost           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Unit Cost" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost];
                                                   Editable=No }
    { 24  ;   ;Standard Cost       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Standard Cost" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[DEU=Einstandspreis (fest);
                                                              ENU=Standard Cost];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 25  ;   ;Last Direct Cost    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Last Direct Cost" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[DEU=EK-Preis (neuester);
                                                              ENU=Last Direct Unit Cost];
                                                   Editable=No }
    { 31  ;   ;New Costing Method  ;Option        ;InitValue=[ ];
                                                   OnValidate=BEGIN
                                                                IF "New Costing Method" = "Costing Method" THEN
                                                                  FIELDERROR("New Costing Method");

                                                                GetItem("Item No.");
                                                                CASE "New Costing Method" OF
                                                                  "New Costing Method"::Standard: "New Standard Cost" := Item."Standard Cost";
                                                                  "New Costing Method"::Specific: CheckItemTracking;
                                                                ELSE
                                                                  BEGIN
                                                                    "New Standard Cost" := 0;
                                                                    "Use New Standard Cost" := FALSE;
                                                                  END;
                                                                END;

                                                                UpdateCoPoWStndCostSKU;
                                                              END;

                                                   CaptionML=[DEU=Neue Lagerabgangsmethode;
                                                              ENU=New Costing Method];
                                                   OptionCaptionML=[DEU="FIFO,LIFO,AusgewÑhlt,Durchschnitt,Standard, ";
                                                                    ENU="FIFO,LIFO,Specific,Average,Standard, "];
                                                   OptionString=[FIFO,LIFO,Specific,Average,Standard, ] }
    { 33  ;   ;Use New Standard Cost;Boolean      ;OnValidate=BEGIN
                                                                TESTFIELD("New Costing Method","New Costing Method"::Standard);
                                                              END;

                                                   CaptionML=[DEU=Verwende Neuen Einst.-Preis (fest);
                                                              ENU=Use New Standard Cost] }
    { 34  ;   ;New Standard Cost   ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("New Costing Method","New Costing Method"::Standard);
                                                              END;

                                                   CaptionML=[DEU=Neuer Einstandspreis (fest);
                                                              ENU=New Standard Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 5700;   ;CoPoWStdCostSKUExist;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(CostPoliWksStndCostSKUCMC WHERE (Worksheet Name=FIELD(Worksheet Name),
                                                                                                      Item No.=FIELD(Item No.)));
                                                   CaptionML=[DEU=Neuer Einstandspreis (fest) - Lagerhaltungsdaten vorhanden;
                                                              ENU=New Unit Cost - Stockkeeping Units exists];
                                                   Editable=No }
    { 6500;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   CaptionML=[DEU=Artikelverfolgungscode;
                                                              ENU=Item Tracking Code];
                                                   Editable=No }
    { 6501;   ;New Item Tracking Code;Code10      ;TableRelation="Item Tracking Code";
                                                   OnValidate=BEGIN
                                                                GetItem("Item No.");
                                                                IF ("New Costing Method" = "New Costing Method"::Specific) AND
                                                                  ("New Item Tracking Code" = '')
                                                                THEN
                                                                  CheckItemTracking;
                                                              END;

                                                   CaptionML=[DEU=Neuer Artikelverfolgungscode;
                                                              ENU=New Item Tracking Code] }
  }
  KEYS
  {
    {    ;Worksheet Name,Item No.                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CostPolicyEntry@1000 : Record 5448000;
      Item@1001 : Record 27;
      Text000@1002 : TextConst 'DEU=Sie mÅssen zuerst die %1 lîschen.;ENU=You must delete the related %1 first.';
      CostPolicyMgt@5447560 : Codeunit 5448000;

    LOCAL PROCEDURE InsertCoPoWStndCostSKU@1();
    VAR
      SKU@1000 : Record 5700;
      CoPoWStndCostSKU@1001 : Record 5448003;
    BEGIN
      SKU.SETRANGE("Item No.","Item No.");
      IF NOT SKU.FINDSET(FALSE,FALSE) THEN
        EXIT;

      REPEAT
        CoPoWStndCostSKU.INIT;
        CoPoWStndCostSKU."Worksheet Name" := "Worksheet Name";
        CoPoWStndCostSKU."Item No." := "Item No.";
        CoPoWStndCostSKU."Location Code" := SKU."Location Code";
        CoPoWStndCostSKU."Variant Code" := SKU."Variant Code";
        CoPoWStndCostSKU.Description := Description;
        IF "New Costing Method" = "New Costing Method"::Standard THEN
          CoPoWStndCostSKU."New Standard Cost" := SKU."Standard Cost";
        CoPoWStndCostSKU."Use New Standard Cost" := "Use New Standard Cost";
        CoPoWStndCostSKU.INSERT;
      UNTIL SKU.NEXT = 0;
    END;

    LOCAL PROCEDURE DeleteCoPoWStndCostSKU@2();
    VAR
      CoPoWStndCostSKU@1000 : Record 5448003;
    BEGIN
      CoPoWStndCostSKU.SETRANGE("Worksheet Name","Worksheet Name");
      CoPoWStndCostSKU.SETRANGE("Item No.","Item No.");
      CoPoWStndCostSKU.DELETEALL;
    END;

    LOCAL PROCEDURE CheckCoPoWStndCostSKU@3();
    VAR
      CoPoWStndCostSKU@1000 : Record 5448003;
    BEGIN
      CoPoWStndCostSKU.SETRANGE("Worksheet Name","Worksheet Name");
      CoPoWStndCostSKU.SETRANGE("Item No.","Item No.");
      IF NOT CoPoWStndCostSKU.ISEMPTY THEN
        ERROR(Text000,CoPoWStndCostSKU.TABLECAPTION);
    END;

    LOCAL PROCEDURE UpdateCoPoWStndCostSKU@4();
    VAR
      CoPoWStndCostSKU@1000 : Record 5448003;
      SKU@1001 : Record 5700;
    BEGIN
      CoPoWStndCostSKU.SETRANGE("Worksheet Name","Worksheet Name");
      CoPoWStndCostSKU.SETRANGE("Item No.","Item No.");
      IF NOT CoPoWStndCostSKU.FINDSET(TRUE,FALSE) THEN
        EXIT;

      REPEAT
        IF "New Costing Method" = "New Costing Method"::Standard THEN BEGIN
          SKU.GET(CoPoWStndCostSKU."Location Code",CoPoWStndCostSKU."Item No.",CoPoWStndCostSKU."Variant Code");
          CoPoWStndCostSKU."New Standard Cost" := SKU."Standard Cost";
        END ELSE BEGIN
          CoPoWStndCostSKU."New Standard Cost" := 0;
          CoPoWStndCostSKU."Use New Standard Cost" := FALSE;
        END;
        CoPoWStndCostSKU.MODIFY;
      UNTIL CoPoWStndCostSKU.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckItemTracking@5();
    VAR
      ItemTrackCode@1000 : Record 6502;
    BEGIN
      IF "New Item Tracking Code" <> '' THEN
        EXIT;
      Item.TESTFIELD("Item Tracking Code");
      ItemTrackCode.GET(Item."Item Tracking Code");
      ItemTrackCode.TESTFIELD("SN Specific Tracking");
    END;

    LOCAL PROCEDURE GetItem@5448000(ItemNo@5448000 : Code[20]);
    BEGIN
      IF Item."No." <> ItemNo THEN
        Item.GET(ItemNo);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5448002 Costing Policy Wks. Name CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CostPolicyWksh.SETRANGE("Worksheet Name",Name);
               CostPolicyWksh.DELETEALL;
             END;

    CaptionML=[DEU=Werteflussstrategie Vorschlagname;
               ENU=Costing Policy Worksheet Name];
    LookupPageID=Page5448000;
  }
  FIELDS
  {
    { 1   ;   ;Name                ;Code10        ;CaptionML=[DEU=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CostPolicyWksh@1000 : Record 5448001;

    BEGIN
    END.
  }
}

OBJECT Table 5448003 CostPoliWksStndCostSKUCMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Neuer Einstandspreis (fest) - Lagerhaltungsdaten;
               ENU=New Unit Cost - Stockkeeping Units];
    LookupPageID=Page5448003;
  }
  FIELDS
  {
    { 1   ;   ;Worksheet Name      ;Code10        ;TableRelation="Costing Policy Wks. Name CMC";
                                                   CaptionML=[DEU=Vorschlagsname;
                                                              ENU=Worksheet Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation="Costing Policy Worksheet CMC"."Item No." WHERE (Worksheet Name=FIELD(Worksheet Name));
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.];
                                                   NotBlank=Yes }
    { 3   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 4   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code] }
    { 5   ;   ;New Standard Cost   ;Decimal       ;CaptionML=[DEU=Neuer Einstandspreis (fest);
                                                              ENU=New Standard Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 6   ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description] }
    { 7   ;   ;Unit Cost           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Stockkeeping Unit"."Unit Cost" WHERE (Item No.=FIELD(Item No.),
                                                                                                             Variant Code=FIELD(Variant Code),
                                                                                                             Location Code=FIELD(Location Code)));
                                                   CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost];
                                                   Editable=No }
    { 8   ;   ;Last Direct Cost    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Stockkeeping Unit"."Last Direct Cost" WHERE (Item No.=FIELD(Item No.),
                                                                                                                    Variant Code=FIELD(Variant Code),
                                                                                                                    Location Code=FIELD(Location Code)));
                                                   CaptionML=[DEU=EK-Preis (neuester);
                                                              ENU=Last Direct Unit Cost];
                                                   Editable=No }
    { 9   ;   ;Use New Standard Cost;Boolean      ;CaptionML=[DEU=Verwende Neuen Einst.-Preis (fest);
                                                              ENU=Use New Standard Cost] }
  }
  KEYS
  {
    {    ;Worksheet Name,Item No.,Location Code,Variant Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5448011 Avg. Cost Calc. Overview CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 5448000;;Cost Policy Type    ;Option        ;AccessByPermission=TableData 5448000=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
    { 5448001;;Costing Method      ;Option        ;InitValue=[ ];
                                                   AccessByPermission=TableData 5448000=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lagerabgangsmethode;
                                                              ENU=Costing Method];
                                                   OptionCaptionML=[DEU="FIFO,LIFO,AusgewÑhlt,Durchschnitt,Standard, ";
                                                                    ENU="FIFO,LIFO,Specific,Average,Standard, "];
                                                   OptionString=[FIFO,LIFO,Specific,Average,Standard, ] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5448012 Source Code Setup CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=PrimÑrschlÅssel;
                                                              ENU=Primary Key] }
    { 5448000;;Costing Policy Worksheet;Code10    ;TableRelation="Source Code";
                                                   AccessByPermission=TableData 5448000=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Werteflusstrategie Vorschlag;
                                                              ENU=Costing Policy Worksheet] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 5448013 Value Entry CMC
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=CMC-ALUPG;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.] }
    { 5448000;;Cost Policy Type    ;Option        ;AccessByPermission=TableData 5448000=R;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[DEU=Wertflussstrategieart;
                                                              ENU=Cost Policy Type];
                                                   OptionCaptionML=[DEU=" ,LagerabgangsmethodenÑnderung,Andere énderung";
                                                                    ENU=" ,Cost Method Change,Other Change"];
                                                   OptionString=[ ,Cost Method Change,Other Change] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Codeunit 5447995 UPG Inventory Apps 365
{
  OBJECT-PROPERTIES
  {
    Date=16.07.21;
    Time=12:00:00;
    Version List=UPGCPL-AL;
  }
  PROPERTIES
  {
    Subtype=Upgrade;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DataUpgradeMgt@1000000000 : Codeunit 9900;

    [TableSyncSetup]
    PROCEDURE GetTableSyncSetupW1@1004(VAR TableSynchSetup@1000 : Record 2000000135);
    BEGIN
      // The purpose of this method is to define how old and new tables will be available for dataupgrade

      // The method is called at a point in time where schema changes have not yet been synchronized to
      // the database so tables except virtual tables cannot be accessed

      // TableSynchSetup."Table ID":
      // Id of the table with schema changes (i.e the modified table).

      // TableSynchSetup."Upgrade Table ID":
      // Id of table where old data will be available in case the selected TableSynchSetup.Mode option is one of Copy or Move , otherwise 0

      // TableSynchSetup.Mode:
      // An option indicating how the data will be handled during synchronization
      // Check: Synchronize without saving data in the upgrade table, fails if there is data in the modified field/table
      // Copy: Synchronize with saving data in the upgrade table, the modified table contains data in matching fields
      // Move: Synchronize with moving the data in the upgrade table,the changed table is empty; the upgrade logic is handled only by application code
      // Force: Synchronize without saving data in the upgrade table, disregard if there is data in the modified field/table

      // Examples:
      // DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Sales Header",DATABASE::"UPG Sales Header",TableSynchSetup.Mode::Copy);
      // DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Payment Export Data",0,TableSynchSetup.Mode::Force);

      //Standard Objects
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Value Entry", DATABASE::"Value Entry - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Production Order",DATABASE::"Production Order - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Inventory Setup",DATABASE::"Inventory Setup - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"General Posting Setup",DATABASE::"Gen. Post. Setup - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Inventory Posting Setup",DATABASE::"Inv. Posting Setup - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Average Cost Calc. Overview",DATABASE::"Avg. Cost Calc. Ov. - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Source Code Setup",DATABASE::"Source Code Setup - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Inventory Adjmt. Entry (Order)", DATABASE::"InvAdjmt. Entry (Order) - Upg", TableSynchSetup.Mode::Copy);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::Item, 0, TableSynchSetup.Mode::Force);
      DataUpgradeMgt.SetTableSyncSetup(DATABASE::"Item Journal Line", 0, TableSynchSetup.Mode::Force);
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeValueEntry@1005();
    VAR
      UPGValueEntry@100000000 : Record 10400;
      ValueEntryCIN@100000001 : Record 5447704;
      ValueEntryCMC@100000002 : Record 5448013;
    BEGIN
      IF UPGValueEntry.FINDSET THEN
        REPEAT
          ValueEntryCIN.INIT;
          ValueEntryCIN."Entry No." := UPGValueEntry."Entry No.";
          ValueEntryCIN."Production Cost" := UPGValueEntry."Production Cost";
          ValueEntryCIN.INSERT;

          ValueEntryCMC.INIT;
          ValueEntryCMC."Entry No." := UPGValueEntry."Entry No.";
          ValueEntryCMC."Cost Policy Type" := UPGValueEntry."Cost Policy Type";
          ValueEntryCMC.INSERT;
        UNTIL UPGValueEntry.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeProductionOrder@1006();
    VAR
      UpgProductionOrder@100000000 : Record 10405;
      ProductionOrderCIN@100000001 : Record 5447703;
    BEGIN
      IF UpgProductionOrder.FINDSET THEN
        REPEAT
          ProductionOrderCIN.INIT;
          ProductionOrderCIN."No." := UpgProductionOrder."No.";
          ProductionOrderCIN.Status := UpgProductionOrder.Status;
          ProductionOrderCIN."Production Cost Posting to G/L" := UpgProductionOrder."Production Cost Posting to G/L";
          ProductionOrderCIN.INSERT;
        UNTIL UpgProductionOrder.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeGeneralPostingSetup@100000000();
    VAR
      UPGGenPostingSetup@100000000 : Record 10403;
      GeneralPostingSetupCIN@100000001 : Record 5447706;
    BEGIN
      IF UPGGenPostingSetup.FINDSET THEN
        REPEAT
          GeneralPostingSetupCIN.INIT;
          GeneralPostingSetupCIN."Gen. Bus. Posting Group" := UPGGenPostingSetup."Gen. Bus. Posting Group";
          GeneralPostingSetupCIN."Gen. Prod. Posting Group" := UPGGenPostingSetup."Gen. Prod. Posting Group";
          GeneralPostingSetupCIN."Direct Prod. Cost Account" := UPGGenPostingSetup."Direct Prod. Cost Account";
          GeneralPostingSetupCIN."Overhead Prod. Cost Acc." := UPGGenPostingSetup."Overhead Prod. Cost Account";
        UNTIL UPGGenPostingSetup.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeInventorySetup@100000001();
    VAR
      UPGInventorySetup@100000000 : Record 10404;
      InventorySetupCIN@100000001 : Record 5447702;
    BEGIN
      IF UPGInventorySetup.FINDSET THEN
        REPEAT
          InventorySetupCIN.INIT;
          InventorySetupCIN."Primary Key" := UPGInventorySetup."Primary Key";
          InventorySetupCIN."Prod. Cost Posting to G/L" := UPGInventorySetup."Production Cost Posting to G/L";
          InventorySetupCIN.INSERT;
        UNTIL UPGInventorySetup.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeInventoryPostingSetup@100000002();
    VAR
      UPGInvPostingSetup@100000003 : Record 10407;
      InvPostingSetupCIN@100000002 : Record 5447705;
    BEGIN
      IF UPGInvPostingSetup.FINDSET THEN
        REPEAT
          InvPostingSetupCIN.INIT;
          InvPostingSetupCIN."Location Code" := UPGInvPostingSetup."Location Code";
          InvPostingSetupCIN."Invt. Posting Group Code" := UPGInvPostingSetup."Invt. Posting Group Code";
          InvPostingSetupCIN."WIP Change Account" := UPGInvPostingSetup."WIP Change Account";
          InvPostingSetupCIN."Prod. Accr. Acc. (Interim)" := UPGInvPostingSetup."Prod. Accrual Acc. (Interim)";
          InvPostingSetupCIN."Prod. Accrual Account" := UPGInvPostingSetup."Prod. Accrual Account";
          InvPostingSetupCIN.INSERT;
        UNTIL UPGInvPostingSetup.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeAvgCostCalcOverview@100000005();
    VAR
      UpgAverageCostCalcOver@100000000 : Record 10402;
      AvgCostCalcOverCMC@100000001 : Record 5448011;
    BEGIN
      IF UpgAverageCostCalcOver.FINDSET THEN
        REPEAT
          AvgCostCalcOverCMC.INIT;
          AvgCostCalcOverCMC."Entry No." := UpgAverageCostCalcOver."Entry No.";
          AvgCostCalcOverCMC."Cost Policy Type" := UpgAverageCostCalcOver."Cost Policy Type";
          AvgCostCalcOverCMC."Costing Method" := UpgAverageCostCalcOver."Costing Method";
          AvgCostCalcOverCMC.INSERT;
        UNTIL UpgAverageCostCalcOver.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeSourceCodeSetup@100000004();
    VAR
      UPGSourceCodeSetup@100000000 : Record 10401;
      SourceCodeSetupIVA@100000001 : Record 5447563;
      SourceCodeSetupCMC@100000002 : Record 5448012;
    BEGIN
      IF UPGSourceCodeSetup.FINDSET THEN
        REPEAT
          SourceCodeSetupCMC.INIT;
          SourceCodeSetupCMC."Primary Key" := UPGSourceCodeSetup."Primary Key";
          SourceCodeSetupCMC."Costing Policy Worksheet" := UPGSourceCodeSetup."Costing Policy Worksheet";
          SourceCodeSetupCMC.INSERT;

          SourceCodeSetupIVA.INIT;
          SourceCodeSetupIVA."Primary Key" := UPGSourceCodeSetup."Primary Key";
          SourceCodeSetupIVA."IVA Item Valuation Journal" := UPGSourceCodeSetup."Item Valuation Journal";
          SourceCodeSetupIVA."IVA Valuation Post Cost" := UPGSourceCodeSetup."Valuation Post Cost";
          SourceCodeSetupIVA.INSERT;
        UNTIL UPGSourceCodeSetup.NEXT = 0;
    END;

    [UpgradePerCompany]
    PROCEDURE DataUpgradeInvtAdjmtEntryOrder@100000006();
    VAR
      UpgInvtAdjmtEntryOrder@100000000 : Record 10406;
      InvtAdjmtEntryOrderCIN@100000001 : Record 5447710;
    BEGIN
      IF UpgInvtAdjmtEntryOrder.FINDSET THEN
        REPEAT
          InvtAdjmtEntryOrderCIN.INIT;
          InvtAdjmtEntryOrderCIN."Order Type" := UpgInvtAdjmtEntryOrder."Order Type";
          InvtAdjmtEntryOrderCIN."Order No." := UpgInvtAdjmtEntryOrder."Order No.";
          InvtAdjmtEntryOrderCIN."Order Line No." := UpgInvtAdjmtEntryOrder."Order Line No.";
          InvtAdjmtEntryOrderCIN."Production Cost Posting to G/L" := UpgInvtAdjmtEntryOrder."Production Cost Posting to G/L";
          InvtAdjmtEntryOrderCIN.INSERT;
        UNTIL UpgInvtAdjmtEntryOrder.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

